<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="5/22/2017 5:08:22 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="SVIDBLUKMZ03"
  DTS:CreatorName="SVIDBLUKMZ03\Administrator"
  DTS:DTSID="{9BF4A23B-CE00-418E-905E-DDE04F42B5F3}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.1301.433"
  DTS:LocaleID="1033"
  DTS:ObjectName="DMVentas_BO"
  DTS:PackageType="5"
  DTS:VersionBuild="378"
  DTS:VersionGUID="{73F9FED7-2CC8-4CD3-8BA2-4B9E1AB9202B}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Abako.dtsx]"
      DTS:CreationName="FILE"
      DTS:DTSID="{68036BD7-574A-4340-9D90-B693A9F1810B}"
      DTS:ObjectName="Abako.dtsx">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="C:\SQL_\Deprecated\Visual Studio 2008\Projects\VentasComercialPresupuesto\VentasComercialPresupuesto\Abako.dtsx" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[HBAVENNAL]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{F2E0AA71-A3B9-4A38-9D3D-4B99A27A7915}"
      DTS:ObjectName="HBAVENNAL">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=192.168.5.23\B2C;User ID=ASSUser;Initial Catalog=HBAVENNAL;Provider=SQLNCLI11.1;Auto Translate=False;Application Name=SSIS-Package1-{B5F9214A-511E-428A-90DA-E1C7B631C0F2}LocalHost.HBAVENNAL;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAA4k6HQYtdmEeqU7aLZ7SeZgAAAAAIAAAARABUAFMAAAAQZgAAAAEAACAAAABAZ8XI5x9TwN/k0MkbrqNG/J8ca+ZRpOBBpqbjBLUKJwAAAAAOgAAAAAIAACAAAABOv+QsNMdrzqhpRisfsJf9knL4UGDve6QQGfRI6DcQbyAAAADkNXoiu3l2ys0dC00QIg4HCO685zcspfHLwQt4KgK/UEAAAAD3PBmX5aJcbce2/BRVfeL0mkRkRtt8k8j7X51aby/bSgVoX4x0va4iI9mWIWo15z8J+mwsiC07pT0D63rYXC6N</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[lukerFin03R]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{98A63E9E-EC2D-446A-9E05-D861495DE4CA}"
      DTS:ObjectName="lukerFin03R">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=192.168.1.62;User ID=sa;Initial Catalog=lukerFin;Provider=SQLNCLI11.1;Persist Security Info=True;Auto Translate=False;Application Name=SSIS-Package1-{B8F3234A-F7D6-42AF-B788-027A8DF2149F}SVIDBLUKMZ03.lukerFin;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAA4k6HQYtdmEeqU7aLZ7SeZgAAAAAIAAAARABUAFMAAAAQZgAAAAEAACAAAAB8WxIinys8eeGMwZrx6k7KAIWFe6fmOPGJPsCylkzKYAAAAAAOgAAAAAIAACAAAACHzQXDbQLhpJ45Zp9nCk/5AnDFqWTXjYmyPG5ILC3RMyAAAAD+9p0hFlVW+8g8+65g+5vo8hC2CW3v9mKB2Na3voISJEAAAAD0obLDpj6ywDX3+9N5l5vvPCHV358u0rb3Rhih0ukkO81AcnCH4dKTrqAI5/9stc+yncOhuOzh7wdg6FayDama</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[lukerVenR]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{F87F8D7B-1E05-4BA9-805D-51BA12DE78CA}"
      DTS:ObjectName="lukerVenR">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=192.168.1.62;User ID=sa;Initial Catalog=lukerVen;Provider=SQLNCLI11.1;Persist Security Info=True;Auto Translate=False;Application Name=SSIS-Package1-{B8F3234A-F7D6-42AF-B788-027A8DF2149F}SVIDBLUKMZ03.lukerFin;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAA4k6HQYtdmEeqU7aLZ7SeZgAAAAAIAAAARABUAFMAAAAQZgAAAAEAACAAAACIeq0g4JcKi1LV4TyMtUWj2+zhytMmmvGmB5dsoLK07QAAAAAOgAAAAAIAACAAAADvjU2HiCHM0URONRt68+DiKeLhs+oDCcmOWoIEkpuHtSAAAABgO9PDOzK0Lpi+gZBDwH6WJgyp49lEIU5Pmy1t6b48rUAAAAD/e4joRx3WaiCp+QLcKPmJKVGXEXvJbNj48/tnkMhS+R/jYmcxl7+hbKnY9lVc3IvdDXJ9Jp5oAXDumwd3xvB1</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[lukerVen_23]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{2CB65742-8E44-4369-852E-A9D127478E71}"
      DTS:ObjectName="lukerVen_23">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=192.168.5.23\B2C;User ID=ASSUser;Initial Catalog=lukerVen;Provider=SQLNCLI11.1;Persist Security Info=True;Auto Translate=False;Application Name=SSIS-Package1-{B8F3234A-F7D6-42AF-B788-027A8DF2149F}SVIDBLUKMZ03.lukerFin;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAA4k6HQYtdmEeqU7aLZ7SeZgAAAAAIAAAARABUAFMAAAAQZgAAAAEAACAAAADje3L8j5FMGja2x1D7kmiYwy3E6KN6NxkvmuFwJpTh9wAAAAAOgAAAAAIAACAAAABY6fY6a5cmCjhAuy82AZIUZb80Gmn/nAZvlFRZ3Ct2TiAAAAAY6hkNVyBRRsGdVmY+P4clQI1uCPfs3GjNrGrc+tMmxEAAAACYDbFGJIMWo8IBF2uLs+E9F6HN1w3jmLIiTnxLNgFaxWqYmylff/B3wj9t1VZAKmIx4BsqJRN3+kvUziPK6TbV</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:LogProviders>
    <DTS:LogProvider
      DTS:CreationName="Microsoft.LogProviderEventLog"
      DTS:Description="Writes log entries for events to the Event Log"
      DTS:DTSID="{775F24B9-D4C3-4191-8DD8-AE2340E7EA6D}"
      DTS:ObjectName="SSIS log provider for Windows Event Log">
      <DTS:ObjectData>
        <InnerObject />
      </DTS:ObjectData>
    </DTS:LogProvider>
  </DTS:LogProviders>
  <DTS:Variables />
  <DTS:LoggingOptions
    DTS:FilterKind="0"
    DTS:LoggingMode="1">
    <DTS:SelectedLogProviders>
      <DTS:SelectedLogProvider
        DTS:InstanceID="{775F24B9-D4C3-4191-8DD8-AE2340E7EA6D}" />
    </DTS:SelectedLogProviders>
  </DTS:LoggingOptions>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Cartera"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{44F0E660-79BE-4EC4-B515-60FB8A629CFC}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Cartera"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="3">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{2CB65742-8E44-4369-852E-A9D127478E71}"
          SQLTask:SqlStatementSource="USE [lukerVen]&#xA;GO&#xA;&#xA;declare @Corte as varchar(7)&#xA;&#xA;SELECT @Corte =(SELECT max(left(Partidas.Corte,6))+'%'&#xA;FROM HBAVENNAL.STGN.Partidas Partidas)&#xA;&#xA;--SELECT @Corte&#xA;delete [CAR].[Partidas] where [Corte] like @Corte&#xA;INSERT INTO [CAR].[Partidas]&#xA;           ([Factura]&#xA;           ,[Cod_Cliente]&#xA;           ,[CodSociedad]&#xA;           ,[DocumentoContable]&#xA;           ,[Periodo]&#xA;           ,[TipoDocumento]&#xA;           ,[FechaDocumeto]&#xA;           ,[FechaContabilizacion]&#xA;           ,[FechaCompensacion]&#xA;           ,[DocumentoCompensacion]&#xA;           ,[ClaveContabilizacion]&#xA;           ,[FinancialAccountType]&#xA;           ,[IndicadorCME]&#xA;           ,[Usuario]&#xA;           ,[CodTransaccion]&#xA;           ,[DocumentoReferencia]&#xA;           ,[Asignacion]&#xA;           ,[TextoDocumento]&#xA;           ,[IsUsedInPaymentTransaction]&#xA;           ,[CuentaContable]&#xA;           ,[FechaBase]&#xA;           ,[CondicionDePagoDocumento]&#xA;           ,[VencimientoNeto]&#xA;           ,[TextoCabecera]&#xA;           ,[Moneda]&#xA;           ,[EstatusCompensacion]&#xA;           ,[InvoiceReference]&#xA;           ,[DebitCreditCode]&#xA;           ,[Corte]&#xA;           ,[Mora]&#xA;           ,[Edad]&#xA;           ,[EdadFood]&#xA;           ,[ImporteML])&#xA;&#xA;&#xA;select * from [HBAVENNAL].[STGN].[Partidas]" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Cod Dcto"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{525D9B4D-993E-4B1F-8120-04B905B1BB47}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Cod Dcto"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="4">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{2CB65742-8E44-4369-852E-A9D127478E71}"
          SQLTask:SqlStatementSource="-----------------------------------------------&#xA;DECLARE @x_ano  nvarchar(7), @x_versionPto nvarchar(20),@x_mes  nvarchar(7), @x_versionPry nvarchar(20), @x_versionPr1 nvarchar(20)&#xA;DECLARE @sqlCommand varchar(3777), @sqlCommand2 varchar(3777)&#xA;, @x_patron nvarchar(11), @x_patronNeg nvarchar(20), @x_patronDest nvarchar(20), @x_andNeg nvarchar(120)&#xA;, @x_space  nvarchar(7) ,@x_00  nvarchar(7), @x_lin0   nvarchar(7), @deltaDias as int , @Periodo varchar(6)&#xA;declare @_xidNegoc&#x9; Char(1),@_xSalesOr&#x9; Char(1),@_xSalesOf&#x9; Char(1),@_xDistrib&#x9; Char(1),@_xCustome&#x9; Char(1),@_xAliado&#x9; Char(1),@_xCategor&#x9; Char(1),@_xProduct&#x9; Char(1),@_xpagador&#x9; Char(1),@_xDestino&#x9; Char(1)&#xA;       ,@_xAnSalesOf&#x9; varchar(80),@_xAnDistrib&#x9; varchar(80),@_xAnCustome&#x9; varchar(80),@_xAnAliado&#x9; varchar(80),@_xAnCategor varchar(80)&#xA;,@_xMarca&#x9; Char(1)&#xA;,@_xInProd nvarchar(120)&#xA;&#xA;select @deltaDias=5&#xA;select @Periodo=(select (ltrim(rtrim(str(year(GETDATE()-@deltaDias))))+ right('00'+ltrim(rtrim(str(Month(GETDATE()-@deltaDias)))),2)))&#xA;-----&#xA;--select @Periodo='201802'&#xA;-----&#xA;SELECT @x_ano =''''+left(@Periodo,4)+''''&#xA;Select @x_mes =''''+right(@Periodo,2)+''''&#xA;&#xA;select  @x_space=''''''&#xA;select  @x_00='''00'''&#xA;select @Periodo&#xA;SELECT @x_ano&#xA;Select @x_mes&#xA;&#xA;DECLARE ciclo_cursor CURSOR FOR &#xA;SELECT distinct&#xA;  case condicionIdRubroL.Aliado&#x9;&#x9;&#x9;when '' then 0 else 1 end Aliado&#xA;, case condicionIdRubroL.idAgencia&#x9;&#x9;when '' then 0 else 1 end idAgencia&#xA;, case condicionIdRubroL.distriChannel&#x9;when '' then 0 else 1 end distriChannel&#xA;, case condicionIdRubroL.idCstomerGroup&#x9;when '' then 0 else 1 end idCstomerGroup&#xA;, case condicionIdRubroL.Categoria&#x9;&#x9;when '' then 0 else 1 end Categoria&#xA;FROM HBAVENNAL.dbo.condicionIdRubroL condicionIdRubroL&#xA;WHERE (condicionIdRubroL.idRubro&lt;&gt;'')&#xA;order by 1,2,3,4,5&#xA;&#xA;&#xA;OPEN ciclo_cursor&#xA;FETCH NEXT FROM ciclo_cursor &#xA;INTO @_xAliado,@_xSalesOf,@_xDistrib,@_xCustome,@_xCategor&#xA;&#xA;&#xA;WHILE @@FETCH_STATUS = 0&#xA;BEGIN&#xA;&#x9;if @_xAliado ='1' select @_xAnAliado  = 'AND Productos.Aliado  = condicionIdRubroL.Aliado'&#x9;&#x9;&#x9;&#x9;&#x9;else select @_xAnAliado  ='and condicionIdRubroL.Aliado=''''   ' &#xA;&#x9;if @_xSalesOf='1' select @_xAnSalesOf = 'AND Descuentos.SalesOffice = condicionIdRubroL.idAgencia'&#x9;&#x9;&#x9;else select @_xAnSalesOf ='and condicionIdRubroL.idAgencia=''''   ' &#xA;&#x9;if @_xDistrib='1' select @_xAnDistrib = 'AND Descuentos.Cod_Canal = condicionIdRubroL.distriChannel'&#x9;&#x9;else select @_xAnDistrib ='and condicionIdRubroL.distriChannel=''''   ' &#xA;&#x9;if @_xCustome='1' select @_xAnCustome = 'AND Descuentos.Cod_GCliente = condicionIdRubroL.idCstomerGroup'&#x9;else select @_xAnCustome ='and condicionIdRubroL.idCstomerGroup=''''   ' &#xA;&#x9;if @_xCategor='1' select @_xAnCategor = 'AND Productos.Categoria = condicionIdRubroL.Categoria'&#x9;&#x9;&#x9;&#x9;else select @_xAnCategor ='and condicionIdRubroL.Categoria=''''   ' &#xA;&#x9;&#xA;&#x9;select  @sqlCommand =  ' &#xA;&#xA;&#x9;update Descuentos set&#xA;&#x9;Descuentos.idRubro= condicionIdRubroL.idRubro&#xA;&#x9;FROM HBAVENNAL.dbo.condicionIdRubroL condicionIdRubroL&#xA;&#x9;   , lukerVen.SD.Descuentos Descuentos&#xA;&#x9;   , lukerVen.SD.Productos Productos&#xA;&#x9;WHERE Descuentos.ConditionType = condicionIdRubroL.conditionType &#xA;&#x9;  and Productos.Cod_SKU = Descuentos.Cod_SKU &#xA;&#x9;  and condicionIdRubroL.ano='+@x_ano+'&#xA;&#x9;  and year(Descuentos.FechaFactura ) = '+@x_ano+' &#xA;&#x9;  and month(Descuentos.FechaFactura) = '+@x_mes+'&#xA;&#x9;  and Descuentos.idRubro&lt;&gt; condicionIdRubroL.idRubro&#xA;&#x9;'+@_xAnAliado+'&#xA;&#x9;'+@_xAnSalesOf+'&#xA;&#x9;'+@_xAnDistrib+'&#xA;&#x9;'+@_xAnCustome+'&#xA;&#x9;'+@_xAnCategor+'&#xA;&#xA;&#x9;'&#xA;    Exec (@sqlCommand)&#xA;&#x9;--Print (@sqlCommand)&#xA;    FETCH NEXT FROM ciclo_cursor &#xA;   INTO @_xAliado,@_xSalesOf,@_xDistrib,@_xCustome,@_xCategor&#xA;END&#xA;CLOSE ciclo_cursor&#xA;DEALLOCATE ciclo_cursor&#xA;GO &#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Descuento"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{1539F2CA-7AE5-4781-8247-0F7A35818613}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Descuento"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="1">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{2CB65742-8E44-4369-852E-A9D127478E71}"
          SQLTask:SqlStatementSource="declare @x_PeriodoVentas varchar(6)&#xA;&#xA;DECLARE ciclo_cursor CURSOR FOR &#xA;SELECT DISTINCT left(BillingDocumentDate,6)&#xA;FROM lukerVen.SAPBWUSER.[NqFacBillingCondition] &#xA;ORDER BY left(BillingDocumentDate,6)&#xA;&#xA;OPEN ciclo_cursor&#xA;FETCH NEXT FROM ciclo_cursor &#xA;INTO @x_PeriodoVentas&#xA;&#xA;&#xA;WHILE @@FETCH_STATUS = 0&#xA;BEGIN &#xA;&#xA;&#x9;update ZPREALVENTAFI set&#xA;&#x9;ZPREALVENTAFI.periodo= (&#xA;               @x_PeriodoVentas&#xA;&#x9;) &#x9;FROM HBAVENNAL.SAPBWUSER.ZPREALVENTAFI ZPREALVENTAFI&#xA;&#xA;&#x9;delete FROM lukerVen.SD.Descuentos WHERE (left(BillingDocumentDate,6)=@x_PeriodoVentas  )&#xA;&#x9;&#xA; &#x9;delete Descuentos&#xA; &#x9;FROM lukerVen.SD.Descuentos Descuentos, lukerVen.SAPBWUSER.NqFacBillingCondition NqFacBillingCondition&#xA;&#x9;WHERE NqFacBillingCondition.BillingDocumentItem = Descuentos.BillingDocumentItem AND NqFacBillingCondition.Factura = Descuentos.Factura --&#x9;&#x9;&#xA;&#x9;and left(NqFacBillingCondition.BillingDocumentDate,6)=@x_PeriodoVentas&#xA;&#xA;&#x9;Print (@x_PeriodoVentas)&#xA;&#x9;&#xA;&#x9;insert into  lukerVen.SD.Descuentos&#xA;&#x9;select *, '','' from [SAPBWUSER].[NqFacBillingCondition] &#xA;&#x9;where Cod_SKU in (&#xA;&#x9;&#x9;SELECT Productos.Cod_SKU&#xA;&#x9;&#x9;FROM lukerVen.SD.Productos Productos&#xA;&#x9;)&#xA;&#x9;and Cod_Cliente in (&#xA;&#x9;&#x9;SELECT Clientes.Cod_Cliente&#xA;&#x9;&#x9;FROM lukerVen.SD.Clientes Clientes&#xA;&#x9;) and (left(BillingDocumentDate,6)=@x_PeriodoVentas)&#xA;   &#xA;   FETCH NEXT FROM ciclo_cursor &#xA;   INTO @x_PeriodoVentas&#xA;END&#xA;CLOSE ciclo_cursor&#xA;DEALLOCATE ciclo_cursor&#xA;&#xA;GO&#xA;&#xA;&#xA;update Descuentos set Descuentos.Cod_Negocio='B2C'&#xA;FROM lukerVen.SD.Descuentos Descuentos&#xA;WHERE (Descuentos.Cod_Negocio='') &#xA;AND year([FechaFactura])=2020 &#xA;AND (Descuentos.Cod_OrgVentas='1010')&#xA;&#xA;&#xA;update Descuentos set&#xA;Descuentos.Cod_Negocio= CategoriaMarca.Cod_Negocio&#xA;FROM lukerVen.SD.CategoriaMarca CategoriaMarca, lukerVen.SD.Descuentos Descuentos, lukerVen.SD.Productos Productos&#xA;WHERE Productos.Cod_SKU = Descuentos.Cod_SKU AND CategoriaMarca.Aliado = Productos.Aliado &#xA;AND CategoriaMarca.Categoria = Productos.Categoria &#xA;AND CategoriaMarca.Marca = Productos.Marca AND ((year(FechaFactura)=2020) &#xA;AND (Descuentos.Cod_Negocio='') AND (Descuentos.Cod_OrgVentas='2010'))" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Dona"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{b3fb91e3-ce7d-43ec-8383-cb9616e62854}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Dona"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="1">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{2CB65742-8E44-4369-852E-A9D127478E71}"
          SQLTask:SqlStatementSource="declare @x_PeriodoVentas varchar(6)&#xA;&#xA;DECLARE ciclo_cursor CURSOR FOR &#xA;SELECT DISTINCT left(BillingDocumentDate,6)&#xA;FROM lukerVen.SAPBWUSER.zNqFacBillingDocumentDona zNqFacBillingDocument&#xA;ORDER BY left(BillingDocumentDate,6)&#xA;&#xA;OPEN ciclo_cursor&#xA;FETCH NEXT FROM ciclo_cursor &#xA;INTO @x_PeriodoVentas&#xA;&#xA;&#xA;WHILE @@FETCH_STATUS = 0&#xA;BEGIN &#xA;&#xA;&#x9;update ZPREALVENTAFI set&#xA;&#x9;ZPREALVENTAFI.periodo= (&#xA;               @x_PeriodoVentas&#xA;&#x9;) &#x9;FROM HBAVENNAL.SAPBWUSER.ZPREALVENTAFI ZPREALVENTAFI&#xA;&#x9;&#xA;&#x9;delete SD.Donaciones&#xA;&#x9;WHERE left(BillingDocumentDate,6)=@x_PeriodoVentas  --and Origen='Billing' &#xA;&#x9;&#xA;&#x9;delete Donaciones&#xA;&#x9;FROM lukerVen.SD.Donaciones Donaciones, lukerVen.SAPBWUSER.zNqFacBillingDocument zNqFacBillingDocument&#xA;&#x9;WHERE zNqFacBillingDocument.BillingDocumentItem = Donaciones.BillingDocumentItem AND zNqFacBillingDocument.Factura = Donaciones.Factura --AND ((Donaciones.BillingDocumentDate='20190430'))&#xA;&#x9;&#x9;and left(zNqFacBillingDocument.BillingDocumentDate,6)=@x_PeriodoVentas&#xA;&#xA;&#x9;Print (@x_PeriodoVentas)&#xA;&#x9;INSERT INTO [lukerVen].[SD].[Donaciones] ([Origen] , [Factura] , [BillingDocumentItem] , [Cod_TipoFactura] , [Cod_CategoriaFactura] , [FechaFactura] , [SDDocumentCategory] , [Cod_OrgVentas] , [Cod_GCliente] , [Cod_Canal] , [Planta] , [JerarquiaProducto] , [Cod_SKU] , [BillingDocumentItemText] , [ReferenceSDDocument] , [ReferenceSDDocumentItem] , [UnidadCantidadFacturada] , [TransactionCurrency] , [Cod_Cliente] &#xA;&#x9;, [PayerParty]&#xA;&#x9; , [AccountingPostingStatus] &#xA;&#x9;, Cod_SKU_Regular , [SalesOffice] , [AccountingExchangeRate] , [BillingDocumentDate] , [Cod_MotivoNoVenta] , [BillingDocumentIsCancelled] , [ProfitCenter] , [Unidades] , [Kilos] , [ValorNeto] , [Impuesto] , [FechaPedido],[SalesDocument],ClienteForNum,RefNoVenta,MotivoNV,SUnidadesNV,SValorNV)&#xA;&#x9;SELECT 'Billing',*&#xA;&#x9;FROM lukerVen.SAPBWUSER.zNqFacBillingDocumentDona zNqFacBillingDocument &#xA;    WHERE left(BillingDocumentDate,6)=@x_PeriodoVentas&#xA;   &#xA;   print @x_PeriodoVentas&#xA;   FETCH NEXT FROM ciclo_cursor &#xA;   INTO @x_PeriodoVentas&#xA;END&#xA;CLOSE ciclo_cursor&#xA;DEALLOCATE ciclo_cursor&#xA;GO&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Expl Desc"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Tarea Ejecutar SQL"
      DTS:DTSID="{5B67BDE3-E7B8-46D6-918A-1259F4FCF44E}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Expl Desc"
      DTS:ThreadHint="2">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{2CB65742-8E44-4369-852E-A9D127478E71}"
          SQLTask:SqlStatementSource="update ComboBOM set&#xA;ComboBOM.PrecioLista= xppt_listadeprecios.PrecioNeto&#xA;FROM lukerVen.SD.ComboBOM ComboBOM, lukerVen.tmp.xppt_listadeprecios xppt_listadeprecios&#xA;WHERE ComboBOM.Con_SKUR = xppt_listadeprecios.Cod_SKU &#xA;AND ((ComboBOM.PrecioLista=0) AND (ComboBOM.TipoPos&lt;&gt;'REGALO') &#xA;AND (xppt_listadeprecios.Cod_Lista='1'))&#xA;&#xA;Update ComboBOM set&#xA;  ComboBOM.PorcentPrecioVenta&#x9;= ComboBOM_PrecioBase.ValorBase/ComboBOM_PrecioBaseT.ValorBaseT&#xA;, ComboBOM.PorcentPeso&#x9;&#x9;&#x9;= ComboBOM_PrecioBase.PesoBase/ComboBOM_PrecioBaseT.PesoBaseT&#xA;FROM [SRVDBLUKBO01\B2C].lukerVen.SD.ComboBOM ComboBOM&#xA;, [SRVDBLUKBO01\B2C].lukerVen.SD.ComboBOM_PrecioBase ComboBOM_PrecioBase&#xA;, [SRVDBLUKBO01\B2C].lukerVen.SD.ComboBOM_PrecioBaseT ComboBOM_PrecioBaseT&#xA;, [SRVDBLUKBO01\B2C].lukerVen.SD.Productos Productos&#xA;WHERE ComboBOM_PrecioBase.Cod_SKU = ComboBOM.Cod_SKU&#xA;AND ComboBOM_PrecioBase.Con_SKUR = ComboBOM.Con_SKUR&#xA;AND ComboBOM_PrecioBase.Consecutivo = ComboBOM.Consecutivo&#xA;AND ComboBOM_PrecioBaseT.Cod_SKU = ComboBOM.Cod_SKU&#xA;AND Productos.Cod_SKU = ComboBOM.Cod_SKU&#xA;and ComboBOM_PrecioBaseT.ValorBaseT &lt;&gt;0&#xA;and ComboBOM_PrecioBaseT.PesoBaseT &lt;&gt;0&#xA;&#xA;&#xA;declare @x_PeriodoVentas varchar(6) , @Periodo varchar(6), @PeriodoLike varchar(7)&#xA;&#xA;DECLARE ciclo_cursor CURSOR FOR &#xA;SELECT DISTINCT left(BillingDocumentDate,6)&#xA;FROM lukerVen.SAPBWUSER.zNqFacBillingDocument zNqFacBillingDocument&#xA;ORDER BY left(BillingDocumentDate,6)&#xA;&#xA;OPEN ciclo_cursor&#xA;FETCH NEXT FROM ciclo_cursor &#xA;INTO @x_PeriodoVentas&#xA;&#xA;&#xA;WHILE @@FETCH_STATUS = 0&#xA;BEGIN &#xA;&#xA;&#x9;update ZPREALVENTAFI set&#xA;&#x9;ZPREALVENTAFI.periodo= (&#xA;               @x_PeriodoVentas&#xA;&#x9;) &#x9;FROM HBAVENNAL.SAPBWUSER.ZPREALVENTAFI ZPREALVENTAFI&#xA;&#xA;&#xA;&#xA;select @Periodo=@x_PeriodoVentas&#xA;select @PeriodoLike=@x_PeriodoVentas+'%'&#xA;select @PeriodoLike&#xA;&#xA;--2&#xA;Update Descuentos set&#xA;Descuentos.TransactionCurrency= ''&#xA;FROM lukerVen.SD.Descuentos Descuentos&#xA;WHERE (Descuentos.BillingDocumentDate Like @PeriodoLike) &#xA;AND (Descuentos.TransactionCurrency&lt;&gt;'')&#xA;&#xA;--------------------&#xA;-- direct regular --&#xA;--------------------&#xA;--3&#xA;update Descuentos set &#xA; Descuentos.Cod_SKU_Regular= ComboBOM.Con_SKUR&#xA;FROM lukerVen.SD.Descuentos Descuentos&#xA;, lukerVen.SD.ComboBOM ComboBOM&#xA;, lukerVen.SD.ComboBOM_NumRegNoGift ComboBOM_NumRegNoGift&#xA;, lukerVen.SD.ComboHD ComboHD&#xA;, lukerVen.SD.Productos Productos&#xA;WHERE Descuentos.Cod_SKU = ComboHD.Cod_SKU AND ComboBOM.Cod_SKU = ComboHD.Cod_SKU &#xA;AND ComboBOM.Con_SKUR = Productos.Cod_SKU AND ComboBOM_NumRegNoGift.Cod_SKU = ComboHD.Cod_SKU &#xA;AND ((Descuentos.BillingDocumentDate like @PeriodoLike) &#xA;AND (ComboBOM_NumRegNoGift.NumRegNoGift=1) &#xA;AND (ComboBOM.TipoPos&lt;&gt;'REGALO'))&#xA;&#xA;--------------------&#xA;-- Exp regular --&#xA;--------------------&#xA;&#xA;--Mark&#xA;--5&#xA;update Descuentos set &#xA;  Descuentos.TransactionCurrency= 'xEXP'&#xA;FROM lukerVen.SD.Descuentos Descuentos&#xA;, lukerVen.SD.ComboBOM ComboBOM&#xA;, lukerVen.SD.ComboBOM_NumRegNoGift ComboBOM_NumRegNoGift&#xA;, lukerVen.SD.ComboHD ComboHD&#xA;, lukerVen.SD.Productos Productos&#xA;WHERE Descuentos.Cod_SKU = ComboHD.Cod_SKU AND ComboBOM.Cod_SKU = ComboHD.Cod_SKU &#xA;AND ComboBOM.Con_SKUR = Productos.Cod_SKU AND ComboBOM_NumRegNoGift.Cod_SKU = ComboHD.Cod_SKU &#xA;AND ((Descuentos.BillingDocumentDate like @PeriodoLike) &#xA;AND (ComboBOM_NumRegNoGift.NumRegNoGift&gt;1) &#xA;AND (ComboBOM.TipoPos&lt;&gt;'REGALO'))&#xA;&#xA;-- Explo&#xA;--6&#xA;delete lukerVen.[SD].[Descuentos_Explo] where (Descuentos_Explo.BillingDocumentDate like @PeriodoLike)&#xA;--7&#xA;insert into lukerVen.[SD].[Descuentos_Explo]&#xA;SELECT &#xA;   Descuentos.Factura&#xA; , Descuentos.BillingDocumentItem&#xA; , Descuentos.Cod_TipoFactura&#xA; , Descuentos.Cod_CategoriaFactura&#xA; , Descuentos.FechaFactura&#xA; , Descuentos.SDDocumentCategory&#xA; , Descuentos.Cod_OrgVentas&#xA; , Descuentos.Cod_GCliente&#xA; , Descuentos.Cod_Canal&#xA; , Productos.JerarquiaProducto  --**, Descuentos.JerarquiaProducto  --**&#xA; , ComboBOM_XploVen.Con_SKUR  --**, Descuentos.Cod_SKU  --**&#xA; , Descuentos.BillingDocumentItemText&#xA; , Descuentos.ReferenceSDDocument&#xA; , Descuentos.ReferenceSDDocumentItem&#xA; , '+EXP' --**, Descuentos.TransactionCurrency --**&#xA; , Descuentos.Cod_Cliente&#xA; , Descuentos.PayerParty&#xA; , Descuentos.Cod_SKU  --**, Descuentos.StatisticsCurrency  --**&#xA; , Descuentos.SalesOffice&#xA; , Descuentos.AccountingExchangeRate&#xA; , Descuentos.BillingDocumentDate&#xA; , Descuentos.ConditionType&#xA; , Descuentos.ConditionAmount* ComboBOM_XploVen.PorcentPrecioVenta as 'ConditionAmount'&#xA; , Descuentos.idRubro&#xA; , Descuentos.Cod_Negocio&#xA;FROM lukerVen.SD.Descuentos Descuentos&#xA;, lukerVen.SD.ComboBOM_XploVen ComboBOM_XploVen&#xA;, lukerVen.SD.Productos Productos&#xA;WHERE Descuentos.Cod_SKU = ComboBOM_XploVen.Cod_SKU &#xA;AND Productos.Cod_SKU = ComboBOM_XploVen.Cod_SKU &#xA;AND ((Descuentos.BillingDocumentDate like @PeriodoLike) &#xA;AND (Descuentos.TransactionCurrency='xEXP'))&#xA;&#xA;-- Contrap&#xA;--8&#xA;insert into lukerVen.[SD].[Descuentos_Explo]&#xA;SELECT Descuentos.Factura, Descuentos.BillingDocumentItem, Descuentos.Cod_TipoFactura, Descuentos.Cod_CategoriaFactura, Descuentos.FechaFactura, Descuentos.SDDocumentCategory, Descuentos.Cod_OrgVentas, Descuentos.Cod_GCliente, Descuentos.Cod_Canal, Descuentos.JerarquiaProducto, Descuentos.Cod_SKU, Descuentos.BillingDocumentItemText, Descuentos.ReferenceSDDocument, Descuentos.ReferenceSDDocumentItem, '-EXP', Descuentos.Cod_Cliente, Descuentos.PayerParty, Descuentos.Cod_SKU_Regular, Descuentos.SalesOffice, Descuentos.AccountingExchangeRate, Descuentos.BillingDocumentDate, Descuentos.ConditionType, Sum(-(Descuentos.ConditionAmount*ComboBOM_XploVen.PorcentPrecioVenta))&#xA;, Descuentos.idRubro&#xA;, Descuentos.Cod_Negocio&#xA;FROM lukerVen.SD.ComboBOM_XploVen ComboBOM_XploVen, lukerVen.SD.Descuentos Descuentos, lukerVen.SD.Productos Productos&#xA;WHERE Descuentos.Cod_SKU = ComboBOM_XploVen.Cod_SKU AND Descuentos.Cod_SKU = Productos.Cod_SKU&#xA;GROUP BY Descuentos.Factura, Descuentos.BillingDocumentItem, Descuentos.Cod_TipoFactura, Descuentos.Cod_CategoriaFactura, Descuentos.FechaFactura, Descuentos.SDDocumentCategory, Descuentos.Cod_OrgVentas, Descuentos.Cod_GCliente, Descuentos.Cod_Canal, Descuentos.JerarquiaProducto, Descuentos.Cod_SKU, Descuentos.BillingDocumentItemText, Descuentos.ReferenceSDDocument, Descuentos.ReferenceSDDocumentItem, Descuentos.Cod_Cliente, Descuentos.PayerParty, Descuentos.Cod_SKU_Regular, Descuentos.SalesOffice, Descuentos.AccountingExchangeRate, Descuentos.BillingDocumentDate, Descuentos.ConditionType, Descuentos.idRubro, Descuentos.TransactionCurrency&#xA;, Descuentos.Cod_Negocio&#xA;HAVING (Descuentos.BillingDocumentDate Like @PeriodoLike) AND (Descuentos.TransactionCurrency='xEXP')&#xA;&#xA;   FETCH NEXT FROM ciclo_cursor &#xA;   INTO @x_PeriodoVentas&#xA;END&#xA;CLOSE ciclo_cursor&#xA;DEALLOCATE ciclo_cursor&#xA;GO&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Expl Fac"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Tarea Ejecutar SQL"
      DTS:DTSID="{FDACEC68-F7F1-4109-BD20-EC348400ABE6}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Expl Fac"
      DTS:ThreadHint="2">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{2CB65742-8E44-4369-852E-A9D127478E71}"
          SQLTask:SqlStatementSource="declare @x_PeriodoVentas varchar(6) , @Periodo varchar(6), @PeriodoLike varchar(7)&#xA;&#xA;&#xA;DECLARE ciclo_cursor CURSOR FOR &#xA;SELECT DISTINCT left(BillingDocumentDate,6)&#xA;FROM lukerVen.SAPBWUSER.zNqFacBillingDocument zNqFacBillingDocument&#xA;ORDER BY left(BillingDocumentDate,6)&#xA;&#xA;OPEN ciclo_cursor&#xA;FETCH NEXT FROM ciclo_cursor &#xA;INTO @x_PeriodoVentas&#xA;&#xA;&#xA;WHILE @@FETCH_STATUS = 0&#xA;BEGIN &#xA;&#xA;&#x9;update ZPREALVENTAFI set&#xA;&#x9;ZPREALVENTAFI.periodo= (&#xA;               @x_PeriodoVentas&#xA;&#x9;) &#x9;FROM HBAVENNAL.SAPBWUSER.ZPREALVENTAFI ZPREALVENTAFI&#xA;&#xA;&#xA;&#xA;select @Periodo=@x_PeriodoVentas&#xA;select @PeriodoLike=@x_PeriodoVentas+'%'&#xA;select @PeriodoLike&#xA;&#xA;--------------------&#xA;-- direct regular --&#xA;--------------------&#xA;update Facturas set &#xA;    Facturas.Cod_SKU_Regular= ''&#xA;,   Facturas.TransactionCurrency='' &#xA;FROM lukerVen.SD.Facturas Facturas&#xA;WHERE  Facturas.BillingDocumentDate like @PeriodoLike &#xA;and    (Facturas.Cod_SKU_Regular&lt;&gt; '' or    Facturas.TransactionCurrency='' )&#xA;update Facturas set &#xA; Facturas.Cod_SKU_Regular= ComboBOM.Con_SKUR&#xA;FROM lukerVen.SD.Facturas Facturas&#xA;, lukerVen.SD.ComboBOM ComboBOM&#xA;, lukerVen.SD.ComboBOM_NumRegNoGift ComboBOM_NumRegNoGift&#xA;, lukerVen.SD.ComboHD ComboHD&#xA;, lukerVen.SD.Productos Productos&#xA;WHERE Facturas.Cod_SKU = ComboHD.Cod_SKU AND ComboBOM.Cod_SKU = ComboHD.Cod_SKU &#xA;AND ComboBOM.Con_SKUR = Productos.Cod_SKU AND ComboBOM_NumRegNoGift.Cod_SKU = ComboHD.Cod_SKU &#xA;AND ((Facturas.BillingDocumentDate like @PeriodoLike) &#xA;AND (ComboBOM_NumRegNoGift.NumRegNoGift=1) &#xA;AND (ComboBOM.TipoPos&lt;&gt;'REGALO'))&#xA;--AND (Facturas.Origen='Billing')&#xA;--------------------&#xA;-- Exp regular --&#xA;--------------------&#xA;&#xA;--Mark&#xA;update Facturas set &#xA;  Facturas.TransactionCurrency= 'xEXP'&#xA;FROM lukerVen.SD.Facturas Facturas&#xA;, lukerVen.SD.ComboBOM ComboBOM&#xA;, lukerVen.SD.ComboBOM_NumRegNoGift ComboBOM_NumRegNoGift&#xA;, lukerVen.SD.ComboHD ComboHD, lukerVen.SD.Productos Productos&#xA;WHERE Facturas.Cod_SKU = ComboHD.Cod_SKU AND ComboBOM.Cod_SKU = ComboHD.Cod_SKU &#xA;AND ComboBOM.Con_SKUR = Productos.Cod_SKU AND ComboBOM_NumRegNoGift.Cod_SKU = ComboHD.Cod_SKU &#xA;AND ((Facturas.BillingDocumentDate like @PeriodoLike) &#xA;AND (ComboBOM_NumRegNoGift.NumRegNoGift&gt;1) &#xA;AND (ComboBOM.TipoPos&lt;&gt;'REGALO'))&#xA;and Facturas.TransactionCurrency=''&#xA;--AND (Facturas.Origen='Billing')&#xA;&#xA;-- Explo&#xA;delete lukerVen.[SD].[Facturas_Explo] where BillingDocumentDate Like @PeriodoLike&#xA;insert into lukerVen.[SD].[Facturas_Explo]&#xA;SELECT &#xA;Facturas.Origen&#xA;, Facturas.Factura&#xA;, Facturas.BillingDocumentItem&#xA;, Facturas.Cod_TipoFactura&#xA;, Facturas.Cod_CategoriaFactura&#xA;, Facturas.FechaFactura&#xA;, Facturas.SDDocumentCategory&#xA;, Facturas.Cod_OrgVentas&#xA;, Facturas.Cod_GCliente&#xA;, Facturas.Cod_Canal&#xA;, Facturas.Planta&#xA;, Productos.JerarquiaProducto  --**, Facturas.JerarquiaProducto  --**&#xA; , ComboBOM_XploVen.Con_SKUR  --**, Facturas.Cod_SKU  --**&#xA;, Facturas.BillingDocumentItemText&#xA;, Facturas.ReferenceSDDocument&#xA;, Facturas.ReferenceSDDocumentItem&#xA;, Facturas.UnidadCantidadFacturada&#xA;, '+EXP' --Facturas.TransactionCurrency&#xA;, Facturas.Cod_Cliente&#xA;, Facturas.PayerParty&#xA;, Facturas.AccountingPostingStatus&#xA;, Facturas.Cod_SKU--Facturas.StatisticsCurrency&#xA;, Facturas.SalesOffice&#xA;, Facturas.AccountingExchangeRate&#xA;, Facturas.BillingDocumentDate&#xA;, Facturas.Cod_MotivoNoVenta&#xA;, Facturas.BillingDocumentIsCancelled&#xA;, Facturas.ProfitCenter&#xA;-----&#xA;, Facturas.Unidades *  (ComboBOM_XploVen.Unidades- ComboBOM_XploVen.UnidadesZ) as Unidades&#xA;, Facturas.Kilos* ComboBOM_XploVen.PorcentPeso Kilos&#xA;, Facturas.ValorNeto  * ComboBOM_XploVen.PorcentPrecioVenta as 'ValorNeto'&#xA;, Facturas.Impuesto  * ComboBOM_XploVen.PorcentPrecioVenta as 'Impuesto'&#xA;, Facturas.KilosRegalo* ComboBOM_XploVen.PorcentPrecioVenta  as 'KilosRegalo'&#xA;----&#xA;, Facturas.FechaPedido&#xA;, Facturas.ClienteForNum&#xA;, Facturas.SalesDocument&#xA;, Facturas.RefNoVenta&#xA;, Facturas.MotivoNV&#xA;, Facturas.SUnidadesNV&#xA;, Facturas.SValorNV&#xA;FROM lukerVen.SD.ComboBOM_XploVen ComboBOM_XploVen&#xA;, lukerVen.SD.Facturas Facturas, lukerVen.SD.Productos Productos&#xA;WHERE Facturas.Cod_SKU = ComboBOM_XploVen.Cod_SKU &#xA;AND Productos.Cod_SKU = ComboBOM_XploVen.Cod_SKU &#xA;AND ((Facturas.BillingDocumentDate Like @PeriodoLike) &#xA;AND (Facturas.TransactionCurrency='xEXP'))&#xA;--AND (Facturas.Origen='Billing')&#xA;&#xA;-- Contrap&#xA;insert into lukerVen.[SD].[Facturas_Explo]&#xA;SELECT &#xA;Facturas.Origen&#xA;, Facturas.Factura&#xA;, Facturas.BillingDocumentItem&#xA;, Facturas.Cod_TipoFactura&#xA;, Facturas.Cod_CategoriaFactura&#xA;, Facturas.FechaFactura&#xA;, Facturas.SDDocumentCategory&#xA;, Facturas.Cod_OrgVentas&#xA;, Facturas.Cod_GCliente&#xA;, Facturas.Cod_Canal&#xA;, Facturas.Planta&#xA;, Facturas.JerarquiaProducto  --**&#xA;, Facturas.Cod_SKU  --**&#xA;, Facturas.BillingDocumentItemText&#xA;, Facturas.ReferenceSDDocument&#xA;, Facturas.ReferenceSDDocumentItem&#xA;, Facturas.UnidadCantidadFacturada&#xA;, '-EXP' --Facturas.TransactionCurrency&#xA;, Facturas.Cod_Cliente&#xA;, Facturas.PayerParty&#xA;, Facturas.AccountingPostingStatus&#xA;, Facturas.Cod_SKU_Regular&#xA;, Facturas.SalesOffice&#xA;, Facturas.AccountingExchangeRate&#xA;, Facturas.BillingDocumentDate&#xA;, Facturas.Cod_MotivoNoVenta&#xA;, Facturas.BillingDocumentIsCancelled&#xA;, Facturas.ProfitCenter&#xA;-----&#xA;, -Facturas.Unidades &#xA;, sum(-Facturas.Kilos* ComboBOM_XploVen.PorcentPeso) Kilos&#xA;, sum(-Facturas.ValorNeto  * ComboBOM_XploVen.PorcentPrecioVenta) as 'ValorNeto'&#xA;, sum(-Facturas.Impuesto  * ComboBOM_XploVen.PorcentPrecioVenta) as 'Impuesto'&#xA;, sum(-Facturas.KilosRegalo  * ComboBOM_XploVen.PorcentPrecioVenta) as 'KilosRegalo'&#xA;----&#xA;, Facturas.FechaPedido&#xA;, Facturas.ClienteForNum&#xA;, Facturas.SalesDocument&#xA;, Facturas.RefNoVenta&#xA;, Facturas.MotivoNV&#xA;, Facturas.SUnidadesNV&#xA;, Facturas.SValorNV&#xA;FROM lukerVen.SD.ComboBOM_XploVen ComboBOM_XploVen, lukerVen.SD.Facturas Facturas, lukerVen.SD.Productos Productos&#xA;WHERE Facturas.Cod_SKU = ComboBOM_XploVen.Cod_SKU &#xA;AND Productos.Cod_SKU = ComboBOM_XploVen.Cod_SKU &#xA;AND ((Facturas.BillingDocumentDate Like @PeriodoLike) &#xA;AND (Facturas.TransactionCurrency='xEXP'))&#xA;--AND (Facturas.Origen='Billing')&#xA;group by &#xA;Facturas.Origen&#xA;, Facturas.Factura&#xA;, Facturas.BillingDocumentItem&#xA;, Facturas.Cod_TipoFactura&#xA;, Facturas.Cod_CategoriaFactura&#xA;, Facturas.FechaFactura&#xA;, Facturas.SDDocumentCategory&#xA;, Facturas.Cod_OrgVentas&#xA;, Facturas.Cod_GCliente&#xA;, Facturas.Cod_Canal&#xA;, Facturas.Planta&#xA;, Facturas.JerarquiaProducto  --**&#xA;, Facturas.Cod_SKU  --**&#xA;, Facturas.BillingDocumentItemText&#xA;, Facturas.ReferenceSDDocument&#xA;, Facturas.ReferenceSDDocumentItem&#xA;, Facturas.UnidadCantidadFacturada&#xA;, Facturas.Cod_Cliente&#xA;, Facturas.PayerParty&#xA;, Facturas.AccountingPostingStatus&#xA;, Facturas.Cod_SKU_Regular&#xA;, Facturas.SalesOffice&#xA;, Facturas.AccountingExchangeRate&#xA;, Facturas.BillingDocumentDate&#xA;, Facturas.Cod_MotivoNoVenta&#xA;, Facturas.BillingDocumentIsCancelled&#xA;, Facturas.ProfitCenter&#xA;, Facturas.FechaPedido&#xA;, Facturas.ClienteForNum&#xA;, Facturas.SalesDocument&#xA;, Facturas.RefNoVenta&#xA;, Facturas.MotivoNV&#xA;, Facturas.SUnidadesNV&#xA;, Facturas.SValorNV&#xA;, Facturas.Unidades &#xA;&#xA;   FETCH NEXT FROM ciclo_cursor &#xA;   INTO @x_PeriodoVentas&#xA;END&#xA;CLOSE ciclo_cursor&#xA;DEALLOCATE ciclo_cursor&#xA;GO&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Explo Combo"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Tarea Ejecutar SQL"
      DTS:DTSID="{6B0CC16C-D4C6-40A4-A752-CB692A7B673B}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Explo Combo"
      DTS:ThreadHint="2">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{F87F8D7B-1E05-4BA9-805D-51BA12DE78CA}"
          SQLTask:SqlStatementSource="USE [lukerVen]&#xA;GO&#xA;declare @x_PeriodoVentas varchar(6) , @Periodo varchar(6), @PeriodoLike varchar(7)&#xA;&#xA;DECLARE ciclo_cursor CURSOR FOR &#xA;SELECT DISTINCT left(BillingDocumentDate,6)&#xA;FROM lukerVen.SAPBWUSER.zNqFacBillingDocument zNqFacBillingDocument&#xA;ORDER BY left(BillingDocumentDate,6)&#xA;&#xA;OPEN ciclo_cursor&#xA;FETCH NEXT FROM ciclo_cursor &#xA;INTO @x_PeriodoVentas&#xA;&#xA;&#xA;WHILE @@FETCH_STATUS = 0&#xA;BEGIN   &#xA;&#xA;&#x9;update ZPREALVENTAFI set&#xA;&#x9;ZPREALVENTAFI.periodo= (&#xA;               @x_PeriodoVentas&#xA;&#x9;) &#x9;FROM HBAVENNAL.SAPBWUSER.ZPREALVENTAFI ZPREALVENTAFI&#xA;&#xA;&#xA;&#xA;select @Periodo=@x_PeriodoVentas&#xA;select @PeriodoLike=@x_PeriodoVentas+'%'&#xA;select @PeriodoLike&#xA;--*****************************************************&#xA;&#xA;---HD&#xA;INSERT INTO lukerVen.[SD].[ComboHD]&#xA;           ([Cod_SKU]&#xA;           ,[Visto]&#xA;           ,[Objetivo])&#xA;&#xA;&#xA;&#xA;SELECT  Facturas.Cod_SKU, Max(Facturas.FechaFactura) AS 'Max of FechaFactura','New'&#xA;FROM  [HBAVENNAL].[STGN].[zFacBill]  Facturas&#xA;where Facturas.Cod_SKU not in (&#xA;&#x9;SELECT ComboHD.Cod_SKU&#xA;&#x9;FROM lukerVen.SD.ComboHD ComboHD&#xA;) and (Facturas.BillingDocumentDate Like @PeriodoLike) AND (Facturas.Cod_SKU Like '000000000007%')&#xA;GROUP BY Facturas.Cod_SKU &#xA;--BOM&#xA;&#xA;&#xA;delete [lukerVen].[STGN].[MaterialBOM]&#xA;insert into [lukerVen].[STGN].[MaterialBOM]&#xA;SELECT&#xA;  &quot;MaterialFac&quot;&#x9;&#x9;&#x9;AS Cod_SKU&#xA;, &quot;MaterialRgl&quot;&#x9;&#x9;&#x9;AS Con_SKUR&#xA;, &quot;Planta&quot;&#x9;&#x9;&#x9;&#x9;AS Planta&#xA;, &quot;STLKN&quot;&#x9;&#x9;&#x9;&#x9;AS STLKN&#xA;, &quot;Unidad&quot;&#xA;, &quot;Unidades&quot;&#xA;, &quot;SORTF&quot;&#xA;, &quot;MaterialNetWeight&quot;&#xA;, &quot;MaterialWeightUnit&quot;&#xA;, &quot;Z_UnidadesRegalo&quot;&#xA;FROM &quot;CWP&quot;..&quot;_SYS_BIC&quot;.&quot;BI_LUKER_AD.SD/zMaterialBasicDataBOM&quot;&#xA;&#xA;insert into lukerVen.SD.ComboBOM&#xA;SELECT MaterialBOM.Cod_SKU, MaterialBOM.Con_SKUR, MaterialBOM.STLKN, MaterialBOM.SORTF, MaterialBOM.Unidades, MaterialBOM.Unidad, 0, 0, 0, 0, MaterialBOM.Z_UnidadesRegalo, 0, MaterialBOM.MaterialNetWeight--, MaterialBOM.MaterialWeightUnit&#xA;FROM lukerVen.SD.ComboHD ComboHD, lukerVen.STGN.MaterialBOM MaterialBOM&#xA;WHERE ComboHD.Cod_SKU = MaterialBOM.Cod_SKU AND ( (MaterialBOM.Planta='CD01'))&#xA;and  MaterialBOM.Cod_SKU not in (&#xA;&#x9;select ComboBOM.Cod_SKU from lukerVen.SD.ComboBOM&#xA;)&#xA;&#xA;&#xA;declare @xwhere varchar(4)&#xA;DECLARE ciclo_cursor2 CURSOR FOR&#xA;SELECT DISTINCT MaterialBOM.Planta&#xA;FROM lukerVen.STGN.MaterialBOM MaterialBOM where MaterialBOM.Planta&lt;&gt;'CD01'&#xA;ORDER BY MaterialBOM.Planta&#xA;&#xA;OPEN ciclo_cursor2&#xA;FETCH NEXT FROM ciclo_cursor2&#xA;INTO @xwhere&#xA;&#xA;WHILE @@FETCH_STATUS = 0&#xA;BEGIN&#xA;&#xA;insert into [lukerVen].[STGN].[MaterialBOM]&#xA;SELECT MaterialBOM.Cod_SKU, MaterialBOM.Con_SKUR, 'cd01', MaterialBOM.STLKN, MaterialBOM.Unidad, MaterialBOM.Unidades, MaterialBOM.SORTF, MaterialBOM.MaterialNetWeight, MaterialBOM.MaterialWeightUnit, MaterialBOM.Z_UnidadesRegalo&#xA;FROM lukerVen.STGN.MaterialBOM MaterialBOM&#xA;WHERE (MaterialBOM.Planta=@xwhere)&#xA;and MaterialBOM.Cod_SKU not in (&#xA;&#x9;select MaterialBOM.Cod_SKU FROM lukerVen.STGN.MaterialBOM MaterialBOM&#xA;WHERE (MaterialBOM.Planta='CD01')&#xA;)&#xA;&#xA;   FETCH NEXT FROM ciclo_cursor2&#xA;   INTO @xwhere&#xA;&#xA;END&#xA;CLOSE ciclo_cursor2&#xA;DEALLOCATE ciclo_cursor2&#xA;&#xA;--- Marca T1&#xA;&#xA;update ComboHD set&#xA;  ComboHD.Tipo= 'T1'&#xA;, ComboHD.NumSKUs= MaterialBOM_T1.NumSKUs&#xA;FROM lukerVen.SD.ComboHD ComboHD, lukerVen.STGN.MaterialBOM_T1 MaterialBOM_T1&#xA;WHERE MaterialBOM_T1.Cod_SKU = ComboHD.Cod_SKU&#xA;&#xA;update ComboHD set&#xA;  ComboHD.Tipo= 'T2+Z'&#xA;, ComboHD.NumSKUs= MaterialBOM_T2_PlusZreg.NumSKUs&#xA;FROM lukerVen.SD.ComboHD ComboHD, lukerVen.STGN.MaterialBOM_T2_PlusZreg MaterialBOM_T2_PlusZreg&#xA;WHERE MaterialBOM_T2_PlusZreg.Cod_SKU = ComboHD.Cod_SKU&#xA;&#xA;&#xA;update ComboHD set&#xA;  ComboHD.Tipo= 'T2'&#xA;, ComboHD.NumSKUs= MaterialBOM_T2.NumSKUs&#xA;FROM lukerVen.SD.ComboHD ComboHD&#xA;  , lukerVen.STGN.MaterialBOM_T2 MaterialBOM_T2&#xA;WHERE MaterialBOM_T2.Cod_SKU = ComboHD.Cod_SKU&#xA;&#xA;update ComboHD set&#xA;  ComboHD.Tipo= 'T4'&#xA;, ComboHD.NumSKUs= MaterialBOM_T2.NumSKUs&#xA;FROM lukerVen.SD.ComboHD ComboHD&#xA;  , lukerVen.STGN.MaterialBOM_T4 MaterialBOM_T2&#xA;WHERE MaterialBOM_T2.Cod_SKU = ComboHD.Cod_SKU&#xA;&#xA;update ComboHD set&#xA;  ComboHD.Tipo= 'T3'&#xA;FROM lukerVen.SD.ComboHD ComboHD, lukerVen.SD.Productos Productos&#xA;WHERE Productos.Cod_SKU = ComboHD.Cod_SKU AND ((ComboHD.Tipo='')&#xA;AND ( (Productos.Nombre_SKU Like '%desc%')&#xA;&#x9;OR (ComboHD.Tipo='') AND (Productos.Nombre_SKU Like '%DTO%')&#xA;&#x9;OR (ComboHD.Tipo='') AND (Productos.Nombre_SKU Like '%DCTO%')&#xA;&#x9;OR (ComboHD.Tipo='') AND (Productos.Nombre_SKU Like '%ahorr%')&#xA;&#x9;OR (ComboHD.Tipo='') AND (Productos.Nombre_SKU Like '% PG % LL%')&#xA;&#x9;OR (ComboHD.Tipo='') AND (Productos.Nombre_SKU Like '% PAG% LLev%')&#xA;&#x9;OR (ComboHD.Tipo='') AND (Productos.Nombre_SKU Like '%PG%LL%')&#xA;&#x9;OR (ComboHD.Tipo='') AND (Productos.Nombre_SKU  Like '%[%]%')&#xA;&#x9;OR (ComboHD.Tipo='') AND (Productos.Nombre_SKU  Like '% LL %')&#xA;&#x9;OR (ComboHD.Tipo='') AND (Productos.Nombre_SKU  Like '% LLEV %')&#xA;&#x9;OR (ComboHD.Tipo='') AND (Productos.Nombre_SKU  Like '% LL%')&#xA;&#x9;OR (ComboHD.Tipo='') AND (Productos.Nombre_SKU  Like 'CO $%')&#xA;&#x9;OR (ComboHD.Tipo='') AND (Productos.Nombre_SKU  Like '% precio %')&#xA;) or ComboHD.Cod_SKU in (&#xA;&#xA;&#x9; '000000000007100761'&#x9;&#x9;-- COMBO PROD. NUEVOS 2&#xA;&#x9;,'000000000007101052'&#x9;&#x9;-- CO 4 GFAMILIA 1000CC GTS OLIOSOYA500CC&#xA;&#x9;,'000000000007101187'&#x9;&#x9;-- CO LUKI MORADO + 2 OFERTAS SHARPIE LUKI&#xA;&#x9;,'000000000007101243'&#x9;&#x9;-- CO CUBIERTA,COB BLANCA1KG Y CREMA POLV&#xA;&#x9;,'000000000007101245'&#x9;&#x9;-- CO CUBIERTA, COB NEGRA 1KG Y CREM POLV&#xA;&#x9;,'000000000007101268'&#x9;&#x9;-- CO2LUKERD32 500G BONORECOMPRAX 5000&#xA;&#x9;,'000000000007101507'&#x9;&#x9;-- CO  COMBO 5 LIBRAS LUKAFE CLASICO&#xA;&#x9;,'000000000007102098'&#x9;&#x9;-- CO 10 CAJASQUESURTIDO 500 P20&#xA;&#x9;,'000000000007102099'&#x9;&#x9;-- CO 10 CAJAS QUESURTIDO 500 P16&#xA;))&#xA;&#xA;update ComboHD set&#xA; ComboHD.NumSKUs= MaterialBOM_NumSKUs.NumSKUs&#xA;FROM lukerVen.SD.ComboHD ComboHD, SD.ComboBOM_NumSKUs MaterialBOM_NumSKUs&#xA;WHERE MaterialBOM_NumSKUs.Cod_SKU = ComboHD.Cod_SKU AND ((ComboHD.NumSKUs&lt;&gt;MaterialBOM_NumSKUs.NumSKUs))&#xA;&#xA;&#xA;&#xA;insert into [SD].[ComboBOM]&#xA;SELECT &#xA;MaterialBOM.Cod_SKU&#xA;, MaterialBOM.Con_SKUR&#xA;, MaterialBOM.STLKN&#xA;, MaterialBOM.SORTF&#xA;, MaterialBOM.Unidades&#xA;, MaterialBOM.Unidad,&#xA;0, 0, 0,0, MaterialBOM.Z_UnidadesRegalo&#xA;,0,0&#xA;FROM lukerVen.SD.ComboHD ComboHD, lukerVen.STGN.MaterialBOM MaterialBOM&#xA;WHERE ComboHD.Cod_SKU = MaterialBOM.Cod_SKU AND ((MaterialBOM.Planta='cd01'))&#xA;and  MaterialBOM.Cod_SKU not in (&#xA;select Cod_SKU from [SD].[ComboBOM]&#xA;)&#xA;&#xA;&#xA;update ComboBOM set&#xA; ComboBOM.PrecioLista= pptoListaPreciosSD_NACIONAL.precioUbEne&#xA;FROM lukerVen.SD.ComboBOM ComboBOM, lukerVen.dbo.pptoListaPreciosSD_NACIONAL pptoListaPreciosSD_NACIONAL&#xA;WHERE ComboBOM.Con_SKUR = pptoListaPreciosSD_NACIONAL.idMaterial AND ((pptoListaPreciosSD_NACIONAL.ano=left(@PeriodoLike,4)))&#xA;&#xA;&#xA;&#xA;&#xA;--- Descuentos Marcados erronesmente en Z&#xA;update ComboBOM set&#xA; ComboBOM.UnidadesZ= 0&#xA;FROM lukerVen.SD.ComboBOM ComboBOM, lukerVen.SD.ComboHD ComboHD, lukerVen.SD.Productos Productos, lukerVen.SD.Productos Productos_1&#xA;WHERE ComboHD.Cod_SKU = ComboBOM.Cod_SKU&#xA;AND Productos.Cod_SKU = ComboBOM.Cod_SKU&#xA;AND ComboBOM.Con_SKUR = Productos_1.Cod_SKU&#xA;AND ((ComboBOM.TipoPos&lt;&gt;'REGALO')&#xA;AND (ComboHD.NumSKUs&gt;1)&#xA;AND (ComboBOM.UnidadesZ&lt;&gt;0.0)&#xA;AND (Productos.Nombre_SKU Like '%Pague%'))&#xA;AND (ComboHD.Tipo='T2+Z')&#xA;&#xA;update ComboHD set&#xA;   ComboHD.NumSKUs= 0&#xA; , ComboHD.Tipo= 'T3-Z'&#xA;FROM lukerVen.SD.ComboBOM ComboBOM&#xA;, lukerVen.SD.ComboHD ComboHD&#xA;, lukerVen.SD.Productos Productos&#xA;, lukerVen.SD.Productos Productos_1&#xA;WHERE ComboHD.Cod_SKU = ComboBOM.Cod_SKU&#xA;AND Productos.Cod_SKU = ComboBOM.Cod_SKU&#xA;AND ComboBOM.Con_SKUR = Productos_1.Cod_SKU&#xA;AND ((ComboBOM.TipoPos&lt;&gt;'REGALO')&#xA;AND (ComboHD.NumSKUs&gt;1)&#xA;AND (Productos.Nombre_SKU Like '%Pague%')&#xA;AND (ComboHD.Tipo='T2+Z'))&#xA;&#xA;update ComboHD set&#xA;ComboHD.NumSKUs= ComboBOM_NumRegNoGift.NumRegNoGift&#xA;FROM lukerVen.SD.ComboBOM ComboBOM, lukerVen.SD.ComboBOM_NumRegNoGift ComboBOM_NumRegNoGift, lukerVen.SD.ComboHD ComboHD, lukerVen.SD.Productos Productos, lukerVen.SD.Productos Productos_1&#xA;WHERE ComboBOM.Con_SKUR = Productos.Cod_SKU AND Productos_1.Cod_SKU = ComboBOM.Cod_SKU AND ComboHD.Cod_SKU = ComboBOM.Cod_SKU AND ComboBOM_NumRegNoGift.Cod_SKU = ComboHD.Cod_SKU AND ((ComboBOM.Con_SKUR Not Like '000000000008%') AND (ComboBOM.TipoPos&lt;&gt;'REGALO') AND (ComboHD.Tipo='T3-Z'))&#xA;&#xA;update ComboHD set&#xA;   ComboHD.Tipo= 'T4_8'&#xA;FROM lukerVen.SD.ComboBOM ComboBOM&#xA;, lukerVen.SD.ComboHD ComboHD&#xA;, lukerVen.SD.Productos Productos&#xA;, HBAVENNAL.dbo.zMATERIALES zMATERIALES&#xA;WHERE ComboHD.Cod_SKU = ComboBOM.Cod_SKU&#xA;AND Productos.Cod_SKU = ComboBOM.Cod_SKU&#xA;AND ComboBOM.Con_SKUR = zMATERIALES.Material&#xA;AND ((ComboHD.NumSKUs=2) AND (ComboBOM.TipoPos='REGALO')&#xA;AND (ComboBOM.Con_SKUR Like '000000000008%'))&#xA;&#xA;--------------------------&#xA;---- % para explosiones --&#xA;--------------------------&#xA;update ComboBOM set ComboBOM.PrecioLista= ListaPreciosBase.PrecioNeto&#xA;FROM [SRVDBLUKBO01\B2C].[lukerVen].SD.ComboBOM ComboBOM&#xA;, [SRVDBLUKBO01\B2C].[lukerVen].PVOF.ListaPreciosBase ListaPreciosBase&#xA;WHERE ComboBOM.Con_SKUR = ListaPreciosBase.Cod_SKU AND ((ComboBOM.PrecioLista=0) &#xA;AND (ComboBOM.TipoPos&lt;&gt;'REGALO') AND (ListaPreciosBase.Cod_Lista='1'))&#xA;&#xA;&#xA;Update ComboBOM set&#xA;  ComboBOM.PorcentPrecioVenta&#x9;= ComboBOM_PrecioBase.ValorBase/ComboBOM_PrecioBaseT.ValorBaseT&#xA;, ComboBOM.PorcentPeso&#x9;&#x9;&#x9;= ComboBOM_PrecioBase.PesoBase/ComboBOM_PrecioBaseT.PesoBaseT&#xA;FROM [SRVDBLUKBO01\B2C].lukerVen.SD.ComboBOM ComboBOM&#xA;, [SRVDBLUKBO01\B2C].lukerVen.SD.ComboBOM_PrecioBase ComboBOM_PrecioBase&#xA;, [SRVDBLUKBO01\B2C].lukerVen.SD.ComboBOM_PrecioBaseT ComboBOM_PrecioBaseT&#xA;, [SRVDBLUKBO01\B2C].lukerVen.SD.Productos Productos&#xA;WHERE ComboBOM_PrecioBase.Cod_SKU = ComboBOM.Cod_SKU&#xA;AND ComboBOM_PrecioBase.Con_SKUR = ComboBOM.Con_SKUR&#xA;AND ComboBOM_PrecioBase.Consecutivo = ComboBOM.Consecutivo&#xA;AND ComboBOM_PrecioBaseT.Cod_SKU = ComboBOM.Cod_SKU&#xA;AND Productos.Cod_SKU = ComboBOM.Cod_SKU&#xA;and ComboBOM_PrecioBaseT.ValorBaseT &lt;&gt;0&#xA;and ComboBOM_PrecioBaseT.PesoBaseT &lt;&gt;0&#xA;&#xA;&#xA;update ComboBOM set&#xA;  ComboBOM.PorcentBonifica&#x9;&#x9;= 1&#xA;, ComboBOM.PorcentDescuento&#x9;&#x9;= 1&#xA;, ComboBOM.PorcentPrecioVenta&#x9;= 1&#xA;FROM [SRVDBLUKBO01\B2C].lukerVen.SD.ComboBOM ComboBOM&#xA;, [SRVDBLUKBO01\B2C].lukerVen.SD.ComboHD ComboHD&#xA;, [SRVDBLUKBO01\B2C].lukerVen.SD.Productos Productos&#xA;, [SRVDBLUKBO01\B2C].HBAVENNAL.dbo.zMATERIALES zMATERIALES&#xA;WHERE ComboHD.Cod_SKU = ComboBOM.Cod_SKU&#xA;AND Productos.Cod_SKU = ComboBOM.Cod_SKU&#xA;AND ComboBOM.Con_SKUR = zMATERIALES.Material&#xA;AND ((ComboHD.NumSKUs=1) OR (ComboHD.NumSKUs=2) AND (ComboHD.Tipo='T4%'))&#xA;&#xA;insert into [SRVDBLUKBO01\B2C].[lukerVen].[SD].[ComboBOM]&#xA;select * from [lukerVen].[SD].[ComboBOM]&#xA;where Cod_SKU not in (&#xA;    select Cod_SKU from [SRVDBLUKBO01\B2C].[lukerVen].[SD].[ComboBOM]&#xA;)&#xA;&#xA;insert into [SRVDBLUKBO01\B2C].[lukerVen].[SD].[Productos]&#xA;select *,'' from [lukerVen].[SD].[Productos]&#xA;where Cod_SKU not in (&#xA;&#x9;select Cod_SKU from [SRVDBLUKBO01\B2C].[lukerVen].[SD].[Productos]&#xA;)&#xA;&#xA;insert into [SRVDBLUKBO01\B2C].[lukerVen].[SD].[ComboHD]&#xA;select * from [lukerVen].[SD].[ComboHD]&#xA;where Cod_SKU not in (&#xA;  select Cod_SKU from [SRVDBLUKBO01\B2C].[lukerVen].[SD].[ComboHD]&#xA;&#xA;)&#xA;--*****************************************************&#xA;&#xA;   FETCH NEXT FROM ciclo_cursor &#xA;   INTO @x_PeriodoVentas&#xA;END&#xA;CLOSE ciclo_cursor&#xA;DEALLOCATE ciclo_cursor&#xA;GO&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Fact"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{3729AD30-F196-4665-93FE-48D67768F7A2}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Fact"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="1">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{2CB65742-8E44-4369-852E-A9D127478E71}"
          SQLTask:SqlStatementSource="declare @x_PeriodoVentas varchar(6)&#xA;&#xA;DECLARE ciclo_cursor CURSOR FOR &#xA;SELECT DISTINCT left(BillingDocumentDate,6)&#xA;FROM lukerVen.SAPBWUSER.zNqFacBillingDocument zNqFacBillingDocument&#xA;ORDER BY left(BillingDocumentDate,6)&#xA;&#xA;OPEN ciclo_cursor&#xA;FETCH NEXT FROM ciclo_cursor &#xA;INTO @x_PeriodoVentas&#xA;&#xA;&#xA;WHILE @@FETCH_STATUS = 0&#xA;BEGIN &#xA;&#xA;&#x9;update ZPREALVENTAFI set&#xA;&#x9;ZPREALVENTAFI.periodo= (&#xA;               @x_PeriodoVentas&#xA;&#x9;) &#x9;FROM HBAVENNAL.SAPBWUSER.ZPREALVENTAFI ZPREALVENTAFI&#xA;&#x9;&#xA;&#x9;delete SD.Facturas&#xA;&#x9;WHERE left(BillingDocumentDate,6)=@x_PeriodoVentas  --and Origen='Billing' &#xA;&#x9;&#xA;&#x9;delete Facturas&#xA;&#x9;FROM lukerVen.SD.Facturas Facturas, lukerVen.SAPBWUSER.zNqFacBillingDocument zNqFacBillingDocument&#xA;&#x9;WHERE zNqFacBillingDocument.BillingDocumentItem = Facturas.BillingDocumentItem AND zNqFacBillingDocument.Factura = Facturas.Factura --AND ((Facturas.BillingDocumentDate='20190430'))&#xA;&#x9;&#x9;and left(zNqFacBillingDocument.BillingDocumentDate,6)=@x_PeriodoVentas&#xA;&#xA;&#x9;Print (@x_PeriodoVentas)&#xA;&#x9;INSERT INTO [lukerVen].[SD].[Facturas] ([Origen] , [Factura] , [BillingDocumentItem] , [Cod_TipoFactura] , [Cod_CategoriaFactura] , [FechaFactura] , [SDDocumentCategory] , [Cod_OrgVentas] , [Cod_GCliente] , [Cod_Canal] , [Planta] , [JerarquiaProducto] , [Cod_SKU] , [BillingDocumentItemText] , [ReferenceSDDocument] , [ReferenceSDDocumentItem] , [UnidadCantidadFacturada] , [TransactionCurrency] , [Cod_Cliente] &#xA;&#x9;, [PayerParty]&#xA;&#x9; , [AccountingPostingStatus] &#xA;&#x9;, Cod_SKU_Regular , [SalesOffice] , [AccountingExchangeRate] , [BillingDocumentDate] , [Cod_MotivoNoVenta] , [BillingDocumentIsCancelled] , [ProfitCenter] , [Unidades] , [Kilos] , [ValorNeto] , [Impuesto] , [FechaPedido],[SalesDocument],ClienteForNum,RefNoVenta,MotivoNV,SUnidadesNV,SValorNV, &quot;GrupoVendedor&quot;)&#xA;&#x9;SELECT 'Billing',*&#xA;&#x9;FROM lukerVen.SAPBWUSER.zNqFacBillingDocument zNqFacBillingDocument &#xA;    WHERE left(BillingDocumentDate,6)=@x_PeriodoVentas&#xA;   &#xA;&#x9;and SoldToParty  in (&#xA;&#x9;&#x9;SELECT Clientes.Cod_Cliente&#xA;&#x9;&#x9;FROM lukerVen.SD.Clientes Clientes&#xA;&#x9;)&#xA;&#xA;   FETCH NEXT FROM ciclo_cursor &#xA;   INTO @x_PeriodoVentas&#xA;END&#xA;CLOSE ciclo_cursor&#xA;DEALLOCATE ciclo_cursor&#xA;GO&#xA;&#xA;&#xA;USE [lukerVen]&#xA;GO&#xA;&#xA;/****** Object:  Table [SD].[NumericaCliente]    Script Date: 07/27/2017 11:13:52 ******/&#xA;IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[SD].[NumericaCliente]') AND type in (N'U'))&#xA;DROP TABLE [SD].[NumericaCliente]&#xA;GO&#xA;&#xA;USE [lukerVen]&#xA;GO&#xA;&#xA;/****** Object:  Table [SD].[NumericaCliente]    Script Date: 07/27/2017 11:13:52 ******/&#xA;SET ANSI_NULLS ON&#xA;GO&#xA;&#xA;SET QUOTED_IDENTIFIER ON&#xA;GO&#xA;&#xA;SET ANSI_PADDING ON&#xA;GO&#xA;&#xA;CREATE TABLE [SD].[NumericaCliente](&#xA;&#x9;[Origen] [varchar](10) NOT NULL,&#xA;&#x9;[Factura] [varchar](10) NOT NULL,&#xA;&#x9;[BillingDocumentItem] [varchar](6) NOT NULL,&#xA;&#x9;[ClienteForNum] [varchar](10) NOT NULL,&#xA;&#x9;[SalesDocument] [varchar](10) NULL,&#xA; CONSTRAINT [PK_NumericaCliente] PRIMARY KEY CLUSTERED &#xA;(&#xA;&#x9;[Origen] ASC,&#xA;&#x9;[Factura] ASC,&#xA;&#x9;[BillingDocumentItem] ASC&#xA;)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]&#xA;) ON [PRIMARY]&#xA;&#xA;GO&#xA;&#xA;SET ANSI_PADDING OFF&#xA;GO&#xA;&#xA;&#xA;INSERT INTO [lukerVen].[SD].[NumericaCliente]&#xA;&#xA;SELECT Facturas.Origen, Facturas.Factura, Facturas.BillingDocumentItem, Facturas.ClienteForNum, Facturas.SalesDocument&#xA;FROM lukerVen.SD.Facturas Facturas&#xA;WHERE (Facturas.ClienteForNum Is Not Null)" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\inact cli sin h"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{4A1215B2-83DA-4CF6-AA4D-00862558A8B6}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="inact cli sin h"
      DTS:ThreadHint="2">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{2CB65742-8E44-4369-852E-A9D127478E71}"
          SQLTask:SqlStatementSource="/**&#xA;SELECT  distinct CASE Clientes.Cod_Zona_Ventas WHEN '' THEN CASE isnull(EquivalenciaJerarquiaOrph.Cod_Cliente, '') &#xA;                  WHEN '' THEN Facturas.Cod_Cliente ELSE isnull(EquivalenciaJerarquiaOrph.Cod_Cliente, '') END ELSE Facturas.Cod_Cliente END AS Cod_Cliente&#xA;into #FacturasW&#xA;FROM        SD.FacturasW AS Facturas INNER JOIN&#xA;                  SD.CanalDistribucion ON Facturas.Cod_Canal = SD.CanalDistribucion.Cod_Canal INNER JOIN&#xA;                  SD.Productos ON Facturas.Cod_SKU = SD.Productos.Cod_SKU INNER JOIN&#xA;                  SD.CategoriaMarcaCanal ON SD.Productos.Aliado = SD.CategoriaMarcaCanal.Aliado AND SD.Productos.Categoria = SD.CategoriaMarcaCanal.Categoria AND SD.Productos.Marca = SD.CategoriaMarcaCanal.Marca AND &#xA;                  Facturas.Cod_Canal = SD.CategoriaMarcaCanal.Cod_Canal AND Facturas.Cod_OrgVentas = SD.CategoriaMarcaCanal.Cod_OrgVentas INNER JOIN&#xA;                  SD.MotivosNoVenta ON Facturas.Cod_MotivoNoVenta = SD.MotivosNoVenta.Cod_Motivo LEFT OUTER JOIN&#xA;                  SD.Clientes ON Facturas.Cod_Cliente = SD.Clientes.Cod_Cliente LEFT OUTER JOIN&#xA;                  SD.AliasSKU ON Facturas.Cod_SKU = SD.AliasSKU.Cod_SKU LEFT OUTER JOIN&#xA;                  SD.EquivalenciaJerarquiaOrph AS EquivalenciaJerarquiaOrph ON EquivalenciaJerarquiaOrph.Cod_Canal = Facturas.Cod_Canal AND EquivalenciaJerarquiaOrph.Cod_GCliente = Facturas.Cod_GCliente AND &#xA;                  Facturas.SalesOffice = EquivalenciaJerarquiaOrph.Cod_Oficina_Ventas&#xA;&#xA;SELECT    distinct SD.DescuentosVW.Cod_Cliente&#xA;into #DescuentosVW&#xA;FROM        SD.DescuentosVW LEFT OUTER JOIN&#xA;                  SD.AliasSKU ON SD.DescuentosVW.Cod_SKU = SD.AliasSKU.Cod_SKU&#xA;&#xA;&#xA;select distinct Cod_Cliente  into #Cliente from #FacturasW&#xA;Union select  Cod_Cliente from  #DescuentosVW&#xA;&#xA;update Clientes set Clientes.Estatus='Inactivo'&#xA;FROM lukerVen.SD.Clientes Clientes&#xA;left outer join #Cliente cl on Clientes.Cod_Cliente=cl.Cod_Cliente&#xA;where cl.Cod_Cliente is null&#xA;and Clientes.Estatus&lt;&gt;'Inactivo'&#xA;&#xA;drop table #FacturasW&#xA;drop table #DescuentosVW&#xA;drop table #Cliente &#xA;**/" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Insert Clientes"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{6BAF0E82-92EB-4004-98E7-3E8C4F648E32}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Insert Clientes"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{2CB65742-8E44-4369-852E-A9D127478E71}"
          SQLTask:SqlStatementSource="USE [lukerVen]&#xA;GO&#xA;&#xA;INSERT INTO [SD].[Clientes]&#x9;   &#xA;&#x9;select [Cod_Cliente]&#xA;           ,isnull([Nombre_Cliente],'')&#xA;           , isnull([Cod_Canal],'')&#xA;           ,isnull([Nombre_Canal],'')&#xA;           ,isnull([Cod_Pais],'')&#xA;           ,isnull([Cod_GCliente],'')&#xA;           ,isnull([Nombre_GCliente],'')&#xA;           ,isnull([Cod_Oficina_Ventas],'')&#xA;           ,isnull([Nombre_Oficina_Ventas],'')&#xA;           ,isnull([Cod_Zona_Ventas],'')&#xA;           ,isnull([Cod_Vendedor],'')&#xA;           ,isnull([Nombre_Vendedor],'')&#xA;           ,isnull([Cod_Region],'')&#xA;           ,isnull([Nombre_Ciudad],'')&#xA;           ,isnull([Cod_Central],'')&#xA;           ,isnull([Cod_GCliente_AD1],'')&#xA;           ,isnull([Nombre_GCliente_AD1],'')&#xA;           ,isnull([Cod_GCliente_AD2],'')&#xA;           , isnull([Nombre_GCliente_AD2],'')&#xA;           ,isnull([Cod_Pagador],'')&#xA;           ,isnull([Telebox],'')&#xA;           ,isnull([Gerente_Comercial],'')&#xA;           ,isnull([Director_Canal],'')&#xA;           ,isnull([Lider_Regional],'')&#xA;           ,isnull([Jefe_Ventas],'')&#xA;           ,isnull([Fecha_Creacion_Cliente],'')&#xA;           ,esActivo&#xA;           ,isnull([Cod_Ruta],'')&#xA;           ,isnull([CoordenadasX],'')&#xA;           ,isnull([CoordenadasY],'')&#xA;           ,isnull([Cedi],'')&#xA;           ,isnull([Cod_CondiPago],'')&#xA;           ,isnull([Barrio],'')&#xA;           ,isnull([Cod_Blck],'')&#xA;           ,isnull([Poblacion],'')&#xA;           ,isnull([Direccion],'')&#xA;           ,isnull([Cod_GCliente_AD3],'')&#xA;from [HBAVENNAL].[STGN].[zDmCli]&#xA;where [Cod_Cliente] not in (&#xA;   select [Cod_Cliente] from [lukerVen].[SD].[Clientes]&#xA;) " xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Jer Y VENTA POST dane"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Tarea Ejecutar SQL"
      DTS:DTSID="{D1CD6104-4CAA-4BD0-9287-13525EC3598D}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Jer Y VENTA POST dane"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{2CB65742-8E44-4369-852E-A9D127478E71}"
          SQLTask:SqlStatementSource="update Clientes set &#xA;&#xA;&#x9;  Clientes.Nombre_Cliente&#x9;=&#x9;isnull(&#x9;  zNqDmCliFull.Nombre_Cliente&#x9;,'')&#xA;&#x9;, Clientes.Cod_Canal&#x9;=&#x9;isnull(&#x9; zNqDmCliFull.Cod_Canal&#x9;,'')&#xA;&#x9;, Clientes.Nombre_Canal&#x9;=&#x9;isnull(&#x9; zNqDmCliFull.Nombre_Canal&#x9;,'')&#xA;&#x9;, Clientes.Cod_Pais&#x9;=&#x9;isnull(&#x9; zNqDmCliFull.Cod_Pais&#x9;,'')&#xA;&#x9;, Clientes.Cod_GCliente&#x9;=&#x9;isnull(&#x9; zNqDmCliFull.Cod_GCliente&#x9;,'')&#xA;&#x9;, Clientes.Nombre_GCliente&#x9;=&#x9;isnull(&#x9; zNqDmCliFull.Nombre_GCliente&#x9;,'')&#xA;&#x9;, Clientes.Cod_Oficina_Ventas&#x9;=&#x9;isnull(&#x9; zNqDmCliFull.Cod_Oficina_Ventas&#x9;,'')&#xA;&#x9;, Clientes.Nombre_Oficina_Ventas&#x9;=&#x9;isnull(&#x9; zNqDmCliFull.Nombre_Oficina_Ventas&#x9;,'')&#xA;&#x9;, Clientes.Cod_Zona_Ventas&#x9;=&#x9;isnull(&#x9; zNqDmCliFull.Cod_Zona_Ventas&#x9;,'')&#xA;&#x9;, Clientes.Cod_Vendedor&#x9;=&#x9;isnull(&#x9; zNqDmCliFull.Cod_Vendedor&#x9;,'')&#xA;&#x9;, Clientes.Nombre_Vendedor&#x9;=&#x9;isnull(&#x9; zNqDmCliFull.Nombre_Vendedor&#x9;,'') &#xA;&#x9;, Clientes.Cod_Region&#x9;=&#x9;isnull(&#x9; zNqDmCliFull.Cod_Region&#x9;,'')&#xA;&#x9;, Clientes.Nombre_Ciudad&#x9;=&#x9;isnull(&#x9; zNqDmCliFull.Nombre_Ciudad&#x9;,'')  collate SQL_Latin1_General_Cp1251_CS_AS&#xA;&#x9;, Clientes.Cod_Central&#x9;=&#x9;isnull(&#x9; zNqDmCliFull.Cod_Central&#x9;,'')&#xA;&#x9;, Clientes.Cod_GCliente_AD1&#x9;=&#x9;isnull(&#x9; zNqDmCliFull.Cod_GCliente_AD1&#x9;,'')&#xA;&#x9;, Clientes.Nombre_GCliente_AD1&#x9;=&#x9;isnull(&#x9; zNqDmCliFull.Nombre_GCliente_AD1&#x9;,'')&#xA;&#x9;, Clientes.Cod_GCliente_AD2&#x9;=&#x9;isnull(&#x9; zNqDmCliFull.Cod_GCliente_AD2&#x9;,'')&#xA;&#x9;, Clientes.Cod_GCliente_AD3&#x9;=&#x9;isnull(&#x9; zNqDmCliFull.Cod_GCliente_AD3&#x9;,'')&#xA;&#x9;, Clientes.Nombre_GCliente_AD2&#x9;=&#x9;isnull(&#x9; zNqDmCliFull.Nombre_GCliente_AD2&#x9;,'')&#xA;&#x9;, Clientes.Cod_Pagador&#x9;=&#x9;isnull(&#x9; zNqDmCliFull.Cod_Pagador&#x9;,'')&#xA;&#x9;, Clientes.Telebox&#x9;=&#x9;isnull(&#x9; zNqDmCliFull.Telebox&#x9;,'')&#xA;&#x9;, Clientes.Gerente_Comercial&#x9;=&#x9;isnull(&#x9; zNqDmCliFull.Gerente_Comercial&#x9;,'')&#xA;&#x9;, Clientes.Director_Canal&#x9;=&#x9;isnull(&#x9; zNqDmCliFull.Director_Canal&#x9;,'')&#xA;&#x9;, Clientes.Lider_Regional&#x9;=&#x9;isnull(&#x9; zNqDmCliFull.Lider_Regional&#x9;,'')&#xA;&#x9;, Clientes.Jefe_Ventas&#x9;=&#x9;isnull(&#x9; zNqDmCliFull.Jefe_Ventas&#x9;,'')&#xA;&#x9;, Clientes.Fecha_Creacion_Cliente&#x9;=&#x9;isnull(&#x9; zNqDmCliFull.Fecha_Creacion_Cliente&#x9;,'')&#xA;&#x9;, Clientes.Estatus&#x9;=&#x9;isnull(&#x9; zNqDmCliFull.esActivo&#x9;,'')&#xA;&#x9;, Clientes.Cod_Ruta&#x9;=&#x9;isnull(&#x9; zNqDmCliFull.Cod_Ruta&#x9;,'')&#xA;&#x9;, Clientes.CoordenadasX&#x9;=&#x9;isnull(&#x9; zNqDmCliFull.CoordenadasX&#x9;,'')&#xA;&#x9;, Clientes.CoordenadasY&#x9;=&#x9;isnull(&#x9; zNqDmCliFull.CoordenadasY&#x9;,'')&#xA;&#x9;, Clientes.Cedi&#x9;=&#x9;isnull(&#x9; zNqDmCliFull.Cedi&#x9;,'')&#xA;&#x9;, Clientes.Cod_CondiPago&#x9;=&#x9;isnull(&#x9; zNqDmCliFull.Cod_CondiPago&#x9;,'')&#xA;&#x9;, Clientes.Barrio&#x9;=&#x9;isnull(&#x9; zNqDmCliFull.Barrio&#x9;,'')&#xA;&#x9;, Clientes.Cod_Blck&#x9;=&#x9;isnull(&#x9; zNqDmCliFull.Cod_Blck&#x9;,'')&#xA;&#x9;, Clientes.Poblacion&#x9;=&#x9;isnull(&#x9; zNqDmCliFull.Poblacion&#x9;,'')&#xA;&#x9;, Clientes.Direccion&#x9;=&#x9;isnull(&#x9; zNqDmCliFull.Direccion&#x9;,'')&#xA;&#xA;&#xA;FROM lukerVen.SD.Clientes Clientes&#xA;inner join HBAVENNAL.STGN.zNqDmCliFull zNqDmCliFull&#xA;on zNqDmCliFull.Cod_Cliente =  Clientes.Cod_Cliente &#xA;--AND Clientes.Cod_Canal = zNqDmCliFull.Cod_Canal&#xA;&#xA;where   &#xA;  Clientes.Nombre_Cliente&#x9;&lt;&gt;&#x9;isnull(&#x9;  zNqDmCliFull.Nombre_Cliente&#x9;,'')&#xA;or Clientes.Nombre_Canal&#x9;&lt;&gt;&#x9;isnull(&#x9; zNqDmCliFull.Nombre_Canal&#x9;,'')&#xA;or Clientes.Cod_Canal&#x9;=&#x9;isnull(&#x9; zNqDmCliFull.Cod_Canal&#x9;,'')&#xA;or zNqDmCliFull.Nombre_Canal&#x9;&lt;&gt;&#x9;isnull(&#x9; zNqDmCliFull.Nombre_Canal&#x9;,'')&#xA;or Clientes.Cod_Pais&#x9;&lt;&gt;&#x9;isnull(&#x9; zNqDmCliFull.Cod_Pais&#x9;,'')&#xA;or Clientes.Cod_GCliente&#x9;&lt;&gt;&#x9;isnull(&#x9; zNqDmCliFull.Cod_GCliente&#x9;,'')&#xA;or Clientes.Nombre_GCliente&#x9;&lt;&gt;&#x9;isnull(&#x9; zNqDmCliFull.Nombre_GCliente&#x9;,'')&#xA;or Clientes.Cod_Oficina_Ventas&#x9;&lt;&gt;&#x9;isnull(&#x9; zNqDmCliFull.Cod_Oficina_Ventas&#x9;,'')&#xA;or Clientes.Nombre_Oficina_Ventas&#x9;&lt;&gt;&#x9;isnull(&#x9; zNqDmCliFull.Nombre_Oficina_Ventas&#x9;,'')&#xA;or Clientes.Cod_Zona_Ventas&#x9;&lt;&gt;&#x9;isnull(&#x9; zNqDmCliFull.Cod_Zona_Ventas&#x9;,'')&#xA;or Clientes.Cod_Vendedor&#x9;&lt;&gt;&#x9;isnull(&#x9; zNqDmCliFull.Cod_Vendedor&#x9;,'')&#xA;or Clientes.Nombre_Vendedor&#x9;&lt;&gt;&#x9;isnull(&#x9; zNqDmCliFull.Nombre_Vendedor&#x9;,'')&#xA;or Clientes.Cod_Region&#x9;&lt;&gt;&#x9;isnull(&#x9; zNqDmCliFull.Cod_Region&#x9;,'')&#xA;or Clientes.Nombre_Ciudad&#x9;&lt;&gt;&#x9;isnull(&#x9; zNqDmCliFull.Nombre_Ciudad&#x9;,'')  collate SQL_Latin1_General_Cp1251_CS_AS&#xA;or Clientes.Cod_Central&#x9;&lt;&gt;&#x9;isnull(&#x9; zNqDmCliFull.Cod_Central&#x9;,'')&#xA;or Clientes.Cod_GCliente_AD1&#x9;&lt;&gt;&#x9;isnull(&#x9; zNqDmCliFull.Cod_GCliente_AD1&#x9;,'')&#xA;or Clientes.Nombre_GCliente_AD1&#x9;&lt;&gt;&#x9;isnull(&#x9; zNqDmCliFull.Nombre_GCliente_AD1&#x9;,'')&#xA;or Clientes.Cod_GCliente_AD2&#x9;&lt;&gt;&#x9;isnull(&#x9; zNqDmCliFull.Cod_GCliente_AD2&#x9;,'')&#xA;or Clientes.Cod_GCliente_AD3&#x9;&lt;&gt;&#x9;isnull(&#x9; zNqDmCliFull.Cod_GCliente_AD3&#x9;,'')&#xA;or Clientes.Nombre_GCliente_AD2&#x9;&lt;&gt;&#x9;isnull(&#x9; isnull(zNqDmCliFull.Nombre_GCliente_AD2,'')&#x9;,'')&#xA;or Clientes.Cod_Pagador&#x9;&lt;&gt;&#x9;isnull(&#x9;  isnull(zNqDmCliFull.Cod_Pagador,'')&#x9;,'')&#xA;or Clientes.Telebox&#x9;&lt;&gt;&#x9;isnull(&#x9; zNqDmCliFull.Telebox&#x9;,'')&#xA;or Clientes.Gerente_Comercial&#x9;&lt;&gt;&#x9;isnull(&#x9; zNqDmCliFull.Gerente_Comercial&#x9;,'')&#xA;or Clientes.Director_Canal&#x9;&lt;&gt;&#x9;isnull(&#x9; zNqDmCliFull.Director_Canal&#x9;,'')&#xA;or Clientes.Lider_Regional&#x9;&lt;&gt;&#x9;isnull(&#x9; zNqDmCliFull.Lider_Regional&#x9;,'')&#xA;or Clientes.Jefe_Ventas&#x9;&lt;&gt;&#x9;isnull(&#x9; isnull(zNqDmCliFull.Jefe_Ventas,'')&#x9;,'')&#xA;or Clientes.Fecha_Creacion_Cliente&#x9;&lt;&gt;&#x9;isnull(&#x9; zNqDmCliFull.Fecha_Creacion_Cliente&#x9;,'')&#xA;or Clientes.Estatus&#x9;&lt;&gt;&#x9;isnull(&#x9; zNqDmCliFull.esActivo&#x9;,'')&#xA;or Clientes.Cod_Ruta&#x9;&lt;&gt;&#x9;isnull(&#x9; zNqDmCliFull.Cod_Ruta&#x9;,'')&#xA;or Clientes.CoordenadasX&#x9;&lt;&gt;&#x9;isnull(&#x9; zNqDmCliFull.CoordenadasX&#x9;,'')&#xA;or Clientes.CoordenadasY&#x9;&lt;&gt;&#x9;isnull(&#x9; zNqDmCliFull.CoordenadasY&#x9;,'')&#xA;or Clientes.Cedi&#x9;&lt;&gt;&#x9;isnull(&#x9; zNqDmCliFull.Cedi&#x9;,'')&#xA;or Clientes.Cod_CondiPago&#x9;&lt;&gt;&#x9;isnull(&#x9; zNqDmCliFull.Cod_CondiPago&#x9;,'')&#xA;or Clientes.Barrio&#x9;&lt;&gt;&#x9;isnull(&#x9; zNqDmCliFull.Barrio&#x9;,'')&#xA;or Clientes.Cod_Blck&#x9;&lt;&gt;&#x9;isnull(&#x9; zNqDmCliFull.Cod_Blck&#x9;,'')&#xA;or Clientes.Poblacion&#x9;&lt;&gt;&#x9;isnull(&#x9; zNqDmCliFull.Poblacion&#x9;,'')&#xA;or Clientes.Direccion&#x9;&lt;&gt;&#x9;isnull(&#x9; zNqDmCliFull.Direccion&#x9;,'')&#xA;&#xA;update Clientes set &#xA;&#xA;&#x9;  Clientes.Nombre_Cliente&#x9;=&#x9;isnull(&#x9;  zNqDmCliFull.Nombre_Cliente&#x9;,'')&#xA;&#x9;, Clientes.Cod_Canal&#x9;=&#x9;isnull(&#x9; zNqDmCliFull.Cod_Canal&#x9;,'')&#xA;&#x9;, Clientes.Nombre_Canal&#x9;=&#x9;isnull(&#x9; zNqDmCliFull.Nombre_Canal&#x9;,'')&#xA;&#x9;, Clientes.Cod_Pais&#x9;=&#x9;isnull(&#x9; zNqDmCliFull.Cod_Pais&#x9;,'')&#xA;&#x9;, Clientes.Cod_GCliente&#x9;=&#x9;isnull(&#x9; zNqDmCliFull.Cod_GCliente&#x9;,'')&#xA;&#x9;, Clientes.Nombre_GCliente&#x9;=&#x9;isnull(&#x9; zNqDmCliFull.Nombre_GCliente&#x9;,'')&#xA;&#x9;, Clientes.Cod_Oficina_Ventas&#x9;=&#x9;isnull(&#x9; zNqDmCliFull.Cod_Oficina_Ventas&#x9;,'')&#xA;&#x9;, Clientes.Nombre_Oficina_Ventas&#x9;=&#x9;isnull(&#x9; zNqDmCliFull.Nombre_Oficina_Ventas&#x9;,'')&#xA;&#x9;, Clientes.Cod_Zona_Ventas&#x9;=&#x9;isnull(&#x9; zNqDmCliFull.Cod_Zona_Ventas&#x9;,'')&#xA;&#x9;, Clientes.Cod_Vendedor&#x9;=&#x9;isnull(&#x9; zNqDmCliFull.Cod_Vendedor&#x9;,'')&#xA;&#x9;, Clientes.Nombre_Vendedor&#x9;=&#x9;isnull(&#x9; zNqDmCliFull.Nombre_Vendedor&#x9;,'') &#xA;&#x9;, Clientes.Cod_Region&#x9;=&#x9;isnull(&#x9; zNqDmCliFull.Cod_Region&#x9;,'')&#xA;&#x9;, Clientes.Nombre_Ciudad&#x9;=&#x9;isnull(&#x9; zNqDmCliFull.Nombre_Ciudad&#x9;,'')  collate SQL_Latin1_General_Cp1251_CS_AS&#xA;&#x9;, Clientes.Cod_Central&#x9;=&#x9;isnull(&#x9; zNqDmCliFull.Cod_Central&#x9;,'')&#xA;&#x9;, Clientes.Cod_GCliente_AD1&#x9;=&#x9;isnull(&#x9; zNqDmCliFull.Cod_GCliente_AD1&#x9;,'')&#xA;&#x9;, Clientes.Nombre_GCliente_AD1&#x9;=&#x9;isnull(&#x9; zNqDmCliFull.Nombre_GCliente_AD1&#x9;,'')&#xA;&#x9;, Clientes.Cod_GCliente_AD2&#x9;=&#x9;isnull(&#x9; zNqDmCliFull.Cod_GCliente_AD2&#x9;,'')&#xA;&#x9;, Clientes.Cod_GCliente_AD3&#x9;=&#x9;isnull(&#x9; zNqDmCliFull.Cod_GCliente_AD3&#x9;,'')&#xA;&#x9;, Clientes.Nombre_GCliente_AD2&#x9;=&#x9;isnull(&#x9; zNqDmCliFull.Nombre_GCliente_AD2&#x9;,'')&#xA;&#x9;, Clientes.Cod_Pagador&#x9;=&#x9;isnull(&#x9; zNqDmCliFull.Cod_Pagador&#x9;,'')&#xA;&#x9;, Clientes.Telebox&#x9;=&#x9;isnull(&#x9; zNqDmCliFull.Telebox&#x9;,'')&#xA;&#x9;, Clientes.Gerente_Comercial&#x9;=&#x9;isnull(&#x9; zNqDmCliFull.Gerente_Comercial&#x9;,'')&#xA;&#x9;, Clientes.Director_Canal&#x9;=&#x9;isnull(&#x9; zNqDmCliFull.Director_Canal&#x9;,'')&#xA;&#x9;, Clientes.Lider_Regional&#x9;=&#x9;isnull(&#x9; zNqDmCliFull.Lider_Regional&#x9;,'')&#xA;&#x9;, Clientes.Jefe_Ventas&#x9;=&#x9;isnull(&#x9; zNqDmCliFull.Jefe_Ventas&#x9;,'')&#xA;&#x9;, Clientes.Fecha_Creacion_Cliente&#x9;=&#x9;isnull(&#x9; zNqDmCliFull.Fecha_Creacion_Cliente&#x9;,'')&#xA;&#x9;, Clientes.Estatus&#x9;=&#x9;isnull(&#x9; zNqDmCliFull.esActivo&#x9;,'')&#xA;&#x9;, Clientes.Cod_Ruta&#x9;=&#x9;isnull(&#x9; zNqDmCliFull.Cod_Ruta&#x9;,'')&#xA;&#x9;, Clientes.CoordenadasX&#x9;=&#x9;isnull(&#x9; zNqDmCliFull.CoordenadasX&#x9;,'')&#xA;&#x9;, Clientes.CoordenadasY&#x9;=&#x9;isnull(&#x9; zNqDmCliFull.CoordenadasY&#x9;,'')&#xA;&#x9;, Clientes.Cedi&#x9;=&#x9;isnull(&#x9; zNqDmCliFull.Cedi&#x9;,'')&#xA;&#x9;, Clientes.Cod_CondiPago&#x9;=&#x9;isnull(&#x9; zNqDmCliFull.Cod_CondiPago&#x9;,'')&#xA;&#x9;, Clientes.Barrio&#x9;=&#x9;isnull(&#x9; zNqDmCliFull.Barrio&#x9;,'')&#xA;&#x9;, Clientes.Cod_Blck&#x9;=&#x9;isnull(&#x9; zNqDmCliFull.Cod_Blck&#x9;,'')&#xA;&#x9;, Clientes.Poblacion&#x9;=&#x9;isnull(&#x9; zNqDmCliFull.Poblacion&#x9;,'')&#xA;&#x9;, Clientes.Direccion&#x9;=&#x9;isnull(&#x9; zNqDmCliFull.Direccion&#x9;,'')&#xA;&#xA;&#xA;FROM lukerVen.SD.Clientes Clientes&#xA;inner join HBAVENNAL.STGN.zNqDmCliFull zNqDmCliFull&#xA;on zNqDmCliFull.Cod_Cliente =  Clientes.Cod_Cliente &#xA;AND Clientes.Cod_Canal = zNqDmCliFull.Cod_Canal&#xA;&#xA;where   &#xA;  Clientes.Nombre_Cliente&#x9;&lt;&gt;&#x9;isnull(&#x9;  zNqDmCliFull.Nombre_Cliente&#x9;,'')&#xA;or Clientes.Nombre_Canal&#x9;&lt;&gt;&#x9;isnull(&#x9; zNqDmCliFull.Nombre_Canal&#x9;,'')&#xA;or Clientes.Cod_Canal&#x9;=&#x9;isnull(&#x9; zNqDmCliFull.Cod_Canal&#x9;,'')&#xA;or zNqDmCliFull.Nombre_Canal&#x9;&lt;&gt;&#x9;isnull(&#x9; zNqDmCliFull.Nombre_Canal&#x9;,'')&#xA;or Clientes.Cod_Pais&#x9;&lt;&gt;&#x9;isnull(&#x9; zNqDmCliFull.Cod_Pais&#x9;,'')&#xA;or Clientes.Cod_GCliente&#x9;&lt;&gt;&#x9;isnull(&#x9; zNqDmCliFull.Cod_GCliente&#x9;,'')&#xA;or Clientes.Nombre_GCliente&#x9;&lt;&gt;&#x9;isnull(&#x9; zNqDmCliFull.Nombre_GCliente&#x9;,'')&#xA;or Clientes.Cod_Oficina_Ventas&#x9;&lt;&gt;&#x9;isnull(&#x9; zNqDmCliFull.Cod_Oficina_Ventas&#x9;,'')&#xA;or Clientes.Nombre_Oficina_Ventas&#x9;&lt;&gt;&#x9;isnull(&#x9; zNqDmCliFull.Nombre_Oficina_Ventas&#x9;,'')&#xA;or Clientes.Cod_Zona_Ventas&#x9;&lt;&gt;&#x9;isnull(&#x9; zNqDmCliFull.Cod_Zona_Ventas&#x9;,'')&#xA;or Clientes.Cod_Vendedor&#x9;&lt;&gt;&#x9;isnull(&#x9; zNqDmCliFull.Cod_Vendedor&#x9;,'')&#xA;or Clientes.Nombre_Vendedor&#x9;&lt;&gt;&#x9;isnull(&#x9; zNqDmCliFull.Nombre_Vendedor&#x9;,'')&#xA;or Clientes.Cod_Region&#x9;&lt;&gt;&#x9;isnull(&#x9; zNqDmCliFull.Cod_Region&#x9;,'')&#xA;or Clientes.Nombre_Ciudad&#x9;&lt;&gt;&#x9;isnull(&#x9; zNqDmCliFull.Nombre_Ciudad&#x9;,'')  collate SQL_Latin1_General_Cp1251_CS_AS&#xA;or Clientes.Cod_Central&#x9;&lt;&gt;&#x9;isnull(&#x9; zNqDmCliFull.Cod_Central&#x9;,'')&#xA;or Clientes.Cod_GCliente_AD1&#x9;&lt;&gt;&#x9;isnull(&#x9; zNqDmCliFull.Cod_GCliente_AD1&#x9;,'')&#xA;or Clientes.Nombre_GCliente_AD1&#x9;&lt;&gt;&#x9;isnull(&#x9; zNqDmCliFull.Nombre_GCliente_AD1&#x9;,'')&#xA;or Clientes.Cod_GCliente_AD2&#x9;&lt;&gt;&#x9;isnull(&#x9; zNqDmCliFull.Cod_GCliente_AD2&#x9;,'')&#xA;or Clientes.Cod_GCliente_AD3&#x9;&lt;&gt;&#x9;isnull(&#x9; zNqDmCliFull.Cod_GCliente_AD3&#x9;,'')&#xA;or Clientes.Nombre_GCliente_AD2&#x9;&lt;&gt;&#x9;isnull(&#x9; isnull(zNqDmCliFull.Nombre_GCliente_AD2,'')&#x9;,'')&#xA;or Clientes.Cod_Pagador&#x9;&lt;&gt;&#x9;isnull(&#x9;  isnull(zNqDmCliFull.Cod_Pagador,'')&#x9;,'')&#xA;or Clientes.Telebox&#x9;&lt;&gt;&#x9;isnull(&#x9; zNqDmCliFull.Telebox&#x9;,'')&#xA;or Clientes.Gerente_Comercial&#x9;&lt;&gt;&#x9;isnull(&#x9; zNqDmCliFull.Gerente_Comercial&#x9;,'')&#xA;or Clientes.Director_Canal&#x9;&lt;&gt;&#x9;isnull(&#x9; zNqDmCliFull.Director_Canal&#x9;,'')&#xA;or Clientes.Lider_Regional&#x9;&lt;&gt;&#x9;isnull(&#x9; zNqDmCliFull.Lider_Regional&#x9;,'')&#xA;or Clientes.Jefe_Ventas&#x9;&lt;&gt;&#x9;isnull(&#x9; isnull(zNqDmCliFull.Jefe_Ventas,'')&#x9;,'')&#xA;or Clientes.Fecha_Creacion_Cliente&#x9;&lt;&gt;&#x9;isnull(&#x9; zNqDmCliFull.Fecha_Creacion_Cliente&#x9;,'')&#xA;or Clientes.Estatus&#x9;&lt;&gt;&#x9;isnull(&#x9; zNqDmCliFull.esActivo&#x9;,'')&#xA;or Clientes.Cod_Ruta&#x9;&lt;&gt;&#x9;isnull(&#x9; zNqDmCliFull.Cod_Ruta&#x9;,'')&#xA;or Clientes.CoordenadasX&#x9;&lt;&gt;&#x9;isnull(&#x9; zNqDmCliFull.CoordenadasX&#x9;,'')&#xA;or Clientes.CoordenadasY&#x9;&lt;&gt;&#x9;isnull(&#x9; zNqDmCliFull.CoordenadasY&#x9;,'')&#xA;or Clientes.Cedi&#x9;&lt;&gt;&#x9;isnull(&#x9; zNqDmCliFull.Cedi&#x9;,'')&#xA;or Clientes.Cod_CondiPago&#x9;&lt;&gt;&#x9;isnull(&#x9; zNqDmCliFull.Cod_CondiPago&#x9;,'')&#xA;or Clientes.Barrio&#x9;&lt;&gt;&#x9;isnull(&#x9; zNqDmCliFull.Barrio&#x9;,'')&#xA;or Clientes.Cod_Blck&#x9;&lt;&gt;&#x9;isnull(&#x9; zNqDmCliFull.Cod_Blck&#x9;,'')&#xA;or Clientes.Poblacion&#x9;&lt;&gt;&#x9;isnull(&#x9; zNqDmCliFull.Poblacion&#x9;,'')&#xA;or Clientes.Direccion&#x9;&lt;&gt;&#x9;isnull(&#x9; zNqDmCliFull.Direccion&#x9;,'')&#xA;&#xA;&#xA;&#xA;/**&#xA;   AMIGOS DE LA CASA Y VENTAS POS&#xA;**/&#xA;update JerCliente set JerCliente.NombreNodoJerarquia= 'RUIZ GONZALEZ NICOLAS'&#xA;FROM lukerVen.SD.JerCliente JerCliente&#xA;WHERE (JerCliente.JerCliente = 'J1') OR (JerCliente.JerCliente = 'K1')&#xA;and JerCliente.NombreNodoJerarquia= 'RUIZ GONZALEZ NICOLAS'&#xA;&#xA;update Clientes set&#xA;Clientes.Director_Canal= 'RUIZ GONZALEZ NICOLAS'&#xA;FROM lukerVen.SD.Clientes Clientes&#xA;WHERE (Clientes.Cod_Cliente Like 'J1%')&#xA;and Clientes.Director_Canal&lt;&gt; 'RUIZ GONZALEZ NICOLAS'&#xA;&#xA;update Clientes set&#xA;Clientes.Director_Canal= 'RUIZ GONZALEZ NICOLAS'&#xA;FROM lukerVen.SD.Clientes Clientes&#xA;WHERE (Clientes.Cod_Canal='22')&#xA;and Clientes.Director_Canal&lt;&gt; 'RUIZ GONZALEZ NICOLAS'&#xA;&#xA;&#xA;USE [lukerVen]&#xA;GO&#xA;&#xA;INSERT INTO [SD].[RegionSapMinicipioDane]&#xA;SELECT DISTINCT Clientes.Cod_Pais, Clientes.Cod_Region, Clientes.Nombre_Ciudad, '' AS 'Cod_MunicipioDane', '' AS 'NombreMunicipioDane'&#xA;FROM lukerVen.SD.Clientes Clientes&#xA;WHERE (Clientes.Cod_Pais='co')&#xA;and Clientes.Cod_Region+ Clientes.Nombre_Ciudad not in (&#xA;   select Cod_Region+Nombre_Ciudad from [SD].[RegionSapMinicipioDane]&#xA;)&#xA;&#xA;&#xA;USE [lukerVen]&#xA;GO&#xA;&#xA;INSERT INTO [SD].[RegionSapMinicipioDane]&#xA;SELECT DISTINCT Clientes.Cod_Pais, Clientes.Cod_Region, Clientes.Nombre_Ciudad, '' AS 'Cod_MunicipioDane', '' AS 'NombreMunicipioDane'&#xA;FROM lukerVen.SD.Clientes Clientes&#xA;WHERE (Clientes.Cod_Pais='co')&#xA;and Clientes.Cod_Region+ Clientes.Nombre_Ciudad not in (&#xA;   select Cod_Region+Nombre_Ciudad from [SD].[RegionSapMinicipioDane]&#xA;)&#xA;&#xA;&#xA;update RegionSapMinicipioDane set&#xA;RegionSapMinicipioDane.Cod_MunicipioDane= MunicipiosDane.Cod_Municipio&#xA;, RegionSapMinicipioDane.NombreMunicipioDane= MunicipiosDane.Nombre_Municipio&#xA;FROM lukerVen.SD.MunicipiosDane MunicipiosDane, lukerVen.SD.RegionSapMinicipioDane RegionSapMinicipioDane&#xA;WHERE MunicipiosDane.Cod_Region = RegionSapMinicipioDane.Cod_Region &#xA;AND RegionSapMinicipioDane.Nombre_Ciudad collate SQL_Latin1_General_Cp1251_CS_AS = MunicipiosDane.Nombre_Municipio collate SQL_Latin1_General_Cp1251_CS_AS&#xA;&#xA;and (RegionSapMinicipioDane.Cod_MunicipioDane&lt;&gt; MunicipiosDane.Cod_Municipio&#xA;or RegionSapMinicipioDane.NombreMunicipioDane&lt;&gt; MunicipiosDane.Nombre_Municipio)&#xA;&#xA;-- len izquierda&#xA;update RegionSapMinicipioDane set&#xA;RegionSapMinicipioDane.Cod_MunicipioDane= MunicipiosDane.Cod_Municipio&#xA;, RegionSapMinicipioDane.NombreMunicipioDane= MunicipiosDane.Nombre_Municipio&#xA;FROM lukerVen.SD.MunicipiosDane MunicipiosDane, lukerVen.SD.RegionSapMinicipioDane RegionSapMinicipioDane&#xA;WHERE MunicipiosDane.Cod_Region = RegionSapMinicipioDane.Cod_Region &#xA;&#xA;AND  replace(replace(replace(RegionSapMinicipioDane.Nombre_Ciudad collate SQL_Latin1_General_Cp1251_CS_AS,'.',''),',',''),' ','') = &#xA;left(replace(replace(replace(MunicipiosDane.Nombre_Municipio      collate SQL_Latin1_General_Cp1251_CS_AS,'.',''),',',''),' ','')  ,len(replace(replace(replace(RegionSapMinicipioDane.Nombre_Ciudad collate SQL_Latin1_General_Cp1251_CS_AS,'.',''),',',''),' ','') ))&#xA;&#xA;and (RegionSapMinicipioDane.Cod_MunicipioDane&lt;&gt; MunicipiosDane.Cod_Municipio&#xA;or RegionSapMinicipioDane.NombreMunicipioDane&lt;&gt; MunicipiosDane.Nombre_Municipio)&#xA;&#xA;-- len derecha&#xA;update RegionSapMinicipioDane set&#xA;RegionSapMinicipioDane.Cod_MunicipioDane= MunicipiosDane.Cod_Municipio&#xA;, RegionSapMinicipioDane.NombreMunicipioDane= MunicipiosDane.Nombre_Municipio&#xA;FROM lukerVen.SD.MunicipiosDane MunicipiosDane, lukerVen.SD.RegionSapMinicipioDane RegionSapMinicipioDane&#xA;WHERE MunicipiosDane.Cod_Region = RegionSapMinicipioDane.Cod_Region &#xA;&#xA;AND  left(replace(replace(replace(RegionSapMinicipioDane.Nombre_Ciudad collate SQL_Latin1_General_Cp1251_CS_AS,'.',''),',',''),' ',''), len(  replace(replace(replace(MunicipiosDane.Nombre_Municipio      collate SQL_Latin1_General_Cp1251_CS_AS,'.',''),',',''),' ','')   )) = &#xA;     replace(replace(replace(MunicipiosDane.Nombre_Municipio      collate SQL_Latin1_General_Cp1251_CS_AS,'.',''),',',''),' ','') &#xA;&#xA;and (RegionSapMinicipioDane.Cod_MunicipioDane&lt;&gt; MunicipiosDane.Cod_Municipio&#xA;or RegionSapMinicipioDane.NombreMunicipioDane&lt;&gt; MunicipiosDane.Nombre_Municipio)&#xA;&#xA;&#xA;--- Sin homonimo&#xA;update RegionSapMinicipioDane set&#xA;RegionSapMinicipioDane.Cod_MunicipioDane= MunicipiosDane.Cod_Municipio&#xA;, RegionSapMinicipioDane.NombreMunicipioDane= MunicipiosDane.Nombre_Municipio&#xA;FROM lukerVen.SD.MunicipiosDane MunicipiosDane, lukerVen.SD.RegionSapMinicipioDane RegionSapMinicipioDane&#xA;WHERE ---MunicipiosDane.Cod_Region = RegionSapMinicipioDane.Cod_Region  AND ***** Nombre Unico&#xA;RegionSapMinicipioDane.Nombre_Ciudad collate SQL_Latin1_General_Cp1251_CS_AS = MunicipiosDane.Nombre_Municipio collate SQL_Latin1_General_Cp1251_CS_AS&#xA;and Count_Municipio=1&#xA;and (RegionSapMinicipioDane.Cod_MunicipioDane&lt;&gt; MunicipiosDane.Cod_Municipio&#xA;or RegionSapMinicipioDane.NombreMunicipioDane&lt;&gt; MunicipiosDane.Nombre_Municipio)&#xA;&#xA;&#xA;update Clientes set&#xA;Clientes.Cod_Region= '50'&#xA;FROM lukerVen.SD.Clientes Clientes&#xA;WHERE (Clientes.Cod_Cliente='2000471430')&#xA;&#xA;update Clientes set&#xA;Clientes.Cod_Region= '13'&#xA;FROM lukerVen.SD.Clientes Clientes&#xA;WHERE (Clientes.Cod_Cliente='2000430401')&#xA;&#xA;&#xA;update Clientes set&#xA;Clientes.Cod_Region= '18'&#xA;FROM lukerVen.SD.Clientes Clientes&#xA;WHERE (Clientes.Cod_Cliente='2000368798')&#xA;&#xA;update Clientes set&#xA;Clientes.Cod_Region= '18'&#xA;FROM lukerVen.SD.Clientes Clientes&#xA;WHERE (Clientes.Cod_Cliente='2000481532')&#xA;&#xA;update Clientes set&#xA;Clientes.Cod_Region= '17'&#xA;FROM lukerVen.SD.Clientes Clientes&#xA;WHERE (Clientes.Cod_Cliente='2000441808')&#xA;&#xA;&#xA;update Clientes set&#xA;Clientes.Cod_Region= '17'&#xA;FROM lukerVen.SD.Clientes Clientes&#xA;WHERE (Clientes.Cod_Cliente='2000446778')&#xA;&#xA;UPDATE Clientes SET&#xA;Clientes.Nombre_Ciudad= Clientes.Poblacion&#xA;FROM lukerVen.SD.Clientes Clientes&#xA;WHERE (Clientes.Nombre_Ciudad='') AND (Clientes.Poblacion In ('BOGOTÁ, D.C.','MOCOA','MEDELLÍN','FLORENCIA'))&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Kilos Combos - Cabas"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{666E7E76-45B7-45CD-A09D-078E652FB884}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Kilos Combos - Cabas"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="2">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{2CB65742-8E44-4369-852E-A9D127478E71}"
          SQLTask:SqlStatementSource="declare @x_PeriodoVentas varchar(6)&#xA;&#xA;DECLARE ciclo_cursor CURSOR FOR &#xA;SELECT DISTINCT left(BillingDocumentDate,6)&#xA;FROM lukerVen.SAPBWUSER.zNqFacBillingDocuCombos &#xA;ORDER BY left(BillingDocumentDate,6)&#xA;&#xA;OPEN ciclo_cursor&#xA;FETCH NEXT FROM ciclo_cursor &#xA;INTO @x_PeriodoVentas&#xA;&#xA;&#xA;WHILE @@FETCH_STATUS = 0&#xA;BEGIN &#xA;&#xA;&#x9;update ZPREALVENTAFI set&#xA;&#x9;ZPREALVENTAFI.periodo= (&#xA;               @x_PeriodoVentas&#xA;&#x9;) &#x9;FROM HBAVENNAL.SAPBWUSER.ZPREALVENTAFI ZPREALVENTAFI&#xA;&#x9;&#xA;&#x9;&#xA;&#x9;Print(@x_PeriodoVentas)&#xA;    &#x9;delete SD.Facturas &#x9;WHERE left(BillingDocumentDate,6)=@x_PeriodoVentas and Origen='Combos' &#xA;    &#xA;&#x9;INSERT INTO [lukerVen].[SD].[Facturas] &#xA;&#x9;SELECT 'Combos',*&#xA;&#x9;FROM lukerVen.SAPBWUSER.zNqFacBillingDocuCombos&#xA;&#x9;WHERE left(BillingDocumentDate,6)=@x_PeriodoVentas&#xA;&#xA;&#x9;and SoldToParty  in (&#xA;&#x9;&#x9;SELECT Clientes.Cod_Cliente&#xA;&#x9;&#x9;FROM lukerVen.SD.Clientes Clientes&#xA;&#x9;)&#xA;   delete [192.168.5.23].[CABAS].[B2C].[VentasCubo] where Periodo=@x_PeriodoVentas&#xA;&#xA;&#x9;insert into [192.168.5.23].[CABAS].[B2C].[VentasCubo]&#xA;&#x9;SELECT Facturas.Cod_OrgVentas, left(BillingDocumentDate,6) AS 'Periodo', Facturas.Cod_SKU, Facturas.SalesOffice AS 'Oficina', Facturas.Planta, Sum(Facturas.Kilos) AS 'Kilos', Sum(Facturas.KilosRegalo) AS 'KilosRegalo'&#xA;&#x9;FROM lukerVen.SD.FacturasW Facturas, lukerVen.SD.Productos Productos&#xA;&#x9;WHERE Productos.Cod_SKU = Facturas.Cod_SKU AND ((left(BillingDocumentDate,6) = @x_PeriodoVentas))&#xA;&#x9;GROUP BY Facturas.Cod_OrgVentas, left(BillingDocumentDate,6), Facturas.Cod_SKU, Facturas.SalesOffice, Facturas.Planta, Productos.Aliado&#xA;&#x9;HAVING (Sum(Facturas.Kilos)&lt;&gt;0) AND (Productos.Aliado='CASA LUKER')&#xA;   FETCH NEXT FROM ciclo_cursor &#xA;   INTO @x_PeriodoVentas&#xA;END&#xA;CLOSE ciclo_cursor&#xA;DEALLOCATE ciclo_cursor&#xA;GO&#xA;&#xA;&#xA;USE [lukerVen]&#xA;GO&#xA;&#xA;delete [SD].[ventaPendiente]&#xA;INSERT INTO [SD].[ventaPendiente]&#xA;select * from  [SAPBWUSER].[zLOPE]&#xA;&#x9;where Cod_SKU  in (&#xA;&#x9;SELECT Productos.Cod_SKU&#xA;&#x9;FROM lukerVen.SD.Productos Productos&#xA;)&#x9;and SoldToParty  in (&#xA;&#x9;&#x9;SELECT Clientes.Cod_Cliente&#xA;&#x9;&#x9;FROM lukerVen.SD.Clientes Clientes&#xA;&#x9;)&#xA;&#xA;update Facturas set&#xA;   Facturas.ClienteForNum= Facturas_1.ClienteForNum&#xA; , Facturas.SalesDocument= Facturas_1.SalesDocument&#xA;FROM lukerVen.SD.Facturas Facturas, lukerVen.SD.Facturas Facturas_1&#xA;WHERE Facturas_1.BillingDocumentItem = Facturas.BillingDocumentItem &#xA;AND Facturas_1.Factura = Facturas.Factura AND ((Facturas_1.Origen='Billing') AND (Facturas.Origen='Combos'))" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Lineas"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Tarea Flujo de datos"
      DTS:DTSID="{2280208A-7F67-421E-8996-21A1A9F88509}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Lineas"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Lineas\Destino de OLE DB"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="Destino de OLE DB;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; Todos los derechos reservados; http://www.microsoft.com/sql/support;4"
              description="Destino de OLE DB"
              name="Destino de OLE DB"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="Número de segundos antes de que se agote el tiempo de espera de un comando. Un valor de 0 indica un tiempo de espera infinito."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Especifica el nombre del objeto de base de datos usado para abrir un conjunto de filas."
                  name="OpenRowset">[SD].[Lineas]</property>
                <property
                  dataType="System.String"
                  description="Especifica la variable que contiene el nombre del objeto de base de datos usado para abrir un conjunto de filas."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="Comando SQL para ejecutar."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.Int32"
                  description="Especifica la página de códigos de columna para utilizar cuando la información de página de códigos no está disponible en el origen de datos."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Fuerza el uso del valor de la propiedad DefaultCodePage al describir datos de caracteres."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Especifica el modo utilizado para obtener acceso a la base de datos."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indica si los valores proporcionados para columnas de identidad se van a copiar al destino. Si es False, los valores de las columnas de identidad se generan automáticamente en el destino. Solo se aplica si está activada la carga rápida."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indica si las columnas que contienen NULL tendrán NULL insertado en el destino. Si es False, las columnas que contienen NULL tendrán sus valores predeterminados insertados en el destino. Solo se aplica si está activada la carga rápida."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Especifica opciones para usar con la carga rápida. Solo se aplica si está activada la carga rápida."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Especifica cuándo se emiten confirmaciones durante la inserción de datos. El valor 0 especifica que se emitirá una confirmación al final de la inserción de datos. Solo se aplica si está activada la carga rápida."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Lineas\Destino de OLE DB.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[lukerVen_23]"
                  connectionManagerRefId="Package.ConnectionManagers[lukerVen_23]"
                  description="La conexión de tiempo de ejecución OLE DB usada para obtener acceso a la base de datos."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Lineas\Destino de OLE DB.Inputs[Entrada de destino de OLE DB]"
                  errorOrTruncationOperation="Insertar"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="Entrada de destino de OLE DB">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Lineas\Destino de OLE DB.Inputs[Entrada de destino de OLE DB].Columns[JerarquiaProducto]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="18"
                      cachedName="JerarquiaProducto"
                      externalMetadataColumnId="Package\Lineas\Destino de OLE DB.Inputs[Entrada de destino de OLE DB].ExternalColumns[JerarquiaProducto]"
                      lineageId="Package\Lineas\Ven 01.Outputs[Salida de origen de OLE DB].Columns[JerarquiaProducto]" />
                    <inputColumn
                      refId="Package\Lineas\Destino de OLE DB.Inputs[Entrada de destino de OLE DB].Columns[Aliado]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="40"
                      cachedName="Aliado"
                      externalMetadataColumnId="Package\Lineas\Destino de OLE DB.Inputs[Entrada de destino de OLE DB].ExternalColumns[Aliado]"
                      lineageId="Package\Lineas\Ven 01.Outputs[Salida de origen de OLE DB].Columns[Aliado]" />
                    <inputColumn
                      refId="Package\Lineas\Destino de OLE DB.Inputs[Entrada de destino de OLE DB].Columns[Categoria]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="40"
                      cachedName="Categoria"
                      externalMetadataColumnId="Package\Lineas\Destino de OLE DB.Inputs[Entrada de destino de OLE DB].ExternalColumns[Categoria]"
                      lineageId="Package\Lineas\Ven 01.Outputs[Salida de origen de OLE DB].Columns[Categoria]" />
                    <inputColumn
                      refId="Package\Lineas\Destino de OLE DB.Inputs[Entrada de destino de OLE DB].Columns[Linea]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="40"
                      cachedName="Linea"
                      externalMetadataColumnId="Package\Lineas\Destino de OLE DB.Inputs[Entrada de destino de OLE DB].ExternalColumns[Linea]"
                      lineageId="Package\Lineas\Ven 01.Outputs[Salida de origen de OLE DB].Columns[Linea]" />
                    <inputColumn
                      refId="Package\Lineas\Destino de OLE DB.Inputs[Entrada de destino de OLE DB].Columns[Marca]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="40"
                      cachedName="Marca"
                      externalMetadataColumnId="Package\Lineas\Destino de OLE DB.Inputs[Entrada de destino de OLE DB].ExternalColumns[Marca]"
                      lineageId="Package\Lineas\Ven 01.Outputs[Salida de origen de OLE DB].Columns[Marca]" />
                    <inputColumn
                      refId="Package\Lineas\Destino de OLE DB.Inputs[Entrada de destino de OLE DB].Columns[Subcategoria]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="40"
                      cachedName="Subcategoria"
                      externalMetadataColumnId="Package\Lineas\Destino de OLE DB.Inputs[Entrada de destino de OLE DB].ExternalColumns[Subcategoria]"
                      lineageId="Package\Lineas\Ven 01.Outputs[Salida de origen de OLE DB].Columns[Subcategoria]" />
                    <inputColumn
                      refId="Package\Lineas\Destino de OLE DB.Inputs[Entrada de destino de OLE DB].Columns[UndDef]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="1"
                      cachedName="UndDef"
                      externalMetadataColumnId="Package\Lineas\Destino de OLE DB.Inputs[Entrada de destino de OLE DB].ExternalColumns[UndDef]"
                      lineageId="Package\Lineas\Ven 01.Outputs[Salida de origen de OLE DB].Columns[UndDef]" />
                    <inputColumn
                      refId="Package\Lineas\Destino de OLE DB.Inputs[Entrada de destino de OLE DB].Columns[UnAlt1]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="1"
                      cachedName="UnAlt1"
                      externalMetadataColumnId="Package\Lineas\Destino de OLE DB.Inputs[Entrada de destino de OLE DB].ExternalColumns[UnAlt1]"
                      lineageId="Package\Lineas\Ven 01.Outputs[Salida de origen de OLE DB].Columns[UnAlt1]" />
                    <inputColumn
                      refId="Package\Lineas\Destino de OLE DB.Inputs[Entrada de destino de OLE DB].Columns[UnAlt2]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="1"
                      cachedName="UnAlt2"
                      externalMetadataColumnId="Package\Lineas\Destino de OLE DB.Inputs[Entrada de destino de OLE DB].ExternalColumns[UnAlt2]"
                      lineageId="Package\Lineas\Ven 01.Outputs[Salida de origen de OLE DB].Columns[UnAlt2]" />
                    <inputColumn
                      refId="Package\Lineas\Destino de OLE DB.Inputs[Entrada de destino de OLE DB].Columns[UnAlt3]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="1"
                      cachedName="UnAlt3"
                      externalMetadataColumnId="Package\Lineas\Destino de OLE DB.Inputs[Entrada de destino de OLE DB].ExternalColumns[UnAlt3]"
                      lineageId="Package\Lineas\Ven 01.Outputs[Salida de origen de OLE DB].Columns[UnAlt3]" />
                    <inputColumn
                      refId="Package\Lineas\Destino de OLE DB.Inputs[Entrada de destino de OLE DB].Columns[UnAlt4]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="1"
                      cachedName="UnAlt4"
                      externalMetadataColumnId="Package\Lineas\Destino de OLE DB.Inputs[Entrada de destino de OLE DB].ExternalColumns[UnAlt4]"
                      lineageId="Package\Lineas\Ven 01.Outputs[Salida de origen de OLE DB].Columns[UnAlt4]" />
                    <inputColumn
                      refId="Package\Lineas\Destino de OLE DB.Inputs[Entrada de destino de OLE DB].Columns[PesoDef]"
                      cachedDataType="i4"
                      cachedName="PesoDef"
                      externalMetadataColumnId="Package\Lineas\Destino de OLE DB.Inputs[Entrada de destino de OLE DB].ExternalColumns[PesoDef]"
                      lineageId="Package\Lineas\Ven 01.Outputs[Salida de origen de OLE DB].Columns[PesoDef]" />
                    <inputColumn
                      refId="Package\Lineas\Destino de OLE DB.Inputs[Entrada de destino de OLE DB].Columns[Dessidad]"
                      cachedDataType="i4"
                      cachedName="Dessidad"
                      externalMetadataColumnId="Package\Lineas\Destino de OLE DB.Inputs[Entrada de destino de OLE DB].ExternalColumns[Dessidad]"
                      lineageId="Package\Lineas\Ven 01.Outputs[Salida de origen de OLE DB].Columns[Dessidad]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Lineas\Destino de OLE DB.Inputs[Entrada de destino de OLE DB].ExternalColumns[JerarquiaProducto]"
                      codePage="1252"
                      dataType="str"
                      length="18"
                      name="JerarquiaProducto" />
                    <externalMetadataColumn
                      refId="Package\Lineas\Destino de OLE DB.Inputs[Entrada de destino de OLE DB].ExternalColumns[Aliado]"
                      codePage="1252"
                      dataType="str"
                      length="40"
                      name="Aliado" />
                    <externalMetadataColumn
                      refId="Package\Lineas\Destino de OLE DB.Inputs[Entrada de destino de OLE DB].ExternalColumns[Categoria]"
                      codePage="1252"
                      dataType="str"
                      length="40"
                      name="Categoria" />
                    <externalMetadataColumn
                      refId="Package\Lineas\Destino de OLE DB.Inputs[Entrada de destino de OLE DB].ExternalColumns[Linea]"
                      codePage="1252"
                      dataType="str"
                      length="40"
                      name="Linea" />
                    <externalMetadataColumn
                      refId="Package\Lineas\Destino de OLE DB.Inputs[Entrada de destino de OLE DB].ExternalColumns[Marca]"
                      codePage="1252"
                      dataType="str"
                      length="40"
                      name="Marca" />
                    <externalMetadataColumn
                      refId="Package\Lineas\Destino de OLE DB.Inputs[Entrada de destino de OLE DB].ExternalColumns[Subcategoria]"
                      codePage="1252"
                      dataType="str"
                      length="40"
                      name="Subcategoria" />
                    <externalMetadataColumn
                      refId="Package\Lineas\Destino de OLE DB.Inputs[Entrada de destino de OLE DB].ExternalColumns[UndDef]"
                      codePage="1252"
                      dataType="str"
                      length="4"
                      name="UndDef" />
                    <externalMetadataColumn
                      refId="Package\Lineas\Destino de OLE DB.Inputs[Entrada de destino de OLE DB].ExternalColumns[UnAlt1]"
                      codePage="1252"
                      dataType="str"
                      length="4"
                      name="UnAlt1" />
                    <externalMetadataColumn
                      refId="Package\Lineas\Destino de OLE DB.Inputs[Entrada de destino de OLE DB].ExternalColumns[UnAlt2]"
                      codePage="1252"
                      dataType="str"
                      length="4"
                      name="UnAlt2" />
                    <externalMetadataColumn
                      refId="Package\Lineas\Destino de OLE DB.Inputs[Entrada de destino de OLE DB].ExternalColumns[UnAlt3]"
                      codePage="1252"
                      dataType="str"
                      length="4"
                      name="UnAlt3" />
                    <externalMetadataColumn
                      refId="Package\Lineas\Destino de OLE DB.Inputs[Entrada de destino de OLE DB].ExternalColumns[UnAlt4]"
                      codePage="1252"
                      dataType="str"
                      length="4"
                      name="UnAlt4" />
                    <externalMetadataColumn
                      refId="Package\Lineas\Destino de OLE DB.Inputs[Entrada de destino de OLE DB].ExternalColumns[PesoDef]"
                      dataType="r8"
                      name="PesoDef" />
                    <externalMetadataColumn
                      refId="Package\Lineas\Destino de OLE DB.Inputs[Entrada de destino de OLE DB].ExternalColumns[Dessidad]"
                      dataType="r8"
                      name="Dessidad" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Lineas\Destino de OLE DB.Outputs[Salida de error de destino de OLE DB]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Salida de error de destino de OLE DB"
                  synchronousInputId="Package\Lineas\Destino de OLE DB.Inputs[Entrada de destino de OLE DB]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Lineas\Destino de OLE DB.Outputs[Salida de error de destino de OLE DB].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Lineas\Destino de OLE DB.Outputs[Salida de error de destino de OLE DB].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Lineas\Destino de OLE DB.Outputs[Salida de error de destino de OLE DB].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Lineas\Destino de OLE DB.Outputs[Salida de error de destino de OLE DB].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Lineas\Ven 01"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="Origen de OLE DB;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; Todos los derechos reservados; http://www.microsoft.com/sql/support;7"
              description="Origen de OLE DB"
              name="Ven 01"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="Número de segundos antes de que se agote el tiempo de espera de un comando. Un valor de 0 indica un tiempo de espera infinito."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Especifica el nombre del objeto de base de datos usado para abrir un conjunto de filas."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Especifica la variable que contiene el nombre del objeto de base de datos usado para abrir un conjunto de filas."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="Comando SQL para ejecutar."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">SELECT DISTINCT Productos.JerarquiaProducto, Productos.Aliado, Productos.Categoria, max(Productos.Linea) as Linea, Productos.Marca, Productos.Subcategoria, ' ' AS 'UndDef', ' ' AS 'UnAlt1', ' ' AS 'UnAlt2', ' ' AS 'UnAlt3', ' ' AS 'UnAlt4', 0 AS 'PesoDef', 1 AS 'Dessidad'
FROM lukerVen.SD.Productos Productos
where Productos.JerarquiaProducto not in (
	select JerarquiaProducto from  [SD].[Lineas]
)
group by Productos.JerarquiaProducto, Productos.Aliado, Productos.Categoria,  Productos.Marca, Productos.Subcategoria</property>
                <property
                  dataType="System.String"
                  description="Variable que contiene el comando SQL para ejecutar."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Especifica la página de códigos de columna para utilizar cuando la información de página de códigos no está disponible en el origen de datos."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Fuerza el uso del valor de la propiedad DefaultCodePage al describir datos de caracteres."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Especifica el modo utilizado para obtener acceso a la base de datos."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="Asignaciones entre los parámetros del comando SQL y las variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Lineas\Ven 01.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[lukerVen_23]"
                  connectionManagerRefId="Package.ConnectionManagers[lukerVen_23]"
                  description="La conexión de tiempo de ejecución OLE DB usada para obtener acceso a la base de datos."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Lineas\Ven 01.Outputs[Salida de origen de OLE DB]"
                  name="Salida de origen de OLE DB">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Lineas\Ven 01.Outputs[Salida de origen de OLE DB].Columns[JerarquiaProducto]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversión"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Lineas\Ven 01.Outputs[Salida de origen de OLE DB].ExternalColumns[JerarquiaProducto]"
                      length="18"
                      lineageId="Package\Lineas\Ven 01.Outputs[Salida de origen de OLE DB].Columns[JerarquiaProducto]"
                      name="JerarquiaProducto"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Lineas\Ven 01.Outputs[Salida de origen de OLE DB].Columns[Aliado]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversión"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Lineas\Ven 01.Outputs[Salida de origen de OLE DB].ExternalColumns[Aliado]"
                      length="40"
                      lineageId="Package\Lineas\Ven 01.Outputs[Salida de origen de OLE DB].Columns[Aliado]"
                      name="Aliado"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Lineas\Ven 01.Outputs[Salida de origen de OLE DB].Columns[Categoria]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversión"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Lineas\Ven 01.Outputs[Salida de origen de OLE DB].ExternalColumns[Categoria]"
                      length="40"
                      lineageId="Package\Lineas\Ven 01.Outputs[Salida de origen de OLE DB].Columns[Categoria]"
                      name="Categoria"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Lineas\Ven 01.Outputs[Salida de origen de OLE DB].Columns[Linea]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversión"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Lineas\Ven 01.Outputs[Salida de origen de OLE DB].ExternalColumns[Linea]"
                      length="40"
                      lineageId="Package\Lineas\Ven 01.Outputs[Salida de origen de OLE DB].Columns[Linea]"
                      name="Linea"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Lineas\Ven 01.Outputs[Salida de origen de OLE DB].Columns[Marca]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversión"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Lineas\Ven 01.Outputs[Salida de origen de OLE DB].ExternalColumns[Marca]"
                      length="40"
                      lineageId="Package\Lineas\Ven 01.Outputs[Salida de origen de OLE DB].Columns[Marca]"
                      name="Marca"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Lineas\Ven 01.Outputs[Salida de origen de OLE DB].Columns[Subcategoria]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversión"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Lineas\Ven 01.Outputs[Salida de origen de OLE DB].ExternalColumns[Subcategoria]"
                      length="40"
                      lineageId="Package\Lineas\Ven 01.Outputs[Salida de origen de OLE DB].Columns[Subcategoria]"
                      name="Subcategoria"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Lineas\Ven 01.Outputs[Salida de origen de OLE DB].Columns[UndDef]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversión"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Lineas\Ven 01.Outputs[Salida de origen de OLE DB].ExternalColumns[UndDef]"
                      length="1"
                      lineageId="Package\Lineas\Ven 01.Outputs[Salida de origen de OLE DB].Columns[UndDef]"
                      name="UndDef"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Lineas\Ven 01.Outputs[Salida de origen de OLE DB].Columns[UnAlt1]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversión"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Lineas\Ven 01.Outputs[Salida de origen de OLE DB].ExternalColumns[UnAlt1]"
                      length="1"
                      lineageId="Package\Lineas\Ven 01.Outputs[Salida de origen de OLE DB].Columns[UnAlt1]"
                      name="UnAlt1"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Lineas\Ven 01.Outputs[Salida de origen de OLE DB].Columns[UnAlt2]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversión"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Lineas\Ven 01.Outputs[Salida de origen de OLE DB].ExternalColumns[UnAlt2]"
                      length="1"
                      lineageId="Package\Lineas\Ven 01.Outputs[Salida de origen de OLE DB].Columns[UnAlt2]"
                      name="UnAlt2"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Lineas\Ven 01.Outputs[Salida de origen de OLE DB].Columns[UnAlt3]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversión"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Lineas\Ven 01.Outputs[Salida de origen de OLE DB].ExternalColumns[UnAlt3]"
                      length="1"
                      lineageId="Package\Lineas\Ven 01.Outputs[Salida de origen de OLE DB].Columns[UnAlt3]"
                      name="UnAlt3"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Lineas\Ven 01.Outputs[Salida de origen de OLE DB].Columns[UnAlt4]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversión"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Lineas\Ven 01.Outputs[Salida de origen de OLE DB].ExternalColumns[UnAlt4]"
                      length="1"
                      lineageId="Package\Lineas\Ven 01.Outputs[Salida de origen de OLE DB].Columns[UnAlt4]"
                      name="UnAlt4"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Lineas\Ven 01.Outputs[Salida de origen de OLE DB].Columns[PesoDef]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversión"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Lineas\Ven 01.Outputs[Salida de origen de OLE DB].ExternalColumns[PesoDef]"
                      lineageId="Package\Lineas\Ven 01.Outputs[Salida de origen de OLE DB].Columns[PesoDef]"
                      name="PesoDef"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Lineas\Ven 01.Outputs[Salida de origen de OLE DB].Columns[Dessidad]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversión"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Lineas\Ven 01.Outputs[Salida de origen de OLE DB].ExternalColumns[Dessidad]"
                      lineageId="Package\Lineas\Ven 01.Outputs[Salida de origen de OLE DB].Columns[Dessidad]"
                      name="Dessidad"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Lineas\Ven 01.Outputs[Salida de origen de OLE DB].ExternalColumns[JerarquiaProducto]"
                      codePage="1252"
                      dataType="str"
                      length="18"
                      name="JerarquiaProducto" />
                    <externalMetadataColumn
                      refId="Package\Lineas\Ven 01.Outputs[Salida de origen de OLE DB].ExternalColumns[Aliado]"
                      codePage="1252"
                      dataType="str"
                      length="40"
                      name="Aliado" />
                    <externalMetadataColumn
                      refId="Package\Lineas\Ven 01.Outputs[Salida de origen de OLE DB].ExternalColumns[Categoria]"
                      codePage="1252"
                      dataType="str"
                      length="40"
                      name="Categoria" />
                    <externalMetadataColumn
                      refId="Package\Lineas\Ven 01.Outputs[Salida de origen de OLE DB].ExternalColumns[Linea]"
                      codePage="1252"
                      dataType="str"
                      length="40"
                      name="Linea" />
                    <externalMetadataColumn
                      refId="Package\Lineas\Ven 01.Outputs[Salida de origen de OLE DB].ExternalColumns[Marca]"
                      codePage="1252"
                      dataType="str"
                      length="40"
                      name="Marca" />
                    <externalMetadataColumn
                      refId="Package\Lineas\Ven 01.Outputs[Salida de origen de OLE DB].ExternalColumns[Subcategoria]"
                      codePage="1252"
                      dataType="str"
                      length="40"
                      name="Subcategoria" />
                    <externalMetadataColumn
                      refId="Package\Lineas\Ven 01.Outputs[Salida de origen de OLE DB].ExternalColumns[UndDef]"
                      codePage="1252"
                      dataType="str"
                      length="1"
                      name="UndDef" />
                    <externalMetadataColumn
                      refId="Package\Lineas\Ven 01.Outputs[Salida de origen de OLE DB].ExternalColumns[UnAlt1]"
                      codePage="1252"
                      dataType="str"
                      length="1"
                      name="UnAlt1" />
                    <externalMetadataColumn
                      refId="Package\Lineas\Ven 01.Outputs[Salida de origen de OLE DB].ExternalColumns[UnAlt2]"
                      codePage="1252"
                      dataType="str"
                      length="1"
                      name="UnAlt2" />
                    <externalMetadataColumn
                      refId="Package\Lineas\Ven 01.Outputs[Salida de origen de OLE DB].ExternalColumns[UnAlt3]"
                      codePage="1252"
                      dataType="str"
                      length="1"
                      name="UnAlt3" />
                    <externalMetadataColumn
                      refId="Package\Lineas\Ven 01.Outputs[Salida de origen de OLE DB].ExternalColumns[UnAlt4]"
                      codePage="1252"
                      dataType="str"
                      length="1"
                      name="UnAlt4" />
                    <externalMetadataColumn
                      refId="Package\Lineas\Ven 01.Outputs[Salida de origen de OLE DB].ExternalColumns[PesoDef]"
                      dataType="i4"
                      name="PesoDef" />
                    <externalMetadataColumn
                      refId="Package\Lineas\Ven 01.Outputs[Salida de origen de OLE DB].ExternalColumns[Dessidad]"
                      dataType="i4"
                      name="Dessidad" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Lineas\Ven 01.Outputs[Salida de error de origen de OLE DB]"
                  isErrorOut="true"
                  name="Salida de error de origen de OLE DB">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Lineas\Ven 01.Outputs[Salida de error de origen de OLE DB].Columns[JerarquiaProducto]"
                      codePage="1252"
                      dataType="str"
                      length="18"
                      lineageId="Package\Lineas\Ven 01.Outputs[Salida de error de origen de OLE DB].Columns[JerarquiaProducto]"
                      name="JerarquiaProducto" />
                    <outputColumn
                      refId="Package\Lineas\Ven 01.Outputs[Salida de error de origen de OLE DB].Columns[Aliado]"
                      codePage="1252"
                      dataType="str"
                      length="40"
                      lineageId="Package\Lineas\Ven 01.Outputs[Salida de error de origen de OLE DB].Columns[Aliado]"
                      name="Aliado" />
                    <outputColumn
                      refId="Package\Lineas\Ven 01.Outputs[Salida de error de origen de OLE DB].Columns[Categoria]"
                      codePage="1252"
                      dataType="str"
                      length="40"
                      lineageId="Package\Lineas\Ven 01.Outputs[Salida de error de origen de OLE DB].Columns[Categoria]"
                      name="Categoria" />
                    <outputColumn
                      refId="Package\Lineas\Ven 01.Outputs[Salida de error de origen de OLE DB].Columns[Linea]"
                      codePage="1252"
                      dataType="str"
                      length="40"
                      lineageId="Package\Lineas\Ven 01.Outputs[Salida de error de origen de OLE DB].Columns[Linea]"
                      name="Linea" />
                    <outputColumn
                      refId="Package\Lineas\Ven 01.Outputs[Salida de error de origen de OLE DB].Columns[Marca]"
                      codePage="1252"
                      dataType="str"
                      length="40"
                      lineageId="Package\Lineas\Ven 01.Outputs[Salida de error de origen de OLE DB].Columns[Marca]"
                      name="Marca" />
                    <outputColumn
                      refId="Package\Lineas\Ven 01.Outputs[Salida de error de origen de OLE DB].Columns[Subcategoria]"
                      codePage="1252"
                      dataType="str"
                      length="40"
                      lineageId="Package\Lineas\Ven 01.Outputs[Salida de error de origen de OLE DB].Columns[Subcategoria]"
                      name="Subcategoria" />
                    <outputColumn
                      refId="Package\Lineas\Ven 01.Outputs[Salida de error de origen de OLE DB].Columns[UndDef]"
                      codePage="1252"
                      dataType="str"
                      length="1"
                      lineageId="Package\Lineas\Ven 01.Outputs[Salida de error de origen de OLE DB].Columns[UndDef]"
                      name="UndDef" />
                    <outputColumn
                      refId="Package\Lineas\Ven 01.Outputs[Salida de error de origen de OLE DB].Columns[UnAlt1]"
                      codePage="1252"
                      dataType="str"
                      length="1"
                      lineageId="Package\Lineas\Ven 01.Outputs[Salida de error de origen de OLE DB].Columns[UnAlt1]"
                      name="UnAlt1" />
                    <outputColumn
                      refId="Package\Lineas\Ven 01.Outputs[Salida de error de origen de OLE DB].Columns[UnAlt2]"
                      codePage="1252"
                      dataType="str"
                      length="1"
                      lineageId="Package\Lineas\Ven 01.Outputs[Salida de error de origen de OLE DB].Columns[UnAlt2]"
                      name="UnAlt2" />
                    <outputColumn
                      refId="Package\Lineas\Ven 01.Outputs[Salida de error de origen de OLE DB].Columns[UnAlt3]"
                      codePage="1252"
                      dataType="str"
                      length="1"
                      lineageId="Package\Lineas\Ven 01.Outputs[Salida de error de origen de OLE DB].Columns[UnAlt3]"
                      name="UnAlt3" />
                    <outputColumn
                      refId="Package\Lineas\Ven 01.Outputs[Salida de error de origen de OLE DB].Columns[UnAlt4]"
                      codePage="1252"
                      dataType="str"
                      length="1"
                      lineageId="Package\Lineas\Ven 01.Outputs[Salida de error de origen de OLE DB].Columns[UnAlt4]"
                      name="UnAlt4" />
                    <outputColumn
                      refId="Package\Lineas\Ven 01.Outputs[Salida de error de origen de OLE DB].Columns[PesoDef]"
                      dataType="i4"
                      lineageId="Package\Lineas\Ven 01.Outputs[Salida de error de origen de OLE DB].Columns[PesoDef]"
                      name="PesoDef" />
                    <outputColumn
                      refId="Package\Lineas\Ven 01.Outputs[Salida de error de origen de OLE DB].Columns[Dessidad]"
                      dataType="i4"
                      lineageId="Package\Lineas\Ven 01.Outputs[Salida de error de origen de OLE DB].Columns[Dessidad]"
                      name="Dessidad" />
                    <outputColumn
                      refId="Package\Lineas\Ven 01.Outputs[Salida de error de origen de OLE DB].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Lineas\Ven 01.Outputs[Salida de error de origen de OLE DB].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Lineas\Ven 01.Outputs[Salida de error de origen de OLE DB].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Lineas\Ven 01.Outputs[Salida de error de origen de OLE DB].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Lineas.Paths[Salida de origen de OLE DB]"
              endId="Package\Lineas\Destino de OLE DB.Inputs[Entrada de destino de OLE DB]"
              name="Salida de origen de OLE DB"
              startId="Package\Lineas\Ven 01.Outputs[Salida de origen de OLE DB]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Lista Precios"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Tarea Ejecutar SQL"
      DTS:DTSID="{C4D3DE7D-08B4-4637-AE56-8986A1E3F072}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Lista Precios"
      DTS:ThreadHint="2">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{2CB65742-8E44-4369-852E-A9D127478E71}"
          SQLTask:SqlStatementSource="--" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Pedidos"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{BB29252D-9CCA-472D-B442-82E6CACAC224}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Pedidos"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="1">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{2CB65742-8E44-4369-852E-A9D127478E71}"
          SQLTask:SqlStatementSource="declare @x_PeriodoVentas varchar(6)&#xA;&#xA;DECLARE ciclo_cursor CURSOR FOR &#xA;SELECT DISTINCT left(SalesDocumentDate,6)&#xA;FROM SAPBWUSER.zNqFacSalesDocument &#xA;ORDER BY left(SalesDocumentDate,6)&#xA;&#xA;OPEN ciclo_cursor&#xA;FETCH NEXT FROM ciclo_cursor &#xA;INTO @x_PeriodoVentas&#xA;&#xA;&#xA;WHILE @@FETCH_STATUS = 0&#xA;BEGIN &#xA;&#xA;&#x9;update ZPREALVENTAFI set&#xA;&#x9;ZPREALVENTAFI.periodo= (&#xA;               @x_PeriodoVentas&#xA;&#x9;) &#x9;FROM HBAVENNAL.SAPBWUSER.ZPREALVENTAFI ZPREALVENTAFI&#xA;&#xA;&#x9;Print(@x_PeriodoVentas) &#xA;&#x9;delete [lukerVen].SD.Pedidos&#xA;&#x9;WHERE left(SalesDocumentDate,6)=@x_PeriodoVentas &#xA;&#xA;&#xA;&#x9;INSERT INTO [lukerVen].SD.Pedidos&#xA;&#x9;select * from SAPBWUSER.zNqFacSalesDocument&#xA;&#x9;where SoldToParty in (&#xA;&#x9;  select Cod_Cliente from [lukerVen].[SD].[Clientes]&#xA;&#x9;) and left(SalesDocumentDate,6)=@x_PeriodoVentas &#xA;&#x9;&#xA;&#x9;&#xA;   &#xA;   FETCH NEXT FROM ciclo_cursor &#xA;   INTO @x_PeriodoVentas&#xA;END&#xA;CLOSE ciclo_cursor&#xA;DEALLOCATE ciclo_cursor&#xA;&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\PPTO MAE Innova rubros"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{448cc3a9-0bbb-4f74-8cfc-8727c03590d2}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="PPTO MAE Innova rubros"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{2CB65742-8E44-4369-852E-A9D127478E71}"
          SQLTask:SqlStatementSource="update Productos set&#xA;Productos.JerarquiaProducto= '001001001002003004'&#xA;, Productos.Linea= 'Chocolate Don Sabroso CYC'&#xA;FROM lukerVen.SD.Productos Productos&#xA;WHERE (Productos.Nombre_SKU Like '%don sab%clavo%canela%')&#xA;&#xA;update Productos set&#xA;  Productos.JerarquiaProducto=  '001001002002001003'&#xA;, Productos.Linea= 'Almendra Tropical Instantaneo'&#xA;, Productos.Subcategoria= 'Café Soluble'&#xA;FROM lukerVen.SD.Productos Productos&#xA;WHERE (Productos.Linea='Almendra Tropical') &#xA;AND (Productos.Nombre_SKU='CAFE ALMENDRA INSTANTANEO 1,5G B48')&#xA;&#xA;&#xA;update Productos set&#xA;Productos.JerarquiaProducto= '001001015001002002'&#xA;FROM lukerVen.SD.Productos Productos&#xA;WHERE (Productos.Linea Like 'AVENA%') &#xA;AND (Productos.Marca='Quesada') &#xA;AND (Productos.Nombre_SKU Like '%POLVO%')&#xA;&#xA;update Productos set&#xA;Productos.Linea= JerarquiaProducto.Linea&#xA;FROM lukerVen.SD.JerarquiaProducto JerarquiaProducto, lukerVen.SD.Productos Productos&#xA;WHERE JerarquiaProducto.JerarquiaProducto = Productos.JerarquiaProducto&#xA;AND ((Productos.Linea Like 'AVENA%') AND (Productos.Marca='Quesada') AND (Productos.Nombre_SKU Like '%POLVO%'))&#xA;&#xA;&#xA;insert into lukerVen.SD.JerarquiaProducto&#xA;SELECT JerarquiaProductoADD.JerarquiaProducto, JerarquiaProductoADD.Linea, JerarquiaProductoADD.Aliado, JerarquiaProductoADD.Portafolio, JerarquiaProductoADD.Categoria, JerarquiaProductoADD.Subcategoria, JerarquiaProductoADD.Marca&#xA;FROM lukerVen.SD.JerarquiaProductoADD JerarquiaProductoADD&#xA;WHERE (JerarquiaProductoADD.JerarquiaProducto&#xA; not in ( select JerarquiaProducto from lukerVen.SD.JerarquiaProducto)&#xA;)&#xA;&#xA;&#xA;insert into [lukerVen].[SD].[rubros_grp_nopat]&#xA;SELECT rubros_grp_nopat.idRubro, rubros_grp_nopat.estado, rubros_grp_nopat.nombreRubro, rubros_grp_nopat.Anexo01, rubros_grp_nopat.Anx01Rubro00, rubros_grp_nopat.Anx01SubRubro01, rubros_grp_nopat.Anx01SubRubro02, rubros_grp_nopat.Anx01SubRubro03&#xA;&#xA;, rubros_grp_nopat.Anx01SubRubro01&#xA;&#xA;FROM SVIDBLUKMZ03.lukerFin.dbo.rubros_grp_nopat rubros_grp_nopat&#xA;WHERE (rubros_grp_nopat.B_asico_D_uplicaanexo='B') AND (rubros_grp_nopat.estado='Nopat     ') &#xA;AND rubros_grp_nopat.idRubro in (&#xA;&#x9;SELECT condicionIdRubroL.idRubro FROM SVIDBLUKMZ03.HBAVENNAL.dbo.condicionIdRubroL condicionIdRubroL&#xA;) and idRubro not in (&#xA;&#x9;select idRubro from [lukerVen].[SD].[rubros_grp_nopat]&#xA;)&#xA;&#xA;update rubros_grp_nopat set&#xA; rubros_grp_nopat.nombreRubro&#x9;&#x9;&#x9;= rubros_grp_nopat_1.nombreRubro&#xA; , rubros_grp_nopat.Anexo01&#x9;&#x9;&#x9;&#x9;= rubros_grp_nopat_1.Anexo01&#xA; , rubros_grp_nopat.Anx01Rubro00&#x9;&#x9;= rubros_grp_nopat_1.Anx01Rubro00&#xA; , rubros_grp_nopat.Anx01SubRubro01&#x9;&#x9;= rubros_grp_nopat_1.Anx01SubRubro01&#xA; , rubros_grp_nopat.Anx01SubRubro02&#x9;&#x9;= rubros_grp_nopat_1.Anx01SubRubro02&#xA; , rubros_grp_nopat.Anx01SubRubro03&#x9;&#x9;= rubros_grp_nopat_1.Anx01SubRubro03&#xA;FROM lukerVen.SD.rubros_grp_nopat rubros_grp_nopat, SVIDBLUKMZ03.lukerFin.dbo.rubros_grp_nopat rubros_grp_nopat_1&#xA;WHERE rubros_grp_nopat.idRubro = rubros_grp_nopat_1.idRubro AND ((rubros_grp_nopat_1.B_asico_D_uplicaanexo='B'))&#xA;and (&#xA;   rubros_grp_nopat.nombreRubro&#x9;&#x9;&#x9;&#x9;&lt;&gt; rubros_grp_nopat_1.nombreRubro&#xA; or rubros_grp_nopat.Anexo01&#x9;&#x9;&#x9;&#x9;&lt;&gt; rubros_grp_nopat_1.Anexo01&#xA; or rubros_grp_nopat.Anx01Rubro00&#x9;&#x9;&#x9;&lt;&gt; rubros_grp_nopat_1.Anx01Rubro00&#xA; or rubros_grp_nopat.Anx01SubRubro01&#x9;&#x9;&lt;&gt; rubros_grp_nopat_1.Anx01SubRubro01&#xA; or rubros_grp_nopat.Anx01SubRubro02&#x9;&#x9;&lt;&gt; rubros_grp_nopat_1.Anx01SubRubro02&#xA; or rubros_grp_nopat.Anx01SubRubro03&#x9;&#x9;&lt;&gt; rubros_grp_nopat_1.Anx01SubRubro03&#xA;&#xA;)&#xA;&#xA;insert into  [lukerVen].[SD].[JerarquiaProducto]&#xA;SELECT TOP (1000) [JerarquiaProducto]&#xA;      ,[Linea]&#xA;      ,[Aliado]&#xA;      ,[Portafolio]&#xA;      ,[Categoria]&#xA;      ,[Subcategoria]&#xA;      ,[Marca]&#xA;  FROM [lukerVen].[SD].[JerarquiaProductoADD]&#xA;  where [JerarquiaProducto] not in (&#xA; select  [JerarquiaProducto] from [lukerVen].[SD].[JerarquiaProducto]&#xA;  )" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Presentacion Individual"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{9D52DC8C-3F4E-4F70-BDDE-3DA68675CCA4}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Presentacion Individual"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{2CB65742-8E44-4369-852E-A9D127478E71}"
          SQLTask:SqlStatementSource="INSERT INTO [SD].[Productos]&#xA;           ([Cod_SKU]&#xA;           ,[Nombre_SKU]&#xA;           ,[JerarquiaProducto]&#xA;           ,[Aliado]&#xA;           ,[Categoria]&#xA;           ,[Marca]&#xA;           ,[Portafolio]&#xA;           ,[Linea]&#xA;           ,[Unidad_Base_SKU]&#xA;           ,[Peso_Neto_SKU]&#xA;           ,[Unidad_Peso_Neto_SKU]&#xA;           ,[Peso_Bruto_SKU]&#xA;           ,[Volumen]&#xA;           ,[Unidad_Volumen]&#xA;           ,[EAN13]&#xA;           ,[Subcategoria]&#xA;           ,[PresentaIndvidual])&#xA;&#xA;SELECT zDmPrd.Cod_SKU, zDmPrd.Nombre_SKU, zDmPrd.JerarquiaProducto, zDmPrd.Aliado, zDmPrd.Categoria, zDmPrd.Marca, zDmPrd.Portafolio, zDmPrd.Linea, zDmPrd.Unidad_Base_SKU, zDmPrd.Peso_Neto_SKU, zDmPrd.Unidad_Peso_Neto_SKU, zDmPrd.Peso_Bruto_SKU, zDmPrd.Volumen, zDmPrd.Unidad_Volumen, zDmPrd.EAN13, zDmPrd.Subcategoria,''&#xA;FROM HBAVENNAL.STGN.zDmPrd zDmPrd where Cod_SKU not in (&#xA;&#x9;select Cod_SKU from  [lukerVen].SD.Productos&#xA;) and zDmPrd.Nombre_SKU is not null&#xA;&#xA;update Productos set  Productos.PresentaIndvidual= '     combo'&#xA;FROM lukerVen.SD.Productos Productos&#xA;WHERE (Productos.Cod_SKU Like '000000000007%') AND (Productos.PresentaIndvidual='')&#xA;&#xA;&#xA;update Productos set Productos.PresentaIndvidual= right('          '+ltrim(rtrim(ProductosPresentacionIndividualSP.PresInd)),10)&#xA;FROM lukerVen.SD.Productos Productos, lukerVen.tmp.ProductosPresentacionIndividual ProductosPresentacionIndividualSP&#xA;WHERE ProductosPresentacionIndividualSP.Cod_SKU = Productos.Cod_SKU AND ((Productos.PresentaIndvidual=''))&#xA;GO&#xA;update Productos set Productos.PresentaIndvidual= right('          '+ltrim(rtrim(ProductosPresentacionIndividualSP.PresInd)),10)&#xA;FROM lukerVen.SD.Productos Productos, lukerVen.tmp.ProductosPresentacionIndividualSP ProductosPresentacionIndividualSP&#xA;WHERE ProductosPresentacionIndividualSP.Cod_SKU = Productos.Cod_SKU AND ((Productos.PresentaIndvidual=''))&#xA;go&#xA;update Productos set Productos.PresentaIndvidual= right('          '+ltrim(rtrim(ProductosPresentacionIndividualSP.PresInd)),10)&#xA;FROM lukerVen.SD.Productos Productos, lukerVen.tmp.ProductosPresentacionIndividualL ProductosPresentacionIndividualSP&#xA;WHERE ProductosPresentacionIndividualSP.Cod_SKU = Productos.Cod_SKU AND ((Productos.PresentaIndvidual=''))&#xA;GO&#xA;update Productos set Productos.PresentaIndvidual= right('          '+ltrim(rtrim(ProductosPresentacionIndividualSP.PresInd)),10)&#xA;FROM lukerVen.SD.Productos Productos, lukerVen.tmp.ProductosPresentacionIndividualLSP ProductosPresentacionIndividualSP&#xA;WHERE ProductosPresentacionIndividualSP.Cod_SKU = Productos.Cod_SKU AND ((Productos.PresentaIndvidual=''))&#xA;GO&#xA;&#xA;insert into [SD].[MarcaUnidad]&#xA;SELECT distinct Productos.Marca, Productos.Marca,''&#xA;FROM lukerVen.SD.Productos Productos&#xA;where Marca not in (&#xA;   select Marca from [SD].[MarcaUnidad]&#xA;)" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Prod 23"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{7FC6602C-D461-4F73-AD3B-0160B75B1E16}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Prod 23"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{2CB65742-8E44-4369-852E-A9D127478E71}"
          SQLTask:SqlStatementSource="&#xA;insert into [lukerVen].SD.Productos&#xA;select         [Cod_SKU]&#xA;           ,[Nombre_SKU]&#xA;           ,[JerarquiaProducto]&#xA;           ,[Aliado]&#xA;           ,[Categoria]&#xA;           ,[Marca]&#xA;           ,[Portafolio]&#xA;           ,[Linea]&#xA;           ,[Unidad_Base_SKU]&#xA;           ,[Peso_Neto_SKU]&#xA;           ,[Unidad_Peso_Neto_SKU]&#xA;           ,[Peso_Bruto_SKU]&#xA;           ,[Volumen]&#xA;           ,[Unidad_Volumen]&#xA;           ,[EAN13]&#xA;           ,[Subcategoria]&#xA;           ,'' from HBAVENNAL.[STGN].[zDmPrd] &#xA;where Cod_SKU not in (&#xA; select Cod_SKU from  [lukerVen].SD.Productos&#xA;) and  Nombre_SKU is not null&#xA;&#xA;&#xA;update Productos set&#xA; Productos.EAN13= tmpProductos.EAN13&#xA;FROM lukerVen.SD.Productos Productos, HBAVENNAL.[STGN].[zDmPrd] tmpProductos&#xA;WHERE tmpProductos.Cod_SKU = Productos.Cod_SKU AND ((Productos.EAN13 Is Null) AND (tmpProductos.EAN13 Is Not Null))&#xA;&#xA;update Productos set&#xA;   Productos.Nombre_SKU    = tmpProductos.Nombre_SKU&#xA; , Productos.JerarquiaProducto  = tmpProductos.JerarquiaProducto&#xA; , Productos.Aliado     = tmpProductos.Aliado&#xA; , Productos.Categoria    = tmpProductos.Categoria&#xA; , Productos.Marca     = tmpProductos.Marca&#xA; , Productos.Portafolio    = tmpProductos.Portafolio&#xA; , Productos.Linea     = tmpProductos.Linea&#xA; , Productos.Unidad_Base_SKU  = tmpProductos.Unidad_Base_SKU&#xA; , Productos.Peso_Neto_SKU   = tmpProductos.Peso_Neto_SKU&#xA; , Productos.Unidad_Peso_Neto_SKU = tmpProductos.Unidad_Peso_Neto_SKU&#xA; , Productos.Peso_Bruto_SKU   = tmpProductos.Peso_Bruto_SKU&#xA; , Productos.Volumen    = tmpProductos.Volumen&#xA; , Productos.Unidad_Volumen   = tmpProductos.Unidad_Volumen&#xA; , Productos.Subcategoria   = tmpProductos.Subcategoria&#xA;FROM lukerVen.SD.Productos Productos&#xA;inner join HBAVENNAL.[STGN].[zDmPrd] tmpProductos&#xA;on tmpProductos.Cod_SKU = Productos.Cod_SKU&#xA;WHERE&#xA;   Productos.Nombre_SKU    &lt;&gt; tmpProductos.Nombre_SKU&#xA; or Productos.JerarquiaProducto  &lt;&gt; tmpProductos.JerarquiaProducto&#xA; or Productos.Aliado    &lt;&gt; tmpProductos.Aliado&#xA; or Productos.Categoria    &lt;&gt; tmpProductos.Categoria&#xA; or Productos.Marca     &lt;&gt; tmpProductos.Marca&#xA; or Productos.Portafolio   &lt;&gt; tmpProductos.Portafolio&#xA; or Productos.Linea     &lt;&gt; tmpProductos.Linea&#xA; or Productos.Unidad_Base_SKU  &lt;&gt; tmpProductos.Unidad_Base_SKU&#xA; or Productos.Peso_Neto_SKU   &lt;&gt; tmpProductos.Peso_Neto_SKU&#xA; or Productos.Unidad_Peso_Neto_SKU &lt;&gt; tmpProductos.Unidad_Peso_Neto_SKU&#xA; or Productos.Peso_Bruto_SKU  &lt;&gt; tmpProductos.Peso_Bruto_SKU&#xA; or Productos.Volumen    &lt;&gt; tmpProductos.Volumen&#xA; or Productos.Unidad_Volumen  &lt;&gt; tmpProductos.Unidad_Volumen&#xA; or Productos.Subcategoria   &lt;&gt; tmpProductos.Subcategoria&#xA;&#xA;insert into lukerVen.SD.CategoriaMarca&#xA;SELECT DISTINCT Productos.Aliado, Productos.Categoria, Productos.Marca, 'B2C'&#xA;FROM  lukerVen.SD.Productos Productos left outer join lukerVen.SD.CategoriaMarca CategoriaMarca&#xA;on CategoriaMarca.Aliado = Productos.Aliado &#xA;AND CategoriaMarca.Categoria = Productos.Categoria &#xA;AND CategoriaMarca.Marca = Productos.Marca &#xA;where CategoriaMarca.Marca is null&#xA;&#xA;&#xA;declare @xwhere varchar(4)&#xA;&#xA;&#xA;DECLARE ciclo_cursor CURSOR FOR &#xA;SELECT DISTINCT MaterialBOM.Planta&#xA;FROM lukerVen.STGN.MaterialBOM MaterialBOM where MaterialBOM.Planta&lt;&gt;'CD01'&#xA;ORDER BY MaterialBOM.Planta&#xA;&#xA;OPEN ciclo_cursor&#xA;FETCH NEXT FROM ciclo_cursor &#xA;INTO @xwhere&#xA;&#xA;WHILE @@FETCH_STATUS = 0&#xA;BEGIN  &#xA;&#xA;insert into [lukerVen].[STGN].[MaterialBOM]&#xA;SELECT MaterialBOM.Cod_SKU, MaterialBOM.Con_SKUR, 'cd01', MaterialBOM.STLKN, MaterialBOM.Unidad, MaterialBOM.Unidades, MaterialBOM.SORTF, MaterialBOM.MaterialNetWeight, MaterialBOM.MaterialWeightUnit, MaterialBOM.Z_UnidadesRegalo&#xA;FROM lukerVen.STGN.MaterialBOM MaterialBOM&#xA;WHERE (MaterialBOM.Planta=@xwhere)&#xA;and MaterialBOM.Cod_SKU not in (&#xA;&#x9;select MaterialBOM.Cod_SKU FROM lukerVen.STGN.MaterialBOM MaterialBOM&#xA;WHERE (MaterialBOM.Planta='CD01')&#xA;)&#xA;&#xA;   FETCH NEXT FROM ciclo_cursor &#xA;   INTO @xwhere &#xA;&#xA;END&#xA;CLOSE ciclo_cursor&#xA;DEALLOCATE ciclo_cursor&#xA;&#xA;--- Marca T1&#xA;&#xA;update ComboHD set&#xA;  ComboHD.Tipo= 'T1'&#xA;, ComboHD.NumSKUs= MaterialBOM_T1.NumSKUs&#xA;FROM lukerVen.SD.ComboHD ComboHD, lukerVen.STGN.MaterialBOM_T1 MaterialBOM_T1&#xA;WHERE MaterialBOM_T1.Cod_SKU = ComboHD.Cod_SKU&#xA;&#xA;update ComboHD set&#xA;  ComboHD.Tipo= 'T2+Z'&#xA;, ComboHD.NumSKUs= MaterialBOM_T2_PlusZreg.NumSKUs&#xA;FROM lukerVen.SD.ComboHD ComboHD, lukerVen.STGN.MaterialBOM_T2_PlusZreg MaterialBOM_T2_PlusZreg&#xA;WHERE MaterialBOM_T2_PlusZreg.Cod_SKU = ComboHD.Cod_SKU&#xA;&#xA;&#xA;update ComboHD set&#xA;  ComboHD.Tipo= 'T2'&#xA;, ComboHD.NumSKUs= MaterialBOM_T2.NumSKUs&#xA;FROM lukerVen.SD.ComboHD ComboHD&#xA;  , lukerVen.STGN.MaterialBOM_T2 MaterialBOM_T2&#xA;WHERE MaterialBOM_T2.Cod_SKU = ComboHD.Cod_SKU&#xA;&#xA;update ComboHD set&#xA;  ComboHD.Tipo= 'T4'&#xA;, ComboHD.NumSKUs= MaterialBOM_T2.NumSKUs&#xA;FROM lukerVen.SD.ComboHD ComboHD&#xA;  , lukerVen.STGN.MaterialBOM_T4 MaterialBOM_T2&#xA;WHERE MaterialBOM_T2.Cod_SKU = ComboHD.Cod_SKU&#xA;&#xA;update ComboHD set&#xA;  ComboHD.Tipo= 'T3'&#xA;FROM lukerVen.SD.ComboHD ComboHD, lukerVen.SD.Productos Productos&#xA;WHERE Productos.Cod_SKU = ComboHD.Cod_SKU AND ((ComboHD.Tipo='') &#xA;AND ( (Productos.Nombre_SKU Like '%desc%') &#xA;&#x9;OR (ComboHD.Tipo='') AND (Productos.Nombre_SKU Like '%DTO%') &#xA;&#x9;OR (ComboHD.Tipo='') AND (Productos.Nombre_SKU Like '%DCTO%') &#xA;&#x9;OR (ComboHD.Tipo='') AND (Productos.Nombre_SKU Like '%ahorr%')&#xA;&#x9;OR (ComboHD.Tipo='') AND (Productos.Nombre_SKU Like '% PG % LL%')&#xA;&#x9;OR (ComboHD.Tipo='') AND (Productos.Nombre_SKU Like '% PAG% LLev%')&#xA;&#x9;OR (ComboHD.Tipo='') AND (Productos.Nombre_SKU Like '%PG%LL%')&#xA;&#x9;OR (ComboHD.Tipo='') AND (Productos.Nombre_SKU  Like '%[%]%')&#xA;&#x9;OR (ComboHD.Tipo='') AND (Productos.Nombre_SKU  Like '% LL %')&#xA;&#x9;OR (ComboHD.Tipo='') AND (Productos.Nombre_SKU  Like '% LLEV %')&#xA;&#x9;OR (ComboHD.Tipo='') AND (Productos.Nombre_SKU  Like '% LL%')&#xA;&#x9;OR (ComboHD.Tipo='') AND (Productos.Nombre_SKU  Like 'CO $%')&#xA;&#x9;OR (ComboHD.Tipo='') AND (Productos.Nombre_SKU  Like '% precio %')&#xA;) or ComboHD.Cod_SKU in (&#xA; &#xA;&#x9; '000000000007100761'&#x9;&#x9;-- COMBO PROD. NUEVOS 2&#xA;&#x9;,'000000000007101052'&#x9;&#x9;-- CO 4 GFAMILIA 1000CC GTS OLIOSOYA500CC&#xA;&#x9;,'000000000007101187'&#x9;&#x9;-- CO LUKI MORADO + 2 OFERTAS SHARPIE LUKI&#xA;&#x9;,'000000000007101243'&#x9;&#x9;-- CO CUBIERTA,COB BLANCA1KG Y CREMA POLV&#xA;&#x9;,'000000000007101245'&#x9;&#x9;-- CO CUBIERTA, COB NEGRA 1KG Y CREM POLV&#xA;&#x9;,'000000000007101268'&#x9;&#x9;-- CO2LUKERD32 500G BONORECOMPRAX 5000&#xA;&#x9;,'000000000007101507'&#x9;&#x9;-- CO  COMBO 5 LIBRAS LUKAFE CLASICO&#xA;&#x9;,'000000000007102098'&#x9;&#x9;-- CO 10 CAJASQUESURTIDO 500 P20&#xA;&#x9;,'000000000007102099'&#x9;&#x9;-- CO 10 CAJAS QUESURTIDO 500 P16&#xA;))&#xA;&#xA;update ComboHD set&#xA; ComboHD.NumSKUs= MaterialBOM_NumSKUs.NumSKUs&#xA;FROM lukerVen.SD.ComboHD ComboHD, lukerVen.STGN.MaterialBOM_NumSKUs MaterialBOM_NumSKUs&#xA;WHERE MaterialBOM_NumSKUs.Cod_SKU = ComboHD.Cod_SKU AND ((ComboHD.NumSKUs&lt;&gt;MaterialBOM_NumSKUs.NumSKUs))&#xA;and ComboHD.NumSKUs=0&#xA;&#xA;&#xA;insert into [SD].[ComboBOM]&#xA;SELECT MaterialBOM.Cod_SKU&#xA;, MaterialBOM.Con_SKUR&#xA;, MaterialBOM.STLKN&#xA;, MaterialBOM.SORTF&#xA;, MaterialBOM.Unidades&#xA;, MaterialBOM.Unidad&#xA;, 0, 0, 0,0&#xA;, MaterialBOM.Z_UnidadesRegalo,0,0&#xA;FROM lukerVen.SD.ComboHD ComboHD, lukerVen.STGN.MaterialBOM MaterialBOM&#xA;WHERE ComboHD.Cod_SKU = MaterialBOM.Cod_SKU AND ((MaterialBOM.Planta='cd01'))&#xA;and  MaterialBOM.Cod_SKU not in (&#xA;select Cod_SKU from [SD].[ComboBOM]&#xA;)&#xA;&#xA;update ComboBOM set&#xA;ComboBOM.PrecioLista= ListaPreciosGnni.precioUb&#xA;FROM lukerVen.SD.ComboBOM ComboBOM&#xA;, lukerVen.PVOF.ListaPreciosGnni ListaPreciosGnni&#xA;WHERE ListaPreciosGnni.Cod_SKU = ComboBOM.Cod_SKU AND ((ComboBOM.PrecioLista=0) AND (ComboBOM.TipoPos&lt;&gt;'REGALO') &#xA;aND (ListaPreciosGnni.mes=month(getdate())) AND (ListaPreciosGnni.ano=year(getdate())))&#xA;&#xA;update ComboBOM set&#xA;ComboBOM.PrecioLista= xppt_listadeprecios.PrecioNeto&#xA;FROM lukerVen.SD.ComboBOM ComboBOM, lukerVen.tmp.xppt_listadeprecios xppt_listadeprecios&#xA;WHERE xppt_listadeprecios.Cod_SKU = ComboBOM.Cod_SKU &#xA;AND ((ComboBOM.PrecioLista=0.0) AND (ComboBOM.TipoPos&lt;&gt;'REGALO'))&#xA;&#xA;--- Descuentos Marcados erronesmente en Z&#xA;update ComboBOM set&#xA; ComboBOM.UnidadesZ= 0&#xA;FROM lukerVen.SD.ComboBOM ComboBOM, lukerVen.SD.ComboHD ComboHD, lukerVen.SD.Productos Productos, lukerVen.SD.Productos Productos_1&#xA;WHERE ComboHD.Cod_SKU = ComboBOM.Cod_SKU &#xA;AND Productos.Cod_SKU = ComboBOM.Cod_SKU &#xA;AND ComboBOM.Con_SKUR = Productos_1.Cod_SKU &#xA;AND ((ComboBOM.TipoPos&lt;&gt;'REGALO') &#xA;AND (ComboHD.NumSKUs&gt;1) &#xA;AND (ComboBOM.UnidadesZ&lt;&gt;0.0) &#xA;AND (Productos.Nombre_SKU Like '%Pague%'))&#xA;AND (ComboHD.Tipo='T2+Z')&#xA;&#xA;update ComboHD set&#xA;   ComboHD.NumSKUs= 0&#xA; , ComboHD.Tipo= 'T3-Z'&#xA;FROM lukerVen.SD.ComboBOM ComboBOM&#xA;, lukerVen.SD.ComboHD ComboHD&#xA;, lukerVen.SD.Productos Productos&#xA;, lukerVen.SD.Productos Productos_1&#xA;WHERE ComboHD.Cod_SKU = ComboBOM.Cod_SKU &#xA;AND Productos.Cod_SKU = ComboBOM.Cod_SKU &#xA;AND ComboBOM.Con_SKUR = Productos_1.Cod_SKU &#xA;AND ((ComboBOM.TipoPos&lt;&gt;'REGALO') &#xA;AND (ComboHD.NumSKUs&gt;1) &#xA;AND (Productos.Nombre_SKU Like '%Pague%') &#xA;AND (ComboHD.Tipo='T2+Z'))&#xA;&#xA;&#xA;update ComboHD set&#xA;   ComboHD.Tipo= 'T4_8'&#xA;FROM lukerVen.SD.ComboBOM ComboBOM&#xA;, lukerVen.SD.ComboHD ComboHD&#xA;, lukerVen.SD.Productos Productos&#xA;, HBAVENNAL.dbo.zMATERIALES zMATERIALES&#xA;WHERE ComboHD.Cod_SKU = ComboBOM.Cod_SKU &#xA;AND Productos.Cod_SKU = ComboBOM.Cod_SKU &#xA;AND ComboBOM.Con_SKUR = zMATERIALES.Material &#xA;AND ((ComboHD.NumSKUs=2) AND (ComboBOM.TipoPos='REGALO') &#xA;AND (ComboBOM.Con_SKUR Like '000000000008%'))&#xA;&#xA;/**&#xA;insert into [SRVDBLUKBO01\B2C].lukerVen.SD.MotivosNoVenta&#xA;SELECT &quot;ABRVW&quot;, &quot;BEZEI&quot;,'N'&#xA;FROM &quot;CWP&quot;..&quot;SLTSCHEMAPRD&quot;.&quot;TVLVT&quot; &#xA;where &quot;ABRVW&quot; not in (&#xA;SELECT MotivosNoVenta.Cod_Motivo&#xA;FROM [SRVDBLUKBO01\B2C].lukerVen.SD.MotivosNoVenta MotivosNoVenta&#xA;) and SPRAS='S'&#xA;**/" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Profit C"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{259ed6b9-d293-47c7-b5d2-807f4d291f19}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Profit C"
      DTS:ThreadHint="2">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{2CB65742-8E44-4369-852E-A9D127478E71}"
          SQLTask:SqlStatementSource="&#xA;SELECT DISTINCT Facturas.ProfitCenter, isnull(centroPais.nombreCentro,ProfitCenter) as nombreCentro into #prfcntr&#xA;FROM lukerVen.SD.Facturas Facturas&#xA;left outer join lukerFin.dbo.centroPais centroPais&#xA;on Facturas.ProfitCenter = centroPais.idCentro &#xA;WHERE ((centroPais.idPais='co'))&#xA;&#xA;insert into [lukerVen].[SD].[ProfitCenter]&#xA;select * from #prfcntr where ProfitCenter not in (&#xA;&#x9;select ProfitCenter from [lukerVen].[SD].[ProfitCenter]&#xA;)&#xA;&#xA;drop table #prfcntr" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\rubros"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{C265397C-3879-4B11-9739-69437AC40BA3}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="rubros"
      DTS:ThreadHint="2">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{2CB65742-8E44-4369-852E-A9D127478E71}"
          SQLTask:SqlStatementSource="/**&#xA;&#xA;delete [lukerFin].[dbo].[codificacionRubrosEstadosFinancieros]&#xA;insert into [lukerFin].[dbo].[codificacionRubrosEstadosFinancieros]&#xA;select * from [SVIDBLUKMZ03].[lukerFin].[dbo].[codificacionRubrosEstadosFinancieros]&#xA;&#xA;&#xA;&#xA;delete [lukerFin].[dbo].[rubros_grp_nopat]&#xA;insert into  [lukerFin].[dbo].[rubros_grp_nopat]&#xA;select * from [SVIDBLUKMZ03].[lukerFin].[dbo].[rubros_grp_nopat]&#xA;&#xA;&#xA;delete  [lukerFin].[dbo].[pucPais]&#xA;insert into [lukerFin].[dbo].[pucPais]&#xA;select * from [SVIDBLUKMZ03].[lukerFin].[dbo].[pucPais]&#xA;&#xA;&#xA;delete  [lukerFin].[dbo].centroPais&#xA;insert into [lukerFin].[dbo].centroPais&#xA;select [idPais]&#xA;           ,[idCentro]&#xA;           ,[nombreCentro]&#xA;           ,[idAreaSap]&#xA;           ,[idSociedad]&#xA;           ,[idDivision]&#xA;           ,[idMoneda]&#xA;           ,[idGerencia]&#xA;           ,[idContabilidad]&#xA;           ,[idCategoria]&#xA;           ,[idSubcategoria]&#xA;           ,[idAgencia]&#xA;           ,[idCanal]&#xA;           ,[idCadena]&#xA;           ,[idLinea]&#xA;           ,[clase]&#xA;           ,[idFabrica]&#xA;           ,[grpo_adc111]&#xA;           ,[nptNegocio]&#xA;           ,[esActivo]&#xA;           ,[distriChannel]&#xA;           ,[idGrupoVentas]&#xA;           ,[grpo_adc112]&#xA;           ,[Aliado]&#xA;           ,[idCustomerGroup]&#xA;           ,[addCustomerGroup2]&#xA;           ,[M_marcas_MC_marcanal] from [SVIDBLUKMZ03].[lukerFin].[dbo].centroPais&#xA;**/" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Sync Cliente CT Dim Ojo el 1o"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{5CE51236-C392-4B08-BDFE-D055464CA796}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Sync Cliente CT Dim Ojo el 1o"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{2CB65742-8E44-4369-852E-A9D127478E71}"
          SQLTask:SqlStatementSource="USE [lukerVen]&#xA;GO&#xA;&#xA;--- Foto Clientes&#xA;if ( DAY(GETDATE()+1) = 1  )&#xA;begin&#xA;&#x9;&#xA;delete from lukerVen.[SD].[ClientesDimCT]&#xA;&#x9;&#xA;insert into [lukerVen].[SD].[ClientesDimCT]&#xA;           ([Cod_Cliente]&#xA;           ,[Nombre_Cliente]&#xA;           ,[Cod_Canal]&#xA;           ,[Nombre_Canal]&#xA;           ,[Cod_Pais]&#xA;           ,[Cod_GCliente]&#xA;           ,[Nombre_GCliente]&#xA;           ,[Cod_Oficina_Ventas]&#xA;           ,[Nombre_Oficina_Ventas]&#xA;           ,[Cod_Zona_Ventas]&#xA;           ,[Cod_Vendedor]&#xA;           ,[Nombre_Vendedor]&#xA;           ,[Cod_Region]&#xA;           ,[Nombre_Ciudad]&#xA;           ,[Cod_Central]&#xA;           ,[Cod_GCliente_AD1]&#xA;           ,[Nombre_GCliente_AD1]&#xA;           ,[Cod_GCliente_AD2]&#xA;           ,[Nombre_GCliente_AD2]&#xA;           ,[Cod_Pagador]&#xA;           ,[Telebox]&#xA;           ,[Gerente_Comercial]&#xA;           ,[Director_Canal]&#xA;           ,[Lider_Regional]&#xA;           ,[Jefe_Ventas]&#xA;           ,[Fecha_Creacion_Cliente]&#xA;           ,[Estatus]&#xA;           ,[Cod_Ruta]&#xA;           ,[CoordenadasX]&#xA;           ,[CoordenadasY])&#xA;&#xA;select       [Cod_Cliente]&#xA;           ,[Nombre_Cliente]&#xA;           ,[Cod_Canal]&#xA;           ,[Nombre_Canal]&#xA;           ,[Cod_Pais]&#xA;           ,[Cod_GCliente]&#xA;           ,[Nombre_GCliente]&#xA;           ,[Cod_Oficina_Ventas]&#xA;           ,[Nombre_Oficina_Ventas]&#xA;           ,[Cod_Zona_Ventas]&#xA;           ,[Cod_Vendedor]&#xA;           ,[Nombre_Vendedor]&#xA;           ,[Cod_Region]&#xA;           ,[Nombre_Ciudad]&#xA;           ,[Cod_Central]&#xA;           ,[Cod_GCliente_AD1]&#xA;           ,[Nombre_GCliente_AD1]&#xA;           ,[Cod_GCliente_AD2]&#xA;           ,[Nombre_GCliente_AD2]&#xA;           ,[Cod_Pagador]&#xA;           ,[Telebox]&#xA;           ,[Gerente_Comercial]&#xA;           ,[Director_Canal]&#xA;           ,[Lider_Regional]&#xA;           ,[Jefe_Ventas]&#xA;           ,[Fecha_Creacion_Cliente]&#xA;           ,[Estatus]&#xA;           ,[Cod_Ruta]&#xA;           ,[CoordenadasX]&#xA;           ,[CoordenadasY]&#xA; from [lukerVen].[SD].[Clientes]&#xA;where [Cod_Cliente] not in (&#xA;  select [Cod_Cliente] from [lukerVen].[SD].[ClientesDimCT]&#xA;)&#xA;&#xA;&#xA;end&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Sync Costo 2020"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{9CA79620-8A0E-46CD-AA32-12D93BD86E3B}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Sync Costo 2020"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{2CB65742-8E44-4369-852E-A9D127478E71}"
          SQLTask:SqlStatementSource="&#xA;insert into [SRVDBLUKBO01\B2C].lukerVen.dbo.aplicacionCostoVenta            ([HKONT]&#xA;           ,[VORGN]&#xA;           ,[Determ])&#xA;select * from lukerVen.dbo.aplicacionCostoVenta&#xA;where aplicacionCostoVenta.HKONT+ aplicacionCostoVenta.VORGN not in (&#xA;&#x9;SELECT aplicacionCostoVenta.HKONT+ aplicacionCostoVenta.VORGN&#xA;&#x9;FROM [SRVDBLUKBO01\B2C].lukerVen.dbo.aplicacionCostoVenta aplicacionCostoVenta&#xA;&#xA;)&#xA;&#xA;delete [lukerVen].[dbo].[RMM1]&#xA;INSERT INTO [lukerVen].[dbo].[RMM1]&#xA;SELECT FI61.Contabilidad, FI61.PeriodoContab, FI61.VORGN, FI61.BUKRS, FI61.PRCTR, FI61.HKONT, FI61.WERKS, FI61.MATNR, Sum(FI61.VALOR_COP) AS 'VALOR_COP', 0&#xA;FROM lukerVen.dbo.aplicacionCostoVenta aplicacionCostoVenta&#xA;, lukerVen.dbo.FI61 FI61&#xA;WHERE aplicacionCostoVenta.HKONT = FI61.HKONT AND aplicacionCostoVenta.VORGN = FI61.VORGN&#xA;GROUP BY FI61.Contabilidad, FI61.PeriodoContab, FI61.VORGN&#xA;, FI61.BUKRS, FI61.PRCTR, FI61.HKONT, FI61.WERKS, FI61.MATNR, aplicacionCostoVenta.Determ&#xA;HAVING (aplicacionCostoVenta.Determ='Revalor')&#xA;&#xA;delete [lukerVen].[dbo].[RMWL]&#xA;insert into  [lukerVen].[dbo].[RMWL]&#xA;SELECT FI61.Contabilidad,FI61.PeriodoContab, FI61.BUKRS, FI61.WERKS, FI61.MATNR, Sum(FI61.Unidades) AS 'Unidades'&#xA;FROM lukerVen.dbo.aplicacionCostoVenta aplicacionCostoVenta&#xA;, lukerVen.dbo.FI61 FI61&#xA;WHERE aplicacionCostoVenta.HKONT = FI61.HKONT &#xA;AND aplicacionCostoVenta.VORGN = FI61.VORGN &#xA;AND ((aplicacionCostoVenta.Determ='Factura'))&#xA;and (FI61.MANDT&lt;&gt;'-X')&#xA;GROUP BY FI61.PeriodoContab, FI61.BUKRS, FI61.WERKS, FI61.MATNR,FI61.Contabilidad&#xA;&#xA;update RMM1 set&#xA;RMM1.OHP= 1&#xA;FROM lukerVen.dbo.RMM1 RMM1, lukerVen.dbo.RMWL RMWL&#xA;WHERE RMWL.BUKRS = RMM1.BUKRS AND RMWL.MATNR = RMM1.MATNR &#xA;AND RMWL.PeriodoContab = RMM1.PeriodoContab &#xA;AND RMWL.WERKS = RMM1.WERKS&#xA;AND RMWL.Contabilidad = RMM1.Contabilidad&#xA;&#xA;USE [lukerVen]&#xA;GO&#xA;&#xA;declare @Periodo as varchar(6)&#xA;select @Periodo=ltrim(str(year(getdate()-20))) + right('00'+ltrim(str(month(getdate()-20))),2)&#xA;&#xA;update FI61 set&#xA;FI61.Cod_SKU_CSTO= ComboAscendantOne.SKU_PADRE&#xA;FROM lukerVen.dbo.ComboAscendantOne ComboAscendantOne&#xA;, lukerVen.dbo.FI61 FI61&#xA;WHERE FI61.Cod_SKU7 = ComboAscendantOne.Cod_SKU &#xA;AND FI61.MATNR = ComboAscendantOne.SKU_REGALO &#xA;AND ((FI61.PeriodoContab=@Periodo))&#xA;&#xA;-------------------&#xA;----- Explo Revalor&#xA;-------------------&#xA;delete [dbo].[FI61M1] where PeriodoContab=@Periodo&#xA;insert into [dbo].[FI61M1]&#xA;--select * from [dbo].[FI61M1] where PeriodoContab=@Periodo&#xA;SELECT &#xA;  'St1' MANDT&#xA;, FI61.PeriodoContab&#xA;, RMM1.VORGN&#xA;, FI61.BUKRS&#xA;, RMM1.PRCTR&#xA;, RMM1.HKONT&#xA;, FI61.WERKS&#xA;, right('0000000000'+ltrim(str(ROW_NUMBER() OVER (ORDER BY FI61.MATNR))),6)  AS 'BELNR'&#xA;, FI61.BUZEI&#xA;, FI61.AUART&#xA;, '' AS 'VBELN'&#xA;, '' AS 'VBEL2'&#xA;, '' AS 'POSN2'&#xA;, FI61.KUNNR&#xA;, FI61.KUNNR2&#xA;, '' AS 'Transporte'&#xA;, FI61.MATNR&#xA;, FI61.VKORG&#xA;, FI61.VTWEG&#xA;, FI61.VKBUR&#xA;, FI61.KVGR1&#xA;, sum( RMM1.VALOR_COP&#xA;/ RMWL.Unidades&#xA;* FI61.Unidades&#xA;)&#xA;, 0 AS 'MENGE'&#xA;, 0 AS 'Unidades'&#xA;, 0 AS 'ERFMG'&#xA;, FI61.VKBUREX&#xA;, FI61.VTWEGEX&#xA;, FI61.KVGR1EX&#xA;, FI61.Contabilidad&#xA;, FI61.idRubro&#xA;, FI61.canalViejo&#xA;, FI61.pagador&#xA;, FI61.Linea&#xA;, FI61.canalViejoEX&#xA;, FI61.Fecha&#xA;, FI61.[Cod_SKU7]&#xA;, FI61.[Cod_SKU_CSTO]&#xA;FROM lukerVen.dbo.aplicacionCostoVenta aplicacionCostoVenta&#xA;, lukerVen.dbo.FI61 FI61&#xA;, lukerVen.dbo.RMM1 RMM1&#xA;, lukerVen.dbo.RMWL RMWL&#xA;WHERE aplicacionCostoVenta.HKONT = FI61.HKONT &#xA;AND aplicacionCostoVenta.VORGN = FI61.VORGN &#xA;AND RMM1.BUKRS = FI61.BUKRS &#xA;AND RMM1.Contabilidad = FI61.Contabilidad &#xA;AND RMM1.MATNR = FI61.MATNR &#xA;AND RMM1.PeriodoContab = FI61.PeriodoContab &#xA;AND RMM1.WERKS = FI61.WERKS &#xA;AND RMWL.BUKRS = FI61.BUKRS &#xA;AND RMWL.Contabilidad = FI61.Contabilidad &#xA;AND RMWL.MATNR = FI61.MATNR &#xA;AND RMWL.PeriodoContab = FI61.PeriodoContab &#xA;AND RMWL.WERKS = FI61.WERKS &#xA;AND ((aplicacionCostoVenta.Determ='Factura') &#xA;AND (RMM1.OHP=1) &#xA;AND (FI61.PeriodoContab=@Periodo)&#xA;)&#xA;and RMWL.Unidades &lt;&gt;0&#xA;group by&#xA;  FI61.PeriodoContab&#xA;, RMM1.VORGN&#xA;, FI61.BUKRS&#xA;, RMM1.PRCTR&#xA;, RMM1.HKONT&#xA;, FI61.WERKS&#xA;, FI61.BUZEI&#xA;, FI61.AUART&#xA;, FI61.KUNNR&#xA;, FI61.KUNNR2&#xA;, FI61.MATNR&#xA;, FI61.VKORG&#xA;, FI61.VTWEG&#xA;, FI61.VKBUR&#xA;, FI61.KVGR1&#xA;, FI61.VKBUREX&#xA;, FI61.VTWEGEX&#xA;, FI61.KVGR1EX&#xA;, FI61.Contabilidad&#xA;, FI61.idRubro&#xA;, FI61.canalViejo&#xA;, FI61.pagador&#xA;, FI61.Linea&#xA;, FI61.canalViejoEX&#xA;, FI61.Fecha&#xA;, FI61.[Cod_SKU7]&#xA;, FI61.[Cod_SKU_CSTO]&#xA;insert into [dbo].[FI61M1]&#xA;SELECT &#xA;  '-X' MANDT&#xA;, FI61.PeriodoContab&#xA;, RMM1.VORGN&#xA;, FI61.BUKRS&#xA;, RMM1.PRCTR&#xA;, RMM1.HKONT&#xA;, FI61.WERKS&#xA;, right('0000000000'+ltrim(str(ROW_NUMBER() OVER (ORDER BY FI61.MATNR))),6)  AS 'BELNR'&#xA;, FI61.BUZEI&#xA;, FI61.AUART&#xA;, '' AS 'VBELN'&#xA;, '' AS 'VBEL2'&#xA;, '' AS 'POSN2'&#xA;, FI61.KUNNR&#xA;, FI61.KUNNR2&#xA;, '' AS 'Transporte'&#xA;, FI61.MATNR&#xA;, FI61.VKORG&#xA;, FI61.VTWEG&#xA;, FI61.VKBUR&#xA;, FI61.KVGR1&#xA;, -sum( RMM1.VALOR_COP&#xA;/ RMWL.Unidades&#xA;* FI61.Unidades&#xA;)&#xA;, 0 AS 'MENGE'&#xA;, 0 AS 'Unidades'&#xA;, 0 AS 'ERFMG'&#xA;, FI61.VKBUREX&#xA;, FI61.VTWEGEX&#xA;, FI61.KVGR1EX&#xA;, FI61.Contabilidad&#xA;, FI61.idRubro&#xA;, FI61.canalViejo&#xA;, FI61.pagador&#xA;, FI61.Linea&#xA;, FI61.canalViejoEX&#xA;, FI61.Fecha&#xA;, FI61.[Cod_SKU7]&#xA;, FI61.[Cod_SKU_CSTO]&#xA;FROM lukerVen.dbo.aplicacionCostoVenta aplicacionCostoVenta&#xA;, lukerVen.dbo.FI61 FI61&#xA;, lukerVen.dbo.RMM1 RMM1&#xA;, lukerVen.dbo.RMWL RMWL&#xA;WHERE aplicacionCostoVenta.HKONT = FI61.HKONT &#xA;AND aplicacionCostoVenta.VORGN = FI61.VORGN &#xA;AND RMM1.BUKRS = FI61.BUKRS &#xA;AND RMM1.Contabilidad = FI61.Contabilidad &#xA;AND RMM1.MATNR = FI61.MATNR &#xA;AND RMM1.PeriodoContab = FI61.PeriodoContab &#xA;AND RMM1.WERKS = FI61.WERKS &#xA;AND RMWL.BUKRS = FI61.BUKRS &#xA;AND RMWL.Contabilidad = FI61.Contabilidad &#xA;AND RMWL.MATNR = FI61.MATNR &#xA;AND RMWL.PeriodoContab = FI61.PeriodoContab &#xA;AND RMWL.WERKS = FI61.WERKS &#xA;AND ((aplicacionCostoVenta.Determ='Factura') &#xA;AND (RMM1.OHP=1) &#xA;AND (FI61.PeriodoContab=@Periodo)&#xA;) and FI61.MANDT='-X'&#xA;and RMWL.Unidades &lt;&gt;0&#xA;group by&#xA;  FI61.PeriodoContab&#xA;, RMM1.VORGN&#xA;, FI61.BUKRS&#xA;, RMM1.PRCTR&#xA;, RMM1.HKONT&#xA;, FI61.WERKS&#xA;, FI61.BUZEI&#xA;, FI61.AUART&#xA;, FI61.KUNNR&#xA;, FI61.KUNNR2&#xA;, FI61.MATNR&#xA;, FI61.VKORG&#xA;, FI61.VTWEG&#xA;, FI61.VKBUR&#xA;, FI61.KVGR1&#xA;, FI61.VKBUREX&#xA;, FI61.VTWEGEX&#xA;, FI61.KVGR1EX&#xA;, FI61.Contabilidad&#xA;, FI61.idRubro&#xA;, FI61.canalViejo&#xA;, FI61.pagador&#xA;, FI61.Linea&#xA;, FI61.canalViejoEX&#xA;, FI61.Fecha&#xA;, FI61.[Cod_SKU7]&#xA;, FI61.[Cod_SKU_CSTO]&#xA;&#xA;&#xA;delete [lukerVen].[dbo].RMWL_orphn&#xA;insert into  [lukerVen].[dbo].RMWL_orphn&#xA;SELECT FI61.Contabilidad,FI61.PeriodoContab, FI61.BUKRS, FI61.WERKS, FI61.MATNR, Sum(FI61.Unidades) AS 'Unidades'&#xA;FROM lukerVen.dbo.aplicacionCostoVenta aplicacionCostoVenta&#xA;, lukerVen.dbo.FI61_OrhnRMM FI61&#xA;WHERE aplicacionCostoVenta.HKONT = FI61.HKONT &#xA;AND aplicacionCostoVenta.VORGN = FI61.VORGN &#xA;AND ((aplicacionCostoVenta.Determ='Factura'))&#xA;and (FI61.MANDT&lt;&gt;'-X')&#xA;GROUP BY FI61.PeriodoContab, FI61.BUKRS, FI61.WERKS, FI61.MATNR,FI61.Contabilidad&#xA;&#xA;update RMM1 set&#xA;RMM1.OHP= 2&#xA;FROM lukerVen.dbo.RMM1 RMM1, lukerVen.dbo.RMWL_orphn RMWL&#xA;WHERE RMWL.BUKRS = RMM1.BUKRS AND RMWL.MATNR = RMM1.MATNR &#xA;AND RMWL.PeriodoContab = RMM1.PeriodoContab &#xA;AND RMWL.WERKS = RMM1.WERKS&#xA;AND RMWL.Contabilidad = RMM1.Contabilidad&#xA;&#xA;-------------------&#xA;----- Explo Revalor&#xA;-------------------&#xA;delete [dbo].[FI61M1] where PeriodoContab=@Periodo and MANDT='St2'&#xA;insert into [dbo].[FI61M1]&#xA;--select * from [dbo].[FI61M1] where PeriodoContab=@Periodo&#xA;SELECT &#xA;  'St2' MANDT&#xA;, FI61.PeriodoContab&#xA;, RMM1.VORGN&#xA;, FI61.BUKRS&#xA;, RMM1.PRCTR&#xA;, RMM1.HKONT&#xA;, FI61.WERKS&#xA;, right('0000000000'+ltrim(str(ROW_NUMBER() OVER (ORDER BY FI61.MATNR))),6)  AS 'BELNR'&#xA;, FI61.BUZEI&#xA;, FI61.AUART&#xA;, '' AS 'VBELN'&#xA;, '' AS 'VBEL2'&#xA;, '' AS 'POSN2'&#xA;, FI61.KUNNR&#xA;, FI61.KUNNR2&#xA;, '' AS 'Transporte'&#xA;, FI61.MATNR&#xA;, FI61.VKORG&#xA;, FI61.VTWEG&#xA;, FI61.VKBUR&#xA;, FI61.KVGR1&#xA;, sum( RMM1.VALOR_COP&#xA;/ RMWL.Unidades&#xA;* FI61.Unidades&#xA;)&#xA;, 0 AS 'MENGE'&#xA;, 0 AS 'Unidades'&#xA;, 0 AS 'ERFMG'&#xA;, FI61.VKBUREX&#xA;, FI61.VTWEGEX&#xA;, FI61.KVGR1EX&#xA;, FI61.Contabilidad&#xA;, FI61.idRubro&#xA;, FI61.canalViejo&#xA;, FI61.pagador&#xA;, FI61.Linea&#xA;, FI61.canalViejoEX&#xA;, FI61.Fecha&#xA;, FI61.[Cod_SKU7]&#xA;, FI61.[Cod_SKU_CSTO]&#xA;FROM lukerVen.dbo.aplicacionCostoVenta aplicacionCostoVenta&#xA;, lukerVen.dbo.FI61_OrhnRMM FI61&#xA;, lukerVen.dbo.RMM1 RMM1&#xA;, lukerVen.dbo.RMWL_orphn RMWL&#xA;WHERE aplicacionCostoVenta.HKONT = FI61.HKONT &#xA;AND aplicacionCostoVenta.VORGN = FI61.VORGN &#xA;AND RMM1.BUKRS = FI61.BUKRS &#xA;AND RMM1.Contabilidad = FI61.Contabilidad &#xA;AND RMM1.MATNR = FI61.MATNR &#xA;AND RMM1.PeriodoContab = FI61.PeriodoContab &#xA;AND RMM1.WERKS = FI61.WERKS &#xA;AND RMWL.BUKRS = FI61.BUKRS &#xA;AND RMWL.Contabilidad = FI61.Contabilidad &#xA;AND RMWL.MATNR = FI61.MATNR &#xA;AND RMWL.PeriodoContab = FI61.PeriodoContab &#xA;AND RMWL.WERKS = FI61.WERKS &#xA;AND ((aplicacionCostoVenta.Determ='Factura') &#xA;AND (RMM1.OHP=2) &#xA;AND (FI61.PeriodoContab=@Periodo)&#xA;)&#xA;and RMWL.Unidades &lt;&gt;0&#xA;group by&#xA;  FI61.PeriodoContab&#xA;, RMM1.VORGN&#xA;, FI61.BUKRS&#xA;, RMM1.PRCTR&#xA;, RMM1.HKONT&#xA;, FI61.WERKS&#xA;, FI61.BUZEI&#xA;, FI61.AUART&#xA;, FI61.KUNNR&#xA;, FI61.KUNNR2&#xA;, FI61.MATNR&#xA;, FI61.VKORG&#xA;, FI61.VTWEG&#xA;, FI61.VKBUR&#xA;, FI61.KVGR1&#xA;, FI61.VKBUREX&#xA;, FI61.VTWEGEX&#xA;, FI61.KVGR1EX&#xA;, FI61.Contabilidad&#xA;, FI61.idRubro&#xA;, FI61.canalViejo&#xA;, FI61.pagador&#xA;, FI61.Linea&#xA;, FI61.canalViejoEX&#xA;, FI61.Fecha&#xA;, FI61.[Cod_SKU7]&#xA;, FI61.[Cod_SKU_CSTO]&#xA;&#xA;&#xA;delete [lukerVen].[dbo].[FI61RegaloAscendPlus]  where PeriodoContab =@Periodo&#xA;&#xA;insert into [lukerVen].[dbo].[FI61RegaloAscendPlus]&#xA;SELECT 'A+', FI61.PeriodoContab, FI61.VORGN, FI61.BUKRS, FI61.PRCTR, FI61.HKONT, FI61.WERKS, FI61.BELNR, FI61.BUZEI, FI61.AUART, FI61.VBELN, FI61.VBEL2, FI61.POSN2, FI61.KUNNR, FI61.KUNNR2, FI61.Transporte, FI61.MATNR, FI61.VKORG, FI61.VTWEG, FI61.VKBUR, FI61.KVGR1&#xA;, FI61.VALOR_COP * ComboAscendantPlus.PorcentPrecioVenta&#xA;, FI61.MENGE * ComboAscendantPlus.PorcentPrecioVenta&#xA;, FI61.Unidades * ComboAscendantPlus.PorcentPrecioVenta&#xA;, FI61.ERFMG * ComboAscendantPlus.PorcentPrecioVenta&#xA;, FI61.VKBUREX, FI61.VTWEGEX, FI61.KVGR1EX, FI61.Contabilidad, FI61.idRubro, FI61.canalViejo, FI61.pagador, FI61.Linea, FI61.canalViejoEX, FI61.Fecha, FI61.Cod_SKU7, ComboAscendantPlus.SKU_PADRE&#xA;FROM lukerVen.dbo.ComboAscendantPlus ComboAscendantPlus, lukerVen.dbo.FI61 FI61&#xA;WHERE FI61.Cod_SKU7 = ComboAscendantPlus.Cod_SKU AND FI61.MATNR = ComboAscendantPlus.SKU_REGALO &#xA;AND ((FI61.PeriodoContab =@Periodo))&#xA;&#xA;insert into [lukerVen].[dbo].[FI61RegaloAscendPlus]&#xA;SELECT 'C-', FI61RegaloAscendPlus.PeriodoContab, FI61RegaloAscendPlus.VORGN, FI61RegaloAscendPlus.BUKRS, FI61RegaloAscendPlus.PRCTR, FI61RegaloAscendPlus.HKONT, FI61RegaloAscendPlus.WERKS, FI61RegaloAscendPlus.BELNR, FI61RegaloAscendPlus.BUZEI, FI61RegaloAscendPlus.AUART, FI61RegaloAscendPlus.VBELN, FI61RegaloAscendPlus.VBEL2, FI61RegaloAscendPlus.POSN2, FI61RegaloAscendPlus.KUNNR, FI61RegaloAscendPlus.KUNNR2, FI61RegaloAscendPlus.Transporte, FI61RegaloAscendPlus.MATNR, FI61RegaloAscendPlus.VKORG, FI61RegaloAscendPlus.VTWEG, FI61RegaloAscendPlus.VKBUR, FI61RegaloAscendPlus.KVGR1&#xA;, -Sum(FI61RegaloAscendPlus.VALOR_COP)&#xA;, -Sum(FI61RegaloAscendPlus.MENGE)&#xA;, -Sum(FI61RegaloAscendPlus.Unidades)&#xA;, -Sum(FI61RegaloAscendPlus.ERFMG)&#xA;, FI61RegaloAscendPlus.VKBUREX, FI61RegaloAscendPlus.VTWEGEX, FI61RegaloAscendPlus.KVGR1EX, FI61RegaloAscendPlus.Contabilidad, FI61RegaloAscendPlus.idRubro, FI61RegaloAscendPlus.canalViejo, FI61RegaloAscendPlus.pagador, FI61RegaloAscendPlus.Linea, FI61RegaloAscendPlus.canalViejoEX, FI61RegaloAscendPlus.Fecha, FI61RegaloAscendPlus.Cod_SKU7, ''&#xA;FROM lukerVen.dbo.FI61RegaloAscendPlus FI61RegaloAscendPlus&#xA;Where ((FI61RegaloAscendPlus.PeriodoContab =@Periodo))&#xA;group by &#xA; FI61RegaloAscendPlus.PeriodoContab, FI61RegaloAscendPlus.VORGN, FI61RegaloAscendPlus.BUKRS, FI61RegaloAscendPlus.PRCTR, FI61RegaloAscendPlus.HKONT, FI61RegaloAscendPlus.WERKS, FI61RegaloAscendPlus.BELNR, FI61RegaloAscendPlus.BUZEI, FI61RegaloAscendPlus.AUART, FI61RegaloAscendPlus.VBELN, FI61RegaloAscendPlus.VBEL2, FI61RegaloAscendPlus.POSN2, FI61RegaloAscendPlus.KUNNR, FI61RegaloAscendPlus.KUNNR2, FI61RegaloAscendPlus.Transporte, FI61RegaloAscendPlus.MATNR, FI61RegaloAscendPlus.VKORG, FI61RegaloAscendPlus.VTWEG, FI61RegaloAscendPlus.VKBUR, FI61RegaloAscendPlus.KVGR1&#xA; , FI61RegaloAscendPlus.VKBUREX, FI61RegaloAscendPlus.VTWEGEX, FI61RegaloAscendPlus.KVGR1EX, FI61RegaloAscendPlus.Contabilidad, FI61RegaloAscendPlus.idRubro, FI61RegaloAscendPlus.canalViejo, FI61RegaloAscendPlus.pagador, FI61RegaloAscendPlus.Linea, FI61RegaloAscendPlus.canalViejoEX, FI61RegaloAscendPlus.Fecha, FI61RegaloAscendPlus.Cod_SKU7&#xA;&#xA;&#xA;Print @Periodo" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\trc Lin"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Tarea Ejecutar SQL"
      DTS:DTSID="{B31A2B4E-D5D7-4A90-AAFC-31880A4D873B}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="trc Lin"
      DTS:ThreadHint="2">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{2CB65742-8E44-4369-852E-A9D127478E71}"
          SQLTask:SqlStatementSource="truncate table [lukerVen].[SD].[Lineas]" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{767F0FB2-1E63-41CE-A8CA-C0FC3CE43C39}"
      DTS:From="Package\Presentacion Individual"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Descuento"
      DTS:Value="2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{F290E077-C96A-46E9-9B5C-7EB86B7F6CB0}"
      DTS:From="Package\Fact"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Kilos Combos - Cabas" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 10]"
      DTS:CreationName=""
      DTS:DTSID="{78A7F811-7072-470C-8FF8-673BA26AE4C4}"
      DTS:From="Package\Dona"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 10"
      DTS:To="Package\Kilos Combos - Cabas"
      DTS:Value="2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 11]"
      DTS:CreationName=""
      DTS:DTSID="{74216F3D-0377-40C1-9CBE-FEC0B06564D6}"
      DTS:From="Package\Lineas"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 11"
      DTS:To="Package\Profit C" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 12]"
      DTS:CreationName=""
      DTS:DTSID="{6CE273BB-F837-4AAE-B3BB-630C03103663}"
      DTS:From="Package\Insert Clientes"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 12"
      DTS:To="Package\Jer Y VENTA POST dane" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 13]"
      DTS:CreationName=""
      DTS:DTSID="{8697A4CA-9469-4F73-A3DA-AC23864849BB}"
      DTS:From="Package\Jer Y VENTA POST dane"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 13"
      DTS:To="Package\Sync Cliente CT Dim Ojo el 1o" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 14]"
      DTS:CreationName=""
      DTS:DTSID="{8EF846B3-6D09-4C12-B8FE-9336F816F2D0}"
      DTS:From="Package\Sync Cliente CT Dim Ojo el 1o"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 14"
      DTS:To="Package\Prod 23" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 15]"
      DTS:CreationName=""
      DTS:DTSID="{F9D59BDC-925E-4AEA-8A83-FDAAA710859D}"
      DTS:From="Package\PPTO MAE Innova rubros"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 15"
      DTS:To="Package\Descuento"
      DTS:Value="2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 16]"
      DTS:CreationName=""
      DTS:DTSID="{B25E9995-B3D9-492D-B786-69E4D12C7347}"
      DTS:From="Package\Profit C"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 16"
      DTS:To="Package\rubros" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 17]"
      DTS:CreationName=""
      DTS:DTSID="{8EA49DC3-141C-4166-AD49-24E7924AB9E7}"
      DTS:From="Package\inact cli sin h"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 17"
      DTS:To="Package\trc Lin" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 18]"
      DTS:CreationName=""
      DTS:DTSID="{D7DBD191-12B1-41AD-A4C9-36643AF3641F}"
      DTS:From="Package\Prod 23"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 18"
      DTS:To="Package\Sync Costo 2020" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{2B3D1AAD-D989-482B-99C7-92459FE6469A}"
      DTS:From="Package\Descuento"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Pedidos"
      DTS:Value="2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{29A7D945-0DE9-439A-BB29-A28EF442B807}"
      DTS:From="Package\Pedidos"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\Fact"
      DTS:Value="2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 4]"
      DTS:CreationName=""
      DTS:DTSID="{DA461A5C-9EEC-4F96-9DD7-6BF2DCA6AE94}"
      DTS:From="Package\Kilos Combos - Cabas"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 4"
      DTS:To="Package\Cartera" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 5]"
      DTS:CreationName=""
      DTS:DTSID="{C3438E56-D19F-4F5F-A1B5-7D37D2CFDDCD}"
      DTS:From="Package\Expl Fac"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 5"
      DTS:To="Package\inact cli sin h" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 6]"
      DTS:CreationName=""
      DTS:DTSID="{85A14267-1149-4E49-AE0C-B0B3B7E90BFC}"
      DTS:From="Package\Sync Costo 2020"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 6"
      DTS:To="Package\Presentacion Individual" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 7]"
      DTS:CreationName=""
      DTS:DTSID="{DD70DFA4-3F29-4737-8C26-3C9971EA720F}"
      DTS:From="Package\Fact"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 7"
      DTS:To="Package\Dona" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 8]"
      DTS:CreationName=""
      DTS:DTSID="{AC2A192D-5E88-4DB1-8A46-31F454A50F82}"
      DTS:From="Package\Presentacion Individual"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 8"
      DTS:To="Package\PPTO MAE Innova rubros"
      DTS:Value="2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 9]"
      DTS:CreationName=""
      DTS:DTSID="{0E217893-5A94-4EEB-97DF-2808D03A278C}"
      DTS:From="Package\Descuento"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 9"
      DTS:To="Package\Cod Dcto" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 14]"
      DTS:CreationName=""
      DTS:DTSID="{DCF0CD65-4E32-4083-81F7-A026BC80D01C}"
      DTS:From="Package\trc Lin"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 14"
      DTS:To="Package\Lineas" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 2]"
      DTS:CreationName=""
      DTS:DTSID="{4E228227-FF11-4CCA-8D34-2FD49AC5CAAE}"
      DTS:From="Package\Explo Combo"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 2"
      DTS:To="Package\Expl Desc" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 3]"
      DTS:CreationName=""
      DTS:DTSID="{52952EDE-8008-440D-B918-AB44AD748207}"
      DTS:From="Package\Lista Precios"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 3"
      DTS:To="Package\Explo Combo" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 4]"
      DTS:CreationName=""
      DTS:DTSID="{598708B6-A9BA-4832-93F8-199389812125}"
      DTS:From="Package\Kilos Combos - Cabas"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 4"
      DTS:To="Package\Lista Precios" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 5]"
      DTS:CreationName=""
      DTS:DTSID="{9B3EB86F-E612-43F2-AC0B-E36D71B05690}"
      DTS:From="Package\Expl Desc"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 5"
      DTS:To="Package\Expl Fac" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="64" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="136,44"
          Id="Package\Cartera"
          TopLeft="155.594048770593,564.054642346061" />
        <NodeLayout
          Size="136,44"
          Id="Package\Cod Dcto"
          TopLeft="194.719701574121,287.460655952334" />
        <NodeLayout
          Size="136,44"
          Id="Package\Descuento"
          TopLeft="31.1,209.700115445863" />
        <NodeLayout
          Size="103.428571428572,41.7142857142858"
          Id="Package\Dona"
          TopLeft="11.1726190314001,473.367601367373" />
        <NodeLayout
          Size="169.714285714286,41.7142857142858"
          Id="Package\Expl Desc"
          TopLeft="345.47959749599,440.197855886484" />
        <NodeLayout
          Size="117.714285714286,41.7142857142858"
          Id="Package\Expl Fac"
          TopLeft="361.76531161627,507.462842824245" />
        <NodeLayout
          Size="140,41.7142857142858"
          Id="Package\Explo Combo"
          TopLeft="360.27959749599,367.821386190544" />
        <NodeLayout
          Size="98.2857142857143,41.7142857142858"
          Id="Package\Fact"
          TopLeft="31.1,368.498593339839" />
        <NodeLayout
          Size="140,41.7142857142858"
          Id="Package\inact cli sin h"
          TopLeft="400.653068047571,586.388054656102" />
        <NodeLayout
          Size="142.285714285715,41.7142857142858"
          Id="Package\Insert Clientes"
          TopLeft="777.142870377521,21.071895720362" />
        <NodeLayout
          Size="143.428571428572,41.7142857142858"
          Id="Package\Jer Y VENTA POST dane"
          TopLeft="767.740121481108,122.080040445163" />
        <NodeLayout
          Size="157.714285714286,59.4285714285715"
          Id="Package\Kilos Combos - Cabas"
          TopLeft="148.219048770593,472.894264987571" />
        <NodeLayout
          Size="108,41.7142857142858"
          Id="Package\Lineas"
          TopLeft="601.119057399076,611.640076009031" />
        <NodeLayout
          Size="136.571428571429,41.7142857142858"
          Id="Package\Lista Precios"
          TopLeft="203.662105215454,370.41410331374" />
        <NodeLayout
          Size="136,44"
          Id="Package\Pedidos"
          TopLeft="31.1,286.838215981348" />
        <NodeLayout
          Size="187.428571428572,41.7142857142858"
          Id="Package\PPTO MAE Innova rubros"
          TopLeft="295.023814454371,164.1616365572" />
        <NodeLayout
          Size="187.428571428572,41.7142857142858"
          Id="Package\Presentacion Individual"
          TopLeft="5.5,123.517461264367" />
        <NodeLayout
          Size="114.285714285715,41.7142857142858"
          Id="Package\Prod 23"
          TopLeft="219.047622777978,25.830065721734" />
        <NodeLayout
          Size="113.714285714286,41.7142857142858"
          Id="Package\Profit C"
          TopLeft="804,623.345958147478" />
        <NodeLayout
          Size="108.571428571429,41.7142857142858"
          Id="Package\rubros"
          TopLeft="986.666683469501,585.22054936476" />
        <NodeLayout
          Size="173.714285714286,41.7142857142858"
          Id="Package\Sync Cliente CT Dim Ojo el 1o"
          TopLeft="462.073704540577,39.973182567677" />
        <NodeLayout
          Size="156.571428571429,41.7142857142858"
          Id="Package\Sync Costo 2020"
          TopLeft="29.3081633290234,36.6783499248677" />
        <NodeLayout
          Size="108,41.7142857142858"
          Id="Package\trc Lin"
          TopLeft="600.571438799099,524.859764204498" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="99.1,165.117461264367">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,44.5826541814965"
              Start="0,0"
              End="0,37.0826541814965">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,37.0826541814965" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-25.304453125,12.7366395907483,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="95.3666666666667,410.098593339839">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="106.719048770593,62.795671647732"
              Start="0,0"
              End="106.719048770593,55.295671647732">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.6298920592307" />
                  <mssgle:CubicBezierSegment
                    Point1="0,27.6298920592307"
                    Point2="0,31.6298920592307"
                    Point3="4,31.6298920592307" />
                  <mssgle:LineSegment
                    End="102.719048770593,31.6298920592307" />
                  <mssgle:CubicBezierSegment
                    Point1="102.719048770593,31.6298920592307"
                    Point2="106.719048770593,31.6298920592307"
                    Point3="106.719048770593,35.6298920592307" />
                  <mssgle:LineSegment
                    End="106.719048770593,55.295671647732" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 10]"
          TopLeft="114.3726190314,494.167601367373">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="33.8464297391929,8.32666362019768"
              Start="0,0"
              End="26.3464297391929,8.32666362019768">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="12.9232148695964,0" />
                  <mssgle:CubicBezierSegment
                    Point1="12.9232148695964,0"
                    Point2="16.9232148695964,0"
                    Point3="16.9232148695964,4" />
                  <mssgle:LineSegment
                    End="16.9232148695964,4.32666362019768" />
                  <mssgle:CubicBezierSegment
                    Point1="16.9232148695964,4.32666362019768"
                    Point2="16.9232148695964,8.32666362019768"
                    Point3="20.9232148695964,8.32666362019768" />
                  <mssgle:LineSegment
                    End="26.3464297391929,8.32666362019768" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8.3812382554036,-17.609375,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 11]"
          TopLeft="709.119057399076,641.093017078255">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="94.8809426009237,0"
              Start="0,0"
              End="87.3809426009237,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="87.3809426009237,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 12]"
          TopLeft="848.285727520378,62.7861814346477">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="13.7401082464438,59.2938590105157"
              Start="0,0"
              End="13.7401082464438,51.7938590105157">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.1838265050578" />
                  <mssgle:CubicBezierSegment
                    Point1="0,31.1838265050578"
                    Point2="0,35.1838265050578"
                    Point3="4,35.1838265050578" />
                  <mssgle:LineSegment
                    End="9.74010824644381,35.1838265050578" />
                  <mssgle:CubicBezierSegment
                    Point1="9.74010824644381,35.1838265050578"
                    Point2="13.7401082464438,35.1838265050578"
                    Point3="13.7401082464438,39.1838265050578" />
                  <mssgle:LineSegment
                    End="13.7401082464438,51.7938590105157" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 13]"
          TopLeft="816.882978623965,122.080040445163">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-267.952131226245,-40.3925721632007"
              Start="0,0"
              End="-267.952131226245,-32.8925721632007">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-12.4244028654149" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-12.4244028654149"
                    Point2="0,-16.4244028654149"
                    Point3="-4,-16.4244028654149" />
                  <mssgle:LineSegment
                    End="-263.952131226245,-16.4244028654149" />
                  <mssgle:CubicBezierSegment
                    Point1="-263.952131226245,-16.4244028654149"
                    Point2="-267.952131226245,-16.4244028654149"
                    Point3="-267.952131226245,-20.4244028654149" />
                  <mssgle:LineSegment
                    End="-267.952131226245,-32.8925721632007" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 14]"
          TopLeft="462.073704540577,60.8303254248198">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-128.740367476884,-14.143116845943"
              Start="0,0"
              End="-121.240367476884,-14.143116845943">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-60.3701837384421,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-60.3701837384421,0"
                    Point2="-64.3701837384421,0"
                    Point3="-64.3701837384421,-4" />
                  <mssgle:LineSegment
                    End="-64.3701837384421,-10.143116845943" />
                  <mssgle:CubicBezierSegment
                    Point1="-64.3701837384421,-10.143116845943"
                    Point2="-64.3701837384421,-14.143116845943"
                    Point3="-68.3701837384421,-14.143116845943" />
                  <mssgle:LineSegment
                    End="-121.240367476884,-14.143116845943" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 15]"
          TopLeft="295.023814454371,190.5616365572">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-127.923814454371,41.1384788886634"
              Start="0,0"
              End="-120.423814454371,41.1384788886634">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-50.0122772140677,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-50.0122772140677,0"
                    Point2="-54.0122772140677,0"
                    Point3="-54.0122772140677,4" />
                  <mssgle:LineSegment
                    End="-54.0122772140677,37.1384788886634" />
                  <mssgle:CubicBezierSegment
                    Point1="-54.0122772140677,37.1384788886634"
                    Point2="-54.0122772140677,41.1384788886634"
                    Point3="-58.0122772140677,41.1384788886634" />
                  <mssgle:LineSegment
                    End="-120.423814454371,41.1384788886634" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-79.3167303390677,-17.609375,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 16]"
          TopLeft="917.6,644.145958147478">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="69.0666834695005,-38.1254087827177"
              Start="0,0"
              End="61.5666834695005,-38.1254087827177">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="30.5333417347503,0" />
                  <mssgle:CubicBezierSegment
                    Point1="30.5333417347503,0"
                    Point2="34.5333417347503,0"
                    Point3="34.5333417347503,-4" />
                  <mssgle:LineSegment
                    End="34.5333417347503,-34.1254087827177" />
                  <mssgle:CubicBezierSegment
                    Point1="34.5333417347503,-34.1254087827177"
                    Point2="34.5333417347503,-38.1254087827177"
                    Point3="38.5333417347503,-38.1254087827177" />
                  <mssgle:LineSegment
                    End="61.5666834695005,-38.1254087827177" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 17]"
          TopLeft="540.653068047571,607.188054656102">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="59.9183707515282,-61.5282904516043"
              Start="0,0"
              End="52.4183707515282,-61.5282904516043">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="25.9591853757641,0" />
                  <mssgle:CubicBezierSegment
                    Point1="25.9591853757641,0"
                    Point2="29.9591853757641,0"
                    Point3="29.9591853757641,-4" />
                  <mssgle:LineSegment
                    End="29.9591853757641,-57.5282904516043" />
                  <mssgle:CubicBezierSegment
                    Point1="29.9591853757641,-57.5282904516043"
                    Point2="29.9591853757641,-61.5282904516043"
                    Point3="33.9591853757641,-61.5282904516043" />
                  <mssgle:LineSegment
                    End="52.4183707515282,-61.5282904516043" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 18]"
          TopLeft="219.047622777978,46.630065721734">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-32.9394594489544,10.8482842031336"
              Start="0,0"
              End="-25.4394594489544,10.8482842031336">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-12.4697297244772,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-12.4697297244772,0"
                    Point2="-16.4697297244772,0"
                    Point3="-16.4697297244772,4" />
                  <mssgle:LineSegment
                    End="-16.4697297244772,6.84828420313364" />
                  <mssgle:CubicBezierSegment
                    Point1="-16.4697297244772,6.84828420313364"
                    Point2="-16.4697297244772,10.8482842031336"
                    Point3="-20.4697297244772,10.8482842031336" />
                  <mssgle:LineSegment
                    End="-25.4394594489544,10.8482842031336" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="77.7666666666667,253.700115445863">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="21.3333333333333,33.138100535485"
              Start="0,0"
              End="21.3333333333333,25.638100535485">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,9.48643626444157" />
                  <mssgle:CubicBezierSegment
                    Point1="0,9.48643626444157"
                    Point2="0,13.4864362644416"
                    Point3="4,13.4864362644416" />
                  <mssgle:LineSegment
                    End="17.3333333333333,13.4864362644416" />
                  <mssgle:CubicBezierSegment
                    Point1="17.3333333333333,13.4864362644416"
                    Point2="21.3333333333333,13.4864362644416"
                    Point3="21.3333333333333,17.4864362644416" />
                  <mssgle:LineSegment
                    End="21.3333333333333,25.638100535485" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-14.6377864583334,18.4864362644416,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="99.1,330.838215981348">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-18.8,37.660377358491"
              Start="0,0"
              End="-18.8,30.160377358491">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,14.8301886792455" />
                  <mssgle:CubicBezierSegment
                    Point1="0,14.8301886792455"
                    Point2="0,18.8301886792455"
                    Point3="-4,18.8301886792455" />
                  <mssgle:LineSegment
                    End="-14.8,18.8301886792455" />
                  <mssgle:CubicBezierSegment
                    Point1="-14.8,18.8301886792455"
                    Point2="-18.8,18.8301886792455"
                    Point3="-18.8,22.8301886792455" />
                  <mssgle:LineSegment
                    End="-18.8,30.160377358491" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-34.704453125,23.8301886792455,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 4]"
          TopLeft="225.306548770593,532.094264987571">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,31.96037735849"
              Start="0,0"
              End="0,24.46037735849">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,24.46037735849" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 5]"
          TopLeft="420.56531161627,549.062842824245">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="28.0877564313012,37.3252118318568"
              Start="0,0"
              End="28.0877564313012,29.8252118318568">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.1420748155083" />
                  <mssgle:CubicBezierSegment
                    Point1="0,18.1420748155083"
                    Point2="0,22.1420748155083"
                    Point3="4,22.1420748155083" />
                  <mssgle:LineSegment
                    End="24.0877564313012,22.1420748155083" />
                  <mssgle:CubicBezierSegment
                    Point1="24.0877564313012,22.1420748155083"
                    Point2="28.0877564313012,22.1420748155083"
                    Point3="28.0877564313012,26.1420748155083" />
                  <mssgle:LineSegment
                    End="28.0877564313012,29.8252118318568" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 6]"
          TopLeft="107.708163329023,78.2783499248677">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-8.60816332902338,45.2391113394991"
              Start="0,0"
              End="-8.60816332902338,37.7391113394991">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.6195556697496" />
                  <mssgle:CubicBezierSegment
                    Point1="0,18.6195556697496"
                    Point2="0,22.6195556697496"
                    Point3="-4,22.6195556697496" />
                  <mssgle:LineSegment
                    End="-4.60816332902338,22.6195556697496" />
                  <mssgle:CubicBezierSegment
                    Point1="-4.60816332902338,22.6195556697496"
                    Point2="-8.60816332902338,22.6195556697496"
                    Point3="-8.60816332902338,26.6195556697496" />
                  <mssgle:LineSegment
                    End="-8.60816332902338,37.7391113394991" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 7]"
          TopLeft="64.0029761823667,410.098593339839">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,63.2690080275343"
              Start="0,0"
              End="0,55.7690080275343">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,55.7690080275343" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 8]"
          TopLeft="192.7,144.317461264366">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="102.323814454371,40.6441752928331"
              Start="0,0"
              End="94.8238144543707,40.6441752928331">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="47.1619072271854,0" />
                  <mssgle:CubicBezierSegment
                    Point1="47.1619072271854,0"
                    Point2="51.1619072271854,0"
                    Point3="51.1619072271854,4" />
                  <mssgle:LineSegment
                    End="51.1619072271854,36.6441752928331" />
                  <mssgle:CubicBezierSegment
                    Point1="51.1619072271854,36.6441752928331"
                    Point2="51.1619072271854,40.6441752928331"
                    Point3="55.1619072271854,40.6441752928331" />
                  <mssgle:LineSegment
                    End="94.8238144543707,40.6441752928331" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="25.8574541021854,-17.609375,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 9]"
          TopLeft="120.433333333333,253.700115445863">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="142.286368240788,33.7605405064713"
              Start="0,0"
              End="142.286368240788,26.2605405064713">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,9.73975485728482" />
                  <mssgle:CubicBezierSegment
                    Point1="0,9.73975485728482"
                    Point2="0,13.7397548572848"
                    Point3="4,13.7397548572848" />
                  <mssgle:LineSegment
                    End="138.286368240788,13.7397548572848" />
                  <mssgle:CubicBezierSegment
                    Point1="138.286368240788,13.7397548572848"
                    Point2="142.286368240788,13.7397548572848"
                    Point3="142.286368240788,17.7397548572848" />
                  <mssgle:LineSegment
                    End="142.286368240788,26.2605405064713" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 14]"
          TopLeft="654.845248099088,566.459764204498">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,45.1803118045335"
              Start="0,0"
              End="0,37.6803118045335">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,37.6803118045335" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 2]"
          TopLeft="430.27959749599,409.421386190545">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,30.7764696959389"
              Start="0,0"
              End="0,23.2764696959389">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.2764696959389" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 3]"
          TopLeft="293.528771882121,412.01410331374">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="114.750825613869,-2.59271712319554"
              Start="0,0"
              End="114.750825613869,4.90728287680446">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,18.5"
                    Point2="0,22.5"
                    Point3="4,22.5" />
                  <mssgle:LineSegment
                    End="110.750825613869,22.5" />
                  <mssgle:CubicBezierSegment
                    Point1="110.750825613869,22.5"
                    Point2="114.750825613869,22.5"
                    Point3="114.750825613869,18.5" />
                  <mssgle:LineSegment
                    End="114.750825613869,4.90728287680446" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 4]"
          TopLeft="251.273910326357,472.894264987571">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,-60.880161673831"
              Start="0,0"
              End="0,-53.380161673831">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-53.380161673831" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 5]"
          TopLeft="430.27959749599,481.797855886484">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-27.9809525463867,25.6649869377612"
              Start="0,0"
              End="-27.9809525463867,18.1649869377612">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,11.1922942812788" />
                  <mssgle:CubicBezierSegment
                    Point1="0,11.1922942812788"
                    Point2="0,15.1922942812788"
                    Point3="-4,15.1922942812788" />
                  <mssgle:LineSegment
                    End="-23.9809525463867,15.1922942812788" />
                  <mssgle:CubicBezierSegment
                    Point1="-23.9809525463867,15.1922942812788"
                    Point2="-27.9809525463867,15.1922942812788"
                    Point3="-27.9809525463867,19.1922942812788" />
                  <mssgle:LineSegment
                    End="-27.9809525463867,18.1649869377612" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Lineas">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="111.428571428572,41.7142857142858"
          Id="Package\Lineas\Ven 01"
          TopLeft="54.2857152101945,31.2000004375683" />
        <NodeLayout
          Size="168,41.7142857142858"
          Id="Package\Lineas\Destino de OLE DB"
          TopLeft="29.714286220317,140.094119611826" />
        <EdgeLayout
          Id="Package\Lineas.Paths[Salida de origen de OLE DB]"
          TopLeft="111.800000715256,72.8000004375683">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,67.2941191742577"
              Start="0,0"
              End="0,59.7941191742577">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,59.7941191742577" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Lineas\Destino de OLE DB">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Lineas\Ven 01">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>